// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: ddex/pie/v10/v10.proto

package v10

import (
	avs "github.com/alecsavvy/ddex-go/gen/ddex/avs"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PieMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageHeader"
	MessageHeader *MessageHeader `protobuf:"bytes,1,opt,name=message_header,json=messageHeader,proto3" json:"message_header,omitempty" xml:"MessageHeader"`
	// @gotags: xml:"MetadataSourceList"
	MetadataSourceList *MetadataSourceList `protobuf:"bytes,2,opt,name=metadata_source_list,json=metadataSourceList,proto3" json:"metadata_source_list,omitempty" xml:"MetadataSourceList"`
	// @gotags: xml:"PartyList"
	PartyList *PartyList `protobuf:"bytes,3,opt,name=party_list,json=partyList,proto3" json:"party_list,omitempty" xml:"PartyList"`
	// @gotags: xml:"AvsVersionId,attr"
	AvsVersionId string `protobuf:"bytes,4,opt,name=avs_version_id,json=avsVersionId,proto3" json:"avs_version_id,omitempty" xml:"AvsVersionId,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,5,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PieMessage) Reset() {
	*x = PieMessage{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PieMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PieMessage) ProtoMessage() {}

func (x *PieMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PieMessage.ProtoReflect.Descriptor instead.
func (*PieMessage) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{0}
}

func (x *PieMessage) GetMessageHeader() *MessageHeader {
	if x != nil {
		return x.MessageHeader
	}
	return nil
}

func (x *PieMessage) GetMetadataSourceList() *MetadataSourceList {
	if x != nil {
		return x.MetadataSourceList
	}
	return nil
}

func (x *PieMessage) GetPartyList() *PartyList {
	if x != nil {
		return x.PartyList
	}
	return nil
}

func (x *PieMessage) GetAvsVersionId() string {
	if x != nil {
		return x.AvsVersionId
	}
	return ""
}

func (x *PieMessage) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type PieRequestMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageHeader"
	MessageHeader *MessageHeader `protobuf:"bytes,1,opt,name=message_header,json=messageHeader,proto3" json:"message_header,omitempty" xml:"MessageHeader"`
	// @gotags: xml:"RequestedParty"
	RequestedParty []*RequestedParty `protobuf:"bytes,2,rep,name=requested_party,json=requestedParty,proto3" json:"requested_party,omitempty" xml:"RequestedParty"`
	// @gotags: xml:"AvsVersionId,attr"
	AvsVersionId string `protobuf:"bytes,3,opt,name=avs_version_id,json=avsVersionId,proto3" json:"avs_version_id,omitempty" xml:"AvsVersionId,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,4,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PieRequestMessage) Reset() {
	*x = PieRequestMessage{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PieRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PieRequestMessage) ProtoMessage() {}

func (x *PieRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PieRequestMessage.ProtoReflect.Descriptor instead.
func (*PieRequestMessage) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{1}
}

func (x *PieRequestMessage) GetMessageHeader() *MessageHeader {
	if x != nil {
		return x.MessageHeader
	}
	return nil
}

func (x *PieRequestMessage) GetRequestedParty() []*RequestedParty {
	if x != nil {
		return x.RequestedParty
	}
	return nil
}

func (x *PieRequestMessage) GetAvsVersionId() string {
	if x != nil {
		return x.AvsVersionId
	}
	return ""
}

func (x *PieRequestMessage) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type Feed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Choice:
	//
	//	*Feed_Author
	//	*Feed_Category
	//	*Feed_Contributor
	//	*Feed_Generator
	//	*Feed_Icon
	//	*Feed_Id
	//	*Feed_Link
	//	*Feed_Logo
	//	*Feed_Rights
	//	*Feed_Subtitle
	//	*Feed_Title
	//	*Feed_Updated
	//	*Feed_Entry
	Choice        isFeed_Choice `protobuf_oneof:"choice"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Feed) Reset() {
	*x = Feed{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{2}
}

func (x *Feed) GetChoice() isFeed_Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *Feed) GetAuthor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Author); ok {
			return x.Author
		}
	}
	return nil
}

func (x *Feed) GetCategory() *Category {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Category); ok {
			return x.Category
		}
	}
	return nil
}

func (x *Feed) GetContributor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Contributor); ok {
			return x.Contributor
		}
	}
	return nil
}

func (x *Feed) GetGenerator() *Generator {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Generator); ok {
			return x.Generator
		}
	}
	return nil
}

func (x *Feed) GetIcon() *Icon {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Icon); ok {
			return x.Icon
		}
	}
	return nil
}

func (x *Feed) GetId() *Id {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *Feed) GetLink() *Link {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Link); ok {
			return x.Link
		}
	}
	return nil
}

func (x *Feed) GetLogo() *Logo {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Logo); ok {
			return x.Logo
		}
	}
	return nil
}

func (x *Feed) GetRights() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Rights); ok {
			return x.Rights
		}
	}
	return nil
}

func (x *Feed) GetSubtitle() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Subtitle); ok {
			return x.Subtitle
		}
	}
	return nil
}

func (x *Feed) GetTitle() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Title); ok {
			return x.Title
		}
	}
	return nil
}

func (x *Feed) GetUpdated() *DateTime {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Updated); ok {
			return x.Updated
		}
	}
	return nil
}

func (x *Feed) GetEntry() *Entry {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Entry); ok {
			return x.Entry
		}
	}
	return nil
}

type isFeed_Choice interface {
	isFeed_Choice()
}

type Feed_Author struct {
	// @gotags: xml:"author"
	Author *Person `protobuf:"bytes,1,opt,name=author,proto3,oneof" xml:"author"`
}

type Feed_Category struct {
	// @gotags: xml:"category"
	Category *Category `protobuf:"bytes,2,opt,name=category,proto3,oneof" xml:"category"`
}

type Feed_Contributor struct {
	// @gotags: xml:"contributor"
	Contributor *Person `protobuf:"bytes,3,opt,name=contributor,proto3,oneof" xml:"contributor"`
}

type Feed_Generator struct {
	// @gotags: xml:"generator"
	Generator *Generator `protobuf:"bytes,4,opt,name=generator,proto3,oneof" xml:"generator"`
}

type Feed_Icon struct {
	// @gotags: xml:"icon"
	Icon *Icon `protobuf:"bytes,5,opt,name=icon,proto3,oneof" xml:"icon"`
}

type Feed_Id struct {
	// @gotags: xml:"id"
	Id *Id `protobuf:"bytes,6,opt,name=id,proto3,oneof" xml:"id"`
}

type Feed_Link struct {
	// @gotags: xml:"link"
	Link *Link `protobuf:"bytes,7,opt,name=link,proto3,oneof" xml:"link"`
}

type Feed_Logo struct {
	// @gotags: xml:"logo"
	Logo *Logo `protobuf:"bytes,8,opt,name=logo,proto3,oneof" xml:"logo"`
}

type Feed_Rights struct {
	// @gotags: xml:"rights"
	Rights *Text `protobuf:"bytes,9,opt,name=rights,proto3,oneof" xml:"rights"`
}

type Feed_Subtitle struct {
	// @gotags: xml:"subtitle"
	Subtitle *Text `protobuf:"bytes,10,opt,name=subtitle,proto3,oneof" xml:"subtitle"`
}

type Feed_Title struct {
	// @gotags: xml:"title"
	Title *Text `protobuf:"bytes,11,opt,name=title,proto3,oneof" xml:"title"`
}

type Feed_Updated struct {
	// @gotags: xml:"updated"
	Updated *DateTime `protobuf:"bytes,12,opt,name=updated,proto3,oneof" xml:"updated"`
}

type Feed_Entry struct {
	// @gotags: xml:"entry"
	Entry *Entry `protobuf:"bytes,13,opt,name=entry,proto3,oneof" xml:"entry"`
}

func (*Feed_Author) isFeed_Choice() {}

func (*Feed_Category) isFeed_Choice() {}

func (*Feed_Contributor) isFeed_Choice() {}

func (*Feed_Generator) isFeed_Choice() {}

func (*Feed_Icon) isFeed_Choice() {}

func (*Feed_Id) isFeed_Choice() {}

func (*Feed_Link) isFeed_Choice() {}

func (*Feed_Logo) isFeed_Choice() {}

func (*Feed_Rights) isFeed_Choice() {}

func (*Feed_Subtitle) isFeed_Choice() {}

func (*Feed_Title) isFeed_Choice() {}

func (*Feed_Updated) isFeed_Choice() {}

func (*Feed_Entry) isFeed_Choice() {}

type Contribution struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Role"
	Role []*ContributorRole `protobuf:"bytes,1,rep,name=role,proto3" json:"role,omitempty" xml:"Role"`
	// @gotags: xml:"IsPrimaryRole"
	IsPrimaryRole bool `protobuf:"varint,2,opt,name=is_primary_role,json=isPrimaryRole,proto3" json:"is_primary_role,omitempty" xml:"IsPrimaryRole"`
	// @gotags: xml:"HasMadeFeaturedContribution"
	HasMadeFeaturedContribution bool `protobuf:"varint,3,opt,name=has_made_featured_contribution,json=hasMadeFeaturedContribution,proto3" json:"has_made_featured_contribution,omitempty" xml:"HasMadeFeaturedContribution"`
	// @gotags: xml:"HasMadeContractedContribution"
	HasMadeContractedContribution bool `protobuf:"varint,4,opt,name=has_made_contracted_contribution,json=hasMadeContractedContribution,proto3" json:"has_made_contracted_contribution,omitempty" xml:"HasMadeContractedContribution"`
	// @gotags: xml:"Event"
	Event         *EventDate `protobuf:"bytes,5,opt,name=event,proto3" json:"event,omitempty" xml:"Event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Contribution) Reset() {
	*x = Contribution{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contribution) ProtoMessage() {}

func (x *Contribution) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contribution.ProtoReflect.Descriptor instead.
func (*Contribution) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{3}
}

func (x *Contribution) GetRole() []*ContributorRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *Contribution) GetIsPrimaryRole() bool {
	if x != nil {
		return x.IsPrimaryRole
	}
	return false
}

func (x *Contribution) GetHasMadeFeaturedContribution() bool {
	if x != nil {
		return x.HasMadeFeaturedContribution
	}
	return false
}

func (x *Contribution) GetHasMadeContractedContribution() bool {
	if x != nil {
		return x.HasMadeContractedContribution
	}
	return false
}

func (x *Contribution) GetEvent() *EventDate {
	if x != nil {
		return x.Event
	}
	return nil
}

type CreationDescription struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Title"
	Title []*TitleWithUDV `protobuf:"bytes,1,rep,name=title,proto3" json:"title,omitempty" xml:"Title"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName *DisplayArtistName `protobuf:"bytes,2,opt,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"PublicationDate"
	PublicationDate *EventDate `protobuf:"bytes,3,opt,name=publication_date,json=publicationDate,proto3" json:"publication_date,omitempty" xml:"PublicationDate"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreationDescription) Reset() {
	*x = CreationDescription{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreationDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreationDescription) ProtoMessage() {}

func (x *CreationDescription) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreationDescription.ProtoReflect.Descriptor instead.
func (*CreationDescription) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{4}
}

func (x *CreationDescription) GetTitle() []*TitleWithUDV {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *CreationDescription) GetDisplayArtistName() *DisplayArtistName {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *CreationDescription) GetPublicationDate() *EventDate {
	if x != nil {
		return x.PublicationDate
	}
	return nil
}

type DetailedPartyIdForParty struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISNI"
	ISNI string `protobuf:"bytes,1,opt,name=i_s_n_i,json=iSNI,proto3" json:"i_s_n_i,omitempty" xml:"ISNI"`
	// @gotags: xml:"DPID"
	DPID string `protobuf:"bytes,2,opt,name=d_p_i_d,json=dPID,proto3" json:"d_p_i_d,omitempty" xml:"DPID"`
	// @gotags: xml:"IpiNameNumber"
	IpiNameNumber string `protobuf:"bytes,3,opt,name=ipi_name_number,json=ipiNameNumber,proto3" json:"ipi_name_number,omitempty" xml:"IpiNameNumber"`
	// @gotags: xml:"IPN"
	IPN string `protobuf:"bytes,4,opt,name=i_p_n,json=iPN,proto3" json:"i_p_n,omitempty" xml:"IPN"`
	// @gotags: xml:"CisacSocietyId"
	CisacSocietyId string `protobuf:"bytes,5,opt,name=cisac_society_id,json=cisacSocietyId,proto3" json:"cisac_society_id,omitempty" xml:"CisacSocietyId"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,6,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"IsDeprecated,attr"
	IsDeprecated  bool `protobuf:"varint,7,opt,name=is_deprecated,json=isDeprecated,proto3" json:"is_deprecated,omitempty" xml:"IsDeprecated,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailedPartyIdForParty) Reset() {
	*x = DetailedPartyIdForParty{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedPartyIdForParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedPartyIdForParty) ProtoMessage() {}

func (x *DetailedPartyIdForParty) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedPartyIdForParty.ProtoReflect.Descriptor instead.
func (*DetailedPartyIdForParty) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{5}
}

func (x *DetailedPartyIdForParty) GetISNI() string {
	if x != nil {
		return x.ISNI
	}
	return ""
}

func (x *DetailedPartyIdForParty) GetDPID() string {
	if x != nil {
		return x.DPID
	}
	return ""
}

func (x *DetailedPartyIdForParty) GetIpiNameNumber() string {
	if x != nil {
		return x.IpiNameNumber
	}
	return ""
}

func (x *DetailedPartyIdForParty) GetIPN() string {
	if x != nil {
		return x.IPN
	}
	return ""
}

func (x *DetailedPartyIdForParty) GetCisacSocietyId() string {
	if x != nil {
		return x.CisacSocietyId
	}
	return ""
}

func (x *DetailedPartyIdForParty) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *DetailedPartyIdForParty) GetIsDeprecated() bool {
	if x != nil {
		return x.IsDeprecated
	}
	return false
}

type Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Choice:
	//
	//	*Entry_Author
	//	*Entry_Category
	//	*Entry_Content
	//	*Entry_Contributor
	//	*Entry_Id
	//	*Entry_Link
	//	*Entry_Published
	//	*Entry_Rights
	//	*Entry_Source
	//	*Entry_Summary
	//	*Entry_Title
	//	*Entry_Updated
	//	*Entry_SubscriptionId
	//	*Entry_Party
	Choice isEntry_Choice `protobuf_oneof:"choice"`
	// @gotags: xml:"AvsVersionId,attr"
	AvsVersionId  string `protobuf:"bytes,15,opt,name=avs_version_id,json=avsVersionId,proto3" json:"avs_version_id,omitempty" xml:"AvsVersionId,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entry) Reset() {
	*x = Entry{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{6}
}

func (x *Entry) GetChoice() isEntry_Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *Entry) GetAuthor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Author); ok {
			return x.Author
		}
	}
	return nil
}

func (x *Entry) GetCategory() *Category {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Category); ok {
			return x.Category
		}
	}
	return nil
}

func (x *Entry) GetContent() *Content {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Content); ok {
			return x.Content
		}
	}
	return nil
}

func (x *Entry) GetContributor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Contributor); ok {
			return x.Contributor
		}
	}
	return nil
}

func (x *Entry) GetId() *Id {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *Entry) GetLink() *Link {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Link); ok {
			return x.Link
		}
	}
	return nil
}

func (x *Entry) GetPublished() *DateTime {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Published); ok {
			return x.Published
		}
	}
	return nil
}

func (x *Entry) GetRights() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Rights); ok {
			return x.Rights
		}
	}
	return nil
}

func (x *Entry) GetSource() *Source {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Source); ok {
			return x.Source
		}
	}
	return nil
}

func (x *Entry) GetSummary() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Summary); ok {
			return x.Summary
		}
	}
	return nil
}

func (x *Entry) GetTitle() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Title); ok {
			return x.Title
		}
	}
	return nil
}

func (x *Entry) GetUpdated() *DateTime {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Updated); ok {
			return x.Updated
		}
	}
	return nil
}

func (x *Entry) GetSubscriptionId() string {
	if x != nil {
		if x, ok := x.Choice.(*Entry_SubscriptionId); ok {
			return x.SubscriptionId
		}
	}
	return ""
}

func (x *Entry) GetParty() *PartyDescriptorForEntry {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Party); ok {
			return x.Party
		}
	}
	return nil
}

func (x *Entry) GetAvsVersionId() string {
	if x != nil {
		return x.AvsVersionId
	}
	return ""
}

type isEntry_Choice interface {
	isEntry_Choice()
}

type Entry_Author struct {
	// @gotags: xml:"author"
	Author *Person `protobuf:"bytes,1,opt,name=author,proto3,oneof" xml:"author"`
}

type Entry_Category struct {
	// @gotags: xml:"category"
	Category *Category `protobuf:"bytes,2,opt,name=category,proto3,oneof" xml:"category"`
}

type Entry_Content struct {
	// @gotags: xml:"content"
	Content *Content `protobuf:"bytes,3,opt,name=content,proto3,oneof" xml:"content"`
}

type Entry_Contributor struct {
	// @gotags: xml:"contributor"
	Contributor *Person `protobuf:"bytes,4,opt,name=contributor,proto3,oneof" xml:"contributor"`
}

type Entry_Id struct {
	// @gotags: xml:"id"
	Id *Id `protobuf:"bytes,5,opt,name=id,proto3,oneof" xml:"id"`
}

type Entry_Link struct {
	// @gotags: xml:"link"
	Link *Link `protobuf:"bytes,6,opt,name=link,proto3,oneof" xml:"link"`
}

type Entry_Published struct {
	// @gotags: xml:"published"
	Published *DateTime `protobuf:"bytes,7,opt,name=published,proto3,oneof" xml:"published"`
}

type Entry_Rights struct {
	// @gotags: xml:"rights"
	Rights *Text `protobuf:"bytes,8,opt,name=rights,proto3,oneof" xml:"rights"`
}

type Entry_Source struct {
	// @gotags: xml:"source"
	Source *Source `protobuf:"bytes,9,opt,name=source,proto3,oneof" xml:"source"`
}

type Entry_Summary struct {
	// @gotags: xml:"summary"
	Summary *Text `protobuf:"bytes,10,opt,name=summary,proto3,oneof" xml:"summary"`
}

type Entry_Title struct {
	// @gotags: xml:"title"
	Title *Text `protobuf:"bytes,11,opt,name=title,proto3,oneof" xml:"title"`
}

type Entry_Updated struct {
	// @gotags: xml:"updated"
	Updated *DateTime `protobuf:"bytes,12,opt,name=updated,proto3,oneof" xml:"updated"`
}

type Entry_SubscriptionId struct {
	// @gotags: xml:"SubscriptionId"
	SubscriptionId string `protobuf:"bytes,13,opt,name=subscription_id,json=subscriptionId,proto3,oneof" xml:"SubscriptionId"`
}

type Entry_Party struct {
	// @gotags: xml:"Party"
	Party *PartyDescriptorForEntry `protobuf:"bytes,14,opt,name=party,proto3,oneof" xml:"Party"`
}

func (*Entry_Author) isEntry_Choice() {}

func (*Entry_Category) isEntry_Choice() {}

func (*Entry_Content) isEntry_Choice() {}

func (*Entry_Contributor) isEntry_Choice() {}

func (*Entry_Id) isEntry_Choice() {}

func (*Entry_Link) isEntry_Choice() {}

func (*Entry_Published) isEntry_Choice() {}

func (*Entry_Rights) isEntry_Choice() {}

func (*Entry_Source) isEntry_Choice() {}

func (*Entry_Summary) isEntry_Choice() {}

func (*Entry_Title) isEntry_Choice() {}

func (*Entry_Updated) isEntry_Choice() {}

func (*Entry_SubscriptionId) isEntry_Choice() {}

func (*Entry_Party) isEntry_Choice() {}

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"EventType"
	EventType *EventType `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty" xml:"EventType"`
	// @gotags: xml:"EventDescription"
	EventDescription []*Description `protobuf:"bytes,3,rep,name=event_description,json=eventDescription,proto3" json:"event_description,omitempty" xml:"EventDescription"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{7}
}

func (x *Event) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Event) GetEventType() *EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *Event) GetEventDescription() []*Description {
	if x != nil {
		return x.EventDescription
	}
	return nil
}

type EventType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventType) Reset() {
	*x = EventType{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventType) ProtoMessage() {}

func (x *EventType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventType.ProtoReflect.Descriptor instead.
func (*EventType) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{8}
}

func (x *EventType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *EventType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Focus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"FocusTrack"
	FocusTrack *ResourceSummary `protobuf:"bytes,2,opt,name=focus_track,json=focusTrack,proto3" json:"focus_track,omitempty" xml:"FocusTrack"`
	// @gotags: xml:"FocusRelease"
	FocusRelease *ReleaseSummary `protobuf:"bytes,3,opt,name=focus_release,json=focusRelease,proto3" json:"focus_release,omitempty" xml:"FocusRelease"`
	// @gotags: xml:"FocusWork"
	FocusWork *WorkSummary `protobuf:"bytes,4,opt,name=focus_work,json=focusWork,proto3" json:"focus_work,omitempty" xml:"FocusWork"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithPronunciation `protobuf:"bytes,5,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,6,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"Writer"
	Writer []*PartyDescriptorWithPronunciation `protobuf:"bytes,7,rep,name=writer,proto3" json:"writer,omitempty" xml:"Writer"`
	// @gotags: xml:"SequenceNumber"
	SequenceNumber int32 `protobuf:"varint,8,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber"`
	// @gotags: xml:"PeriodOfBeingFocus"
	PeriodOfBeingFocus []*PeriodWithTime `protobuf:"bytes,9,rep,name=period_of_being_focus,json=periodOfBeingFocus,proto3" json:"period_of_being_focus,omitempty" xml:"PeriodOfBeingFocus"`
	// @gotags: xml:"TerritoryOfBeingFocusTrackDescription"
	TerritoryOfBeingFocusTrackDescription []avs.CurrentTerritoryCode `protobuf:"varint,10,rep,packed,name=territory_of_being_focus_track_description,json=territoryOfBeingFocusTrackDescription,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"territory_of_being_focus_track_description,omitempty" xml:"TerritoryOfBeingFocusTrackDescription"`
	// @gotags: xml:"Comment"
	Comment []*TextWithoutTerritory `protobuf:"bytes,11,rep,name=comment,proto3" json:"comment,omitempty" xml:"Comment"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,12,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Focus) Reset() {
	*x = Focus{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Focus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Focus) ProtoMessage() {}

func (x *Focus) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Focus.ProtoReflect.Descriptor instead.
func (*Focus) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{9}
}

func (x *Focus) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Focus) GetFocusTrack() *ResourceSummary {
	if x != nil {
		return x.FocusTrack
	}
	return nil
}

func (x *Focus) GetFocusRelease() *ReleaseSummary {
	if x != nil {
		return x.FocusRelease
	}
	return nil
}

func (x *Focus) GetFocusWork() *WorkSummary {
	if x != nil {
		return x.FocusWork
	}
	return nil
}

func (x *Focus) GetDisplayArtistName() []*DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Focus) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *Focus) GetWriter() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Writer
	}
	return nil
}

func (x *Focus) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *Focus) GetPeriodOfBeingFocus() []*PeriodWithTime {
	if x != nil {
		return x.PeriodOfBeingFocus
	}
	return nil
}

func (x *Focus) GetTerritoryOfBeingFocusTrackDescription() []avs.CurrentTerritoryCode {
	if x != nil {
		return x.TerritoryOfBeingFocusTrackDescription
	}
	return nil
}

func (x *Focus) GetComment() []*TextWithoutTerritory {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *Focus) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type Gender struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value *GenderValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"DoNotDisplay,attr"
	DoNotDisplay  bool `protobuf:"varint,3,opt,name=do_not_display,json=doNotDisplay,proto3" json:"do_not_display,omitempty" xml:"DoNotDisplay,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Gender) Reset() {
	*x = Gender{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Gender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Gender) ProtoMessage() {}

func (x *Gender) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Gender.ProtoReflect.Descriptor instead.
func (*Gender) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{10}
}

func (x *Gender) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Gender) GetValue() *GenderValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Gender) GetDoNotDisplay() bool {
	if x != nil {
		return x.DoNotDisplay
	}
	return false
}

type GenderValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GenderValue) Reset() {
	*x = GenderValue{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenderValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenderValue) ProtoMessage() {}

func (x *GenderValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenderValue.ProtoReflect.Descriptor instead.
func (*GenderValue) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{11}
}

func (x *GenderValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GenderValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GenderValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type NameWithPronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" xml:"Name"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*PronunciationForParty `protobuf:"bytes,2,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameWithPronunciation) Reset() {
	*x = NameWithPronunciation{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameWithPronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameWithPronunciation) ProtoMessage() {}

func (x *NameWithPronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameWithPronunciation.ProtoReflect.Descriptor instead.
func (*NameWithPronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{12}
}

func (x *NameWithPronunciation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameWithPronunciation) GetPronunciation() []*PronunciationForParty {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

type NameWithScriptCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Name"
	Name *Name `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" xml:"Name"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*PronunciationForParty `protobuf:"bytes,2,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameWithScriptCode) Reset() {
	*x = NameWithScriptCode{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameWithScriptCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameWithScriptCode) ProtoMessage() {}

func (x *NameWithScriptCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameWithScriptCode.ProtoReflect.Descriptor instead.
func (*NameWithScriptCode) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{13}
}

func (x *NameWithScriptCode) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *NameWithScriptCode) GetPronunciation() []*PronunciationForParty {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

type Nationality struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value         *AllTerritoryCode `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Nationality) Reset() {
	*x = Nationality{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nationality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nationality) ProtoMessage() {}

func (x *Nationality) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nationality.ProtoReflect.Descriptor instead.
func (*Nationality) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{14}
}

func (x *Nationality) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Nationality) GetValue() *AllTerritoryCode {
	if x != nil {
		return x.Value
	}
	return nil
}

type Party struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"PartyReference"
	PartyReference string `protobuf:"bytes,1,opt,name=party_reference,json=partyReference,proto3" json:"party_reference,omitempty" xml:"PartyReference"`
	// @gotags: xml:"PartyId"
	PartyId []*DetailedPartyIdForParty `protobuf:"bytes,2,rep,name=party_id,json=partyId,proto3" json:"party_id,omitempty" xml:"PartyId"`
	// @gotags: xml:"PartyName"
	PartyName []*PartyName `protobuf:"bytes,3,rep,name=party_name,json=partyName,proto3" json:"party_name,omitempty" xml:"PartyName"`
	// @gotags: xml:"PartyType"
	PartyType *PartyType `protobuf:"bytes,4,opt,name=party_type,json=partyType,proto3" json:"party_type,omitempty" xml:"PartyType"`
	// @gotags: xml:"Event"
	Event []*Event `protobuf:"bytes,5,rep,name=event,proto3" json:"event,omitempty" xml:"Event"`
	// @gotags: xml:"RelatedParty"
	RelatedParty []*RelatedParty `protobuf:"bytes,6,rep,name=related_party,json=relatedParty,proto3" json:"related_party,omitempty" xml:"RelatedParty"`
	// @gotags: xml:"RelatedCreation"
	RelatedCreation []*RelatedCreationForParty `protobuf:"bytes,7,rep,name=related_creation,json=relatedCreation,proto3" json:"related_creation,omitempty" xml:"RelatedCreation"`
	// @gotags: xml:"Gender"
	Gender *Gender `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty" xml:"Gender"`
	// @gotags: xml:"Nationality"
	Nationality []*Nationality `protobuf:"bytes,9,rep,name=nationality,proto3" json:"nationality,omitempty" xml:"Nationality"`
	// @gotags: xml:"PrimaryRole"
	PrimaryRole *PrimaryRole `protobuf:"bytes,10,opt,name=primary_role,json=primaryRole,proto3" json:"primary_role,omitempty" xml:"PrimaryRole"`
	// @gotags: xml:"VocalRegister"
	VocalRegister *VocalRegister `protobuf:"bytes,11,opt,name=vocal_register,json=vocalRegister,proto3" json:"vocal_register,omitempty" xml:"VocalRegister"`
	// @gotags: xml:"Focus"
	Focus []*Focus `protobuf:"bytes,12,rep,name=focus,proto3" json:"focus,omitempty" xml:"Focus"`
	// @gotags: xml:"ArtistType"
	ArtistType []*ArtistType `protobuf:"bytes,13,rep,name=artist_type,json=artistType,proto3" json:"artist_type,omitempty" xml:"ArtistType"`
	// @gotags: xml:"ClassicalPeriod"
	ClassicalPeriod *ClassicalPeriod `protobuf:"bytes,14,opt,name=classical_period,json=classicalPeriod,proto3" json:"classical_period,omitempty" xml:"ClassicalPeriod"`
	// @gotags: xml:"Epoch"
	Epoch []*Epoch `protobuf:"bytes,15,rep,name=epoch,proto3" json:"epoch,omitempty" xml:"Epoch"`
	// @gotags: xml:"ArtisticInfluence"
	ArtisticInfluence []*ArtisticInfluence `protobuf:"bytes,16,rep,name=artistic_influence,json=artisticInfluence,proto3" json:"artistic_influence,omitempty" xml:"ArtisticInfluence"`
	// @gotags: xml:"Award"
	Award []*Award `protobuf:"bytes,17,rep,name=award,proto3" json:"award,omitempty" xml:"Award"`
	// @gotags: xml:"Biography"
	Biography []*Biography `protobuf:"bytes,18,rep,name=biography,proto3" json:"biography,omitempty" xml:"Biography"`
	// @gotags: xml:"Image"
	Image []*Image `protobuf:"bytes,19,rep,name=image,proto3" json:"image,omitempty" xml:"Image"`
	// @gotags: xml:"SocialMediaURL"
	SocialMediaURL *SocialMediaURL `protobuf:"bytes,20,opt,name=social_media_u_r_l,json=socialMediaURL,proto3" json:"social_media_u_r_l,omitempty" xml:"SocialMediaURL"`
	// @gotags: xml:"CommentaryNote"
	CommentaryNote []*CommentaryNote `protobuf:"bytes,21,rep,name=commentary_note,json=commentaryNote,proto3" json:"commentary_note,omitempty" xml:"CommentaryNote"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,22,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Party) Reset() {
	*x = Party{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Party) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Party) ProtoMessage() {}

func (x *Party) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Party.ProtoReflect.Descriptor instead.
func (*Party) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{15}
}

func (x *Party) GetPartyReference() string {
	if x != nil {
		return x.PartyReference
	}
	return ""
}

func (x *Party) GetPartyId() []*DetailedPartyIdForParty {
	if x != nil {
		return x.PartyId
	}
	return nil
}

func (x *Party) GetPartyName() []*PartyName {
	if x != nil {
		return x.PartyName
	}
	return nil
}

func (x *Party) GetPartyType() *PartyType {
	if x != nil {
		return x.PartyType
	}
	return nil
}

func (x *Party) GetEvent() []*Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *Party) GetRelatedParty() []*RelatedParty {
	if x != nil {
		return x.RelatedParty
	}
	return nil
}

func (x *Party) GetRelatedCreation() []*RelatedCreationForParty {
	if x != nil {
		return x.RelatedCreation
	}
	return nil
}

func (x *Party) GetGender() *Gender {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *Party) GetNationality() []*Nationality {
	if x != nil {
		return x.Nationality
	}
	return nil
}

func (x *Party) GetPrimaryRole() *PrimaryRole {
	if x != nil {
		return x.PrimaryRole
	}
	return nil
}

func (x *Party) GetVocalRegister() *VocalRegister {
	if x != nil {
		return x.VocalRegister
	}
	return nil
}

func (x *Party) GetFocus() []*Focus {
	if x != nil {
		return x.Focus
	}
	return nil
}

func (x *Party) GetArtistType() []*ArtistType {
	if x != nil {
		return x.ArtistType
	}
	return nil
}

func (x *Party) GetClassicalPeriod() *ClassicalPeriod {
	if x != nil {
		return x.ClassicalPeriod
	}
	return nil
}

func (x *Party) GetEpoch() []*Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *Party) GetArtisticInfluence() []*ArtisticInfluence {
	if x != nil {
		return x.ArtisticInfluence
	}
	return nil
}

func (x *Party) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

func (x *Party) GetBiography() []*Biography {
	if x != nil {
		return x.Biography
	}
	return nil
}

func (x *Party) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Party) GetSocialMediaURL() *SocialMediaURL {
	if x != nil {
		return x.SocialMediaURL
	}
	return nil
}

func (x *Party) GetCommentaryNote() []*CommentaryNote {
	if x != nil {
		return x.CommentaryNote
	}
	return nil
}

func (x *Party) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type PartyDescriptorForEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"PartyId"
	PartyId *DetailedPartyId `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty" xml:"PartyId"`
	// @gotags: xml:"PartyName"
	PartyName     string `protobuf:"bytes,2,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty" xml:"PartyName"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartyDescriptorForEntry) Reset() {
	*x = PartyDescriptorForEntry{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyDescriptorForEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyDescriptorForEntry) ProtoMessage() {}

func (x *PartyDescriptorForEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyDescriptorForEntry.ProtoReflect.Descriptor instead.
func (*PartyDescriptorForEntry) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{16}
}

func (x *PartyDescriptorForEntry) GetPartyId() *DetailedPartyId {
	if x != nil {
		return x.PartyId
	}
	return nil
}

func (x *PartyDescriptorForEntry) GetPartyName() string {
	if x != nil {
		return x.PartyName
	}
	return ""
}

type PartyList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Party"
	Party         []*Party `protobuf:"bytes,1,rep,name=party,proto3" json:"party,omitempty" xml:"Party"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartyList) Reset() {
	*x = PartyList{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyList) ProtoMessage() {}

func (x *PartyList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyList.ProtoReflect.Descriptor instead.
func (*PartyList) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{17}
}

func (x *PartyList) GetParty() []*Party {
	if x != nil {
		return x.Party
	}
	return nil
}

type PartyName struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"NameId"
	NameId []*NameId `protobuf:"bytes,2,rep,name=name_id,json=nameId,proto3" json:"name_id,omitempty" xml:"NameId"`
	// @gotags: xml:"PartyNameType"
	PartyNameType []*PartyNameType `protobuf:"bytes,3,rep,name=party_name_type,json=partyNameType,proto3" json:"party_name_type,omitempty" xml:"PartyNameType"`
	// @gotags: xml:"ReasonForNameChange"
	ReasonForNameChange *ReasonForNameChange `protobuf:"bytes,4,opt,name=reason_for_name_change,json=reasonForNameChange,proto3" json:"reason_for_name_change,omitempty" xml:"ReasonForNameChange"`
	// @gotags: xml:"PartyNamePurpose"
	PartyNamePurpose []*PartyNamePurpose `protobuf:"bytes,5,rep,name=party_name_purpose,json=partyNamePurpose,proto3" json:"party_name_purpose,omitempty" xml:"PartyNamePurpose"`
	// @gotags: xml:"PartyNameFormat"
	PartyNameFormat []*PartyNameFormat `protobuf:"bytes,6,rep,name=party_name_format,json=partyNameFormat,proto3" json:"party_name_format,omitempty" xml:"PartyNameFormat"`
	// @gotags: xml:"FullName"
	FullName *NameWithScriptCode `protobuf:"bytes,7,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty" xml:"FullName"`
	// @gotags: xml:"FullNameAsciiTranscribed"
	FullNameAsciiTranscribed *NameWithPronunciation `protobuf:"bytes,8,opt,name=full_name_ascii_transcribed,json=fullNameAsciiTranscribed,proto3" json:"full_name_ascii_transcribed,omitempty" xml:"FullNameAsciiTranscribed"`
	// @gotags: xml:"FullNameIndexed"
	FullNameIndexed *NameWithScriptCode `protobuf:"bytes,9,opt,name=full_name_indexed,json=fullNameIndexed,proto3" json:"full_name_indexed,omitempty" xml:"FullNameIndexed"`
	// @gotags: xml:"TitlesBeforeNames"
	TitlesBeforeNames string `protobuf:"bytes,10,opt,name=titles_before_names,json=titlesBeforeNames,proto3" json:"titles_before_names,omitempty" xml:"TitlesBeforeNames"`
	// @gotags: xml:"NamesBeforeKeyName"
	NamesBeforeKeyName *NameWithScriptCode `protobuf:"bytes,11,opt,name=names_before_key_name,json=namesBeforeKeyName,proto3" json:"names_before_key_name,omitempty" xml:"NamesBeforeKeyName"`
	// @gotags: xml:"KeyName"
	KeyName *NameWithScriptCode `protobuf:"bytes,12,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty" xml:"KeyName"`
	// @gotags: xml:"NamesAfterKeyName"
	NamesAfterKeyName *NameWithScriptCode `protobuf:"bytes,13,opt,name=names_after_key_name,json=namesAfterKeyName,proto3" json:"names_after_key_name,omitempty" xml:"NamesAfterKeyName"`
	// @gotags: xml:"TitlesAfterNames"
	TitlesAfterNames string `protobuf:"bytes,14,opt,name=titles_after_names,json=titlesAfterNames,proto3" json:"titles_after_names,omitempty" xml:"TitlesAfterNames"`
	// @gotags: xml:"ShortName"
	ShortName []*NameWithScriptCode `protobuf:"bytes,15,rep,name=short_name,json=shortName,proto3" json:"short_name,omitempty" xml:"ShortName"`
	// @gotags: xml:"AbbreviatedName"
	AbbreviatedName []*NameWithScriptCode `protobuf:"bytes,16,rep,name=abbreviated_name,json=abbreviatedName,proto3" json:"abbreviated_name,omitempty" xml:"AbbreviatedName"`
	// @gotags: xml:"ValidityPeriod"
	ValidityPeriod []*ValidityPeriod `protobuf:"bytes,17,rep,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty" xml:"ValidityPeriod"`
	// @gotags: xml:"RelatedCreation"
	RelatedCreation []*RelatedCreationForParty `protobuf:"bytes,18,rep,name=related_creation,json=relatedCreation,proto3" json:"related_creation,omitempty" xml:"RelatedCreation"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,19,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,20,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,21,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"IsCanonical,attr"
	IsCanonical   bool `protobuf:"varint,22,opt,name=is_canonical,json=isCanonical,proto3" json:"is_canonical,omitempty" xml:"IsCanonical,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartyName) Reset() {
	*x = PartyName{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyName) ProtoMessage() {}

func (x *PartyName) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyName.ProtoReflect.Descriptor instead.
func (*PartyName) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{18}
}

func (x *PartyName) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *PartyName) GetNameId() []*NameId {
	if x != nil {
		return x.NameId
	}
	return nil
}

func (x *PartyName) GetPartyNameType() []*PartyNameType {
	if x != nil {
		return x.PartyNameType
	}
	return nil
}

func (x *PartyName) GetReasonForNameChange() *ReasonForNameChange {
	if x != nil {
		return x.ReasonForNameChange
	}
	return nil
}

func (x *PartyName) GetPartyNamePurpose() []*PartyNamePurpose {
	if x != nil {
		return x.PartyNamePurpose
	}
	return nil
}

func (x *PartyName) GetPartyNameFormat() []*PartyNameFormat {
	if x != nil {
		return x.PartyNameFormat
	}
	return nil
}

func (x *PartyName) GetFullName() *NameWithScriptCode {
	if x != nil {
		return x.FullName
	}
	return nil
}

func (x *PartyName) GetFullNameAsciiTranscribed() *NameWithPronunciation {
	if x != nil {
		return x.FullNameAsciiTranscribed
	}
	return nil
}

func (x *PartyName) GetFullNameIndexed() *NameWithScriptCode {
	if x != nil {
		return x.FullNameIndexed
	}
	return nil
}

func (x *PartyName) GetTitlesBeforeNames() string {
	if x != nil {
		return x.TitlesBeforeNames
	}
	return ""
}

func (x *PartyName) GetNamesBeforeKeyName() *NameWithScriptCode {
	if x != nil {
		return x.NamesBeforeKeyName
	}
	return nil
}

func (x *PartyName) GetKeyName() *NameWithScriptCode {
	if x != nil {
		return x.KeyName
	}
	return nil
}

func (x *PartyName) GetNamesAfterKeyName() *NameWithScriptCode {
	if x != nil {
		return x.NamesAfterKeyName
	}
	return nil
}

func (x *PartyName) GetTitlesAfterNames() string {
	if x != nil {
		return x.TitlesAfterNames
	}
	return ""
}

func (x *PartyName) GetShortName() []*NameWithScriptCode {
	if x != nil {
		return x.ShortName
	}
	return nil
}

func (x *PartyName) GetAbbreviatedName() []*NameWithScriptCode {
	if x != nil {
		return x.AbbreviatedName
	}
	return nil
}

func (x *PartyName) GetValidityPeriod() []*ValidityPeriod {
	if x != nil {
		return x.ValidityPeriod
	}
	return nil
}

func (x *PartyName) GetRelatedCreation() []*RelatedCreationForParty {
	if x != nil {
		return x.RelatedCreation
	}
	return nil
}

func (x *PartyName) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *PartyName) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *PartyName) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *PartyName) GetIsCanonical() bool {
	if x != nil {
		return x.IsCanonical
	}
	return false
}

type PartyNameForRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"FullName"
	FullName *Name `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty" xml:"FullName"`
	// @gotags: xml:"FullNameAsciiTranscribed"
	FullNameAsciiTranscribed string `protobuf:"bytes,2,opt,name=full_name_ascii_transcribed,json=fullNameAsciiTranscribed,proto3" json:"full_name_ascii_transcribed,omitempty" xml:"FullNameAsciiTranscribed"`
	// @gotags: xml:"FullNameIndexed"
	FullNameIndexed *Name `protobuf:"bytes,3,opt,name=full_name_indexed,json=fullNameIndexed,proto3" json:"full_name_indexed,omitempty" xml:"FullNameIndexed"`
	// @gotags: xml:"NamesBeforeKeyName"
	NamesBeforeKeyName *Name `protobuf:"bytes,4,opt,name=names_before_key_name,json=namesBeforeKeyName,proto3" json:"names_before_key_name,omitempty" xml:"NamesBeforeKeyName"`
	// @gotags: xml:"KeyName"
	KeyName *Name `protobuf:"bytes,5,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty" xml:"KeyName"`
	// @gotags: xml:"NamesAfterKeyName"
	NamesAfterKeyName *Name `protobuf:"bytes,6,opt,name=names_after_key_name,json=namesAfterKeyName,proto3" json:"names_after_key_name,omitempty" xml:"NamesAfterKeyName"`
	// @gotags: xml:"AbbreviatedName"
	AbbreviatedName *Name `protobuf:"bytes,7,opt,name=abbreviated_name,json=abbreviatedName,proto3" json:"abbreviated_name,omitempty" xml:"AbbreviatedName"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,8,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PartyNameForRequest) Reset() {
	*x = PartyNameForRequest{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyNameForRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameForRequest) ProtoMessage() {}

func (x *PartyNameForRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameForRequest.ProtoReflect.Descriptor instead.
func (*PartyNameForRequest) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{19}
}

func (x *PartyNameForRequest) GetFullName() *Name {
	if x != nil {
		return x.FullName
	}
	return nil
}

func (x *PartyNameForRequest) GetFullNameAsciiTranscribed() string {
	if x != nil {
		return x.FullNameAsciiTranscribed
	}
	return ""
}

func (x *PartyNameForRequest) GetFullNameIndexed() *Name {
	if x != nil {
		return x.FullNameIndexed
	}
	return nil
}

func (x *PartyNameForRequest) GetNamesBeforeKeyName() *Name {
	if x != nil {
		return x.NamesBeforeKeyName
	}
	return nil
}

func (x *PartyNameForRequest) GetKeyName() *Name {
	if x != nil {
		return x.KeyName
	}
	return nil
}

func (x *PartyNameForRequest) GetNamesAfterKeyName() *Name {
	if x != nil {
		return x.NamesAfterKeyName
	}
	return nil
}

func (x *PartyNameForRequest) GetAbbreviatedName() *Name {
	if x != nil {
		return x.AbbreviatedName
	}
	return nil
}

func (x *PartyNameForRequest) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type PartyNameFormat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PartyNameFormat) Reset() {
	*x = PartyNameFormat{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyNameFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameFormat) ProtoMessage() {}

func (x *PartyNameFormat) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameFormat.ProtoReflect.Descriptor instead.
func (*PartyNameFormat) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{20}
}

func (x *PartyNameFormat) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PartyNameFormat) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PartyNameFormat) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type PartyNamePurpose struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PartyNamePurpose) Reset() {
	*x = PartyNamePurpose{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyNamePurpose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNamePurpose) ProtoMessage() {}

func (x *PartyNamePurpose) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNamePurpose.ProtoReflect.Descriptor instead.
func (*PartyNamePurpose) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{21}
}

func (x *PartyNamePurpose) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PartyNamePurpose) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PartyNamePurpose) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type PartyNameType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PartyNameType) Reset() {
	*x = PartyNameType{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyNameType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameType) ProtoMessage() {}

func (x *PartyNameType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameType.ProtoReflect.Descriptor instead.
func (*PartyNameType) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{22}
}

func (x *PartyNameType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PartyNameType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PartyNameType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type PartyRelationshipType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PartyRelationshipType) Reset() {
	*x = PartyRelationshipType{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyRelationshipType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyRelationshipType) ProtoMessage() {}

func (x *PartyRelationshipType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyRelationshipType.ProtoReflect.Descriptor instead.
func (*PartyRelationshipType) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{23}
}

func (x *PartyRelationshipType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PartyRelationshipType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PartyRelationshipType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type PartyType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value         *PartyTypeValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartyType) Reset() {
	*x = PartyType{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyType) ProtoMessage() {}

func (x *PartyType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyType.ProtoReflect.Descriptor instead.
func (*PartyType) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{24}
}

func (x *PartyType) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *PartyType) GetValue() *PartyTypeValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type PartyTypeValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PartyTypeValue) Reset() {
	*x = PartyTypeValue{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyTypeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyTypeValue) ProtoMessage() {}

func (x *PartyTypeValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyTypeValue.ProtoReflect.Descriptor instead.
func (*PartyTypeValue) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{25}
}

func (x *PartyTypeValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PartyTypeValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PartyTypeValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type PrimaryRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value         *ContributorRole `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrimaryRole) Reset() {
	*x = PrimaryRole{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrimaryRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimaryRole) ProtoMessage() {}

func (x *PrimaryRole) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimaryRole.ProtoReflect.Descriptor instead.
func (*PrimaryRole) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{26}
}

func (x *PrimaryRole) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *PrimaryRole) GetValue() *ContributorRole {
	if x != nil {
		return x.Value
	}
	return nil
}

type PronunciationForParty struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsCanonical,attr"
	IsCanonical bool `protobuf:"varint,2,opt,name=is_canonical,json=isCanonical,proto3" json:"is_canonical,omitempty" xml:"IsCanonical,attr"`
	// @gotags: xml:"IsMispronounced,attr"
	IsMispronounced bool `protobuf:"varint,3,opt,name=is_mispronounced,json=isMispronounced,proto3" json:"is_mispronounced,omitempty" xml:"IsMispronounced,attr"`
	// @gotags: xml:"LanguageCode,attr"
	LanguageCode string `protobuf:"bytes,4,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty" xml:"LanguageCode,attr"`
	// @gotags: xml:"EncodingType,attr"
	EncodingType avs.EncodingType `protobuf:"varint,5,opt,name=encoding_type,json=encodingType,proto3,enum=ddex.avs.EncodingType" json:"encoding_type,omitempty" xml:"EncodingType,attr"`
	// @gotags: xml:"EncodingNamespace,attr"
	EncodingNamespace string `protobuf:"bytes,6,opt,name=encoding_namespace,json=encodingNamespace,proto3" json:"encoding_namespace,omitempty" xml:"EncodingNamespace,attr"`
	// @gotags: xml:"EncodingUserDefinedValue,attr"
	EncodingUserDefinedValue string `protobuf:"bytes,7,opt,name=encoding_user_defined_value,json=encodingUserDefinedValue,proto3" json:"encoding_user_defined_value,omitempty" xml:"EncodingUserDefinedValue,attr"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *PronunciationForParty) Reset() {
	*x = PronunciationForParty{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PronunciationForParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PronunciationForParty) ProtoMessage() {}

func (x *PronunciationForParty) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PronunciationForParty.ProtoReflect.Descriptor instead.
func (*PronunciationForParty) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{27}
}

func (x *PronunciationForParty) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PronunciationForParty) GetIsCanonical() bool {
	if x != nil {
		return x.IsCanonical
	}
	return false
}

func (x *PronunciationForParty) GetIsMispronounced() bool {
	if x != nil {
		return x.IsMispronounced
	}
	return false
}

func (x *PronunciationForParty) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *PronunciationForParty) GetEncodingType() avs.EncodingType {
	if x != nil {
		return x.EncodingType
	}
	return avs.EncodingType(0)
}

func (x *PronunciationForParty) GetEncodingNamespace() string {
	if x != nil {
		return x.EncodingNamespace
	}
	return ""
}

func (x *PronunciationForParty) GetEncodingUserDefinedValue() string {
	if x != nil {
		return x.EncodingUserDefinedValue
	}
	return ""
}

type ReasonForNameChange struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReasonForNameChange) Reset() {
	*x = ReasonForNameChange{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReasonForNameChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReasonForNameChange) ProtoMessage() {}

func (x *ReasonForNameChange) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReasonForNameChange.ProtoReflect.Descriptor instead.
func (*ReasonForNameChange) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{28}
}

func (x *ReasonForNameChange) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReasonForNameChange) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ReasonForNameChange) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type RelatedCreationForParty struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"CreationType"
	CreationType avs.CreationType `protobuf:"varint,2,opt,name=creation_type,json=creationType,proto3,enum=ddex.avs.CreationType" json:"creation_type,omitempty" xml:"CreationType"`
	// @gotags: xml:"Contribution"
	Contribution *Contribution `protobuf:"bytes,3,opt,name=contribution,proto3" json:"contribution,omitempty" xml:"Contribution"`
	// @gotags: xml:"RelationshipDescription"
	RelationshipDescription []*Description `protobuf:"bytes,4,rep,name=relationship_description,json=relationshipDescription,proto3" json:"relationship_description,omitempty" xml:"RelationshipDescription"`
	// @gotags: xml:"Contract"
	Contract string `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty" xml:"Contract"`
	// @gotags: xml:"IsFalse,attr"
	IsFalse bool `protobuf:"varint,6,opt,name=is_false,json=isFalse,proto3" json:"is_false,omitempty" xml:"IsFalse,attr"`
	// @gotags: xml:"IsConfidential,attr"
	IsConfidential bool `protobuf:"varint,7,opt,name=is_confidential,json=isConfidential,proto3" json:"is_confidential,omitempty" xml:"IsConfidential,attr"`
	// @gotags: xml:"IsFirstCreation,attr"
	IsFirstCreation bool `protobuf:"varint,8,opt,name=is_first_creation,json=isFirstCreation,proto3" json:"is_first_creation,omitempty" xml:"IsFirstCreation,attr"`
	// @gotags: xml:"IsLastCreation,attr"
	IsLastCreation bool `protobuf:"varint,9,opt,name=is_last_creation,json=isLastCreation,proto3" json:"is_last_creation,omitempty" xml:"IsLastCreation,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RelatedCreationForParty) Reset() {
	*x = RelatedCreationForParty{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelatedCreationForParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedCreationForParty) ProtoMessage() {}

func (x *RelatedCreationForParty) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedCreationForParty.ProtoReflect.Descriptor instead.
func (*RelatedCreationForParty) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{29}
}

func (x *RelatedCreationForParty) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *RelatedCreationForParty) GetCreationType() avs.CreationType {
	if x != nil {
		return x.CreationType
	}
	return avs.CreationType(0)
}

func (x *RelatedCreationForParty) GetContribution() *Contribution {
	if x != nil {
		return x.Contribution
	}
	return nil
}

func (x *RelatedCreationForParty) GetRelationshipDescription() []*Description {
	if x != nil {
		return x.RelationshipDescription
	}
	return nil
}

func (x *RelatedCreationForParty) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *RelatedCreationForParty) GetIsFalse() bool {
	if x != nil {
		return x.IsFalse
	}
	return false
}

func (x *RelatedCreationForParty) GetIsConfidential() bool {
	if x != nil {
		return x.IsConfidential
	}
	return false
}

func (x *RelatedCreationForParty) GetIsFirstCreation() bool {
	if x != nil {
		return x.IsFirstCreation
	}
	return false
}

func (x *RelatedCreationForParty) GetIsLastCreation() bool {
	if x != nil {
		return x.IsLastCreation
	}
	return false
}

type RelatedParty struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"PartyRelationshipType"
	PartyRelationshipType *PartyRelationshipType `protobuf:"bytes,2,opt,name=party_relationship_type,json=partyRelationshipType,proto3" json:"party_relationship_type,omitempty" xml:"PartyRelationshipType"`
	// @gotags: xml:"BusinessPurpose"
	BusinessPurpose string `protobuf:"bytes,3,opt,name=business_purpose,json=businessPurpose,proto3" json:"business_purpose,omitempty" xml:"BusinessPurpose"`
	// @gotags: xml:"Description"
	Description []*Description `protobuf:"bytes,4,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"Contract"
	Contract string `protobuf:"bytes,5,opt,name=contract,proto3" json:"contract,omitempty" xml:"Contract"`
	// @gotags: xml:"ValidityPeriod"
	ValidityPeriod []*ValidityPeriod `protobuf:"bytes,6,rep,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty" xml:"ValidityPeriod"`
	// @gotags: xml:"RelatedCreation"
	RelatedCreation []*RelatedCreationForParty `protobuf:"bytes,7,rep,name=related_creation,json=relatedCreation,proto3" json:"related_creation,omitempty" xml:"RelatedCreation"`
	// @gotags: xml:"IsFalse,attr"
	IsFalse bool `protobuf:"varint,8,opt,name=is_false,json=isFalse,proto3" json:"is_false,omitempty" xml:"IsFalse,attr"`
	// @gotags: xml:"IsConfidential,attr"
	IsConfidential bool `protobuf:"varint,9,opt,name=is_confidential,json=isConfidential,proto3" json:"is_confidential,omitempty" xml:"IsConfidential,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RelatedParty) Reset() {
	*x = RelatedParty{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelatedParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedParty) ProtoMessage() {}

func (x *RelatedParty) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedParty.ProtoReflect.Descriptor instead.
func (*RelatedParty) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{30}
}

func (x *RelatedParty) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *RelatedParty) GetPartyRelationshipType() *PartyRelationshipType {
	if x != nil {
		return x.PartyRelationshipType
	}
	return nil
}

func (x *RelatedParty) GetBusinessPurpose() string {
	if x != nil {
		return x.BusinessPurpose
	}
	return ""
}

func (x *RelatedParty) GetDescription() []*Description {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *RelatedParty) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *RelatedParty) GetValidityPeriod() []*ValidityPeriod {
	if x != nil {
		return x.ValidityPeriod
	}
	return nil
}

func (x *RelatedParty) GetRelatedCreation() []*RelatedCreationForParty {
	if x != nil {
		return x.RelatedCreation
	}
	return nil
}

func (x *RelatedParty) GetIsFalse() bool {
	if x != nil {
		return x.IsFalse
	}
	return false
}

func (x *RelatedParty) GetIsConfidential() bool {
	if x != nil {
		return x.IsConfidential
	}
	return false
}

type ReleaseForRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseId"
	ReleaseId *ReleaseId `protobuf:"bytes,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty" xml:"ReleaseId"`
	// @gotags: xml:"ReleaseTitle"
	ReleaseTitle  *ReleaseTitle `protobuf:"bytes,2,opt,name=release_title,json=releaseTitle,proto3" json:"release_title,omitempty" xml:"ReleaseTitle"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseForRequest) Reset() {
	*x = ReleaseForRequest{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseForRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseForRequest) ProtoMessage() {}

func (x *ReleaseForRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseForRequest.ProtoReflect.Descriptor instead.
func (*ReleaseForRequest) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{31}
}

func (x *ReleaseForRequest) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *ReleaseForRequest) GetReleaseTitle() *ReleaseTitle {
	if x != nil {
		return x.ReleaseTitle
	}
	return nil
}

type RequestedParty struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Role"
	Role []*ContributorRole `protobuf:"bytes,1,rep,name=role,proto3" json:"role,omitempty" xml:"Role"`
	// @gotags: xml:"Release"
	Release []*ReleaseForRequest `protobuf:"bytes,2,rep,name=release,proto3" json:"release,omitempty" xml:"Release"`
	// @gotags: xml:"Resource"
	Resource []*ResourceForRequest `protobuf:"bytes,3,rep,name=resource,proto3" json:"resource,omitempty" xml:"Resource"`
	// @gotags: xml:"Work"
	Work          []*WorkForRequest `protobuf:"bytes,4,rep,name=work,proto3" json:"work,omitempty" xml:"Work"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestedParty) Reset() {
	*x = RequestedParty{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestedParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestedParty) ProtoMessage() {}

func (x *RequestedParty) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestedParty.ProtoReflect.Descriptor instead.
func (*RequestedParty) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{32}
}

func (x *RequestedParty) GetRole() []*ContributorRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RequestedParty) GetRelease() []*ReleaseForRequest {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *RequestedParty) GetResource() []*ResourceForRequest {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *RequestedParty) GetWork() []*WorkForRequest {
	if x != nil {
		return x.Work
	}
	return nil
}

type ResourceForRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceId"
	ResourceId *ResourceIdWithoutFlag `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"ResourceTitle"
	ResourceTitle *ResourceTitle `protobuf:"bytes,2,opt,name=resource_title,json=resourceTitle,proto3" json:"resource_title,omitempty" xml:"ResourceTitle"`
	// @gotags: xml:"ResourceType"
	ResourceType  avs.ResourceType `protobuf:"varint,3,opt,name=resource_type,json=resourceType,proto3,enum=ddex.avs.ResourceType" json:"resource_type,omitempty" xml:"ResourceType"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceForRequest) Reset() {
	*x = ResourceForRequest{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceForRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceForRequest) ProtoMessage() {}

func (x *ResourceForRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceForRequest.ProtoReflect.Descriptor instead.
func (*ResourceForRequest) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{33}
}

func (x *ResourceForRequest) GetResourceId() *ResourceIdWithoutFlag {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *ResourceForRequest) GetResourceTitle() *ResourceTitle {
	if x != nil {
		return x.ResourceTitle
	}
	return nil
}

func (x *ResourceForRequest) GetResourceType() avs.ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return avs.ResourceType(0)
}

type SocialMediaURL struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageCode,attr"
	LanguageCode string `protobuf:"bytes,2,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty" xml:"LanguageCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *SocialMediaURL) Reset() {
	*x = SocialMediaURL{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SocialMediaURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialMediaURL) ProtoMessage() {}

func (x *SocialMediaURL) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialMediaURL.ProtoReflect.Descriptor instead.
func (*SocialMediaURL) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{34}
}

func (x *SocialMediaURL) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SocialMediaURL) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *SocialMediaURL) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

type WorkForRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"WorkId"
	WorkId *MusicalWorkIdWithoutFlag `protobuf:"bytes,1,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty" xml:"WorkId"`
	// @gotags: xml:"WorkTitle"
	WorkTitle     *WorkTitle `protobuf:"bytes,2,opt,name=work_title,json=workTitle,proto3" json:"work_title,omitempty" xml:"WorkTitle"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkForRequest) Reset() {
	*x = WorkForRequest{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkForRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkForRequest) ProtoMessage() {}

func (x *WorkForRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkForRequest.ProtoReflect.Descriptor instead.
func (*WorkForRequest) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{35}
}

func (x *WorkForRequest) GetWorkId() *MusicalWorkIdWithoutFlag {
	if x != nil {
		return x.WorkId
	}
	return nil
}

func (x *WorkForRequest) GetWorkTitle() *WorkTitle {
	if x != nil {
		return x.WorkTitle
	}
	return nil
}

type Category struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"term,attr"
	Term string `protobuf:"bytes,1,opt,name=term,proto3" json:"term,omitempty" xml:"term,attr"`
	// @gotags: xml:"scheme,attr"
	Scheme string `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty" xml:"scheme,attr"`
	// @gotags: xml:"label,attr"
	Label         string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty" xml:"label,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{36}
}

func (x *Category) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *Category) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Category) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type Content struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"type,attr"
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" xml:"type,attr"`
	// @gotags: xml:"src,attr"
	Src           string `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty" xml:"src,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Content) Reset() {
	*x = Content{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{37}
}

func (x *Content) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Content) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

type DateTime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DateTime) Reset() {
	*x = DateTime{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTime) ProtoMessage() {}

func (x *DateTime) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateTime.ProtoReflect.Descriptor instead.
func (*DateTime) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{38}
}

func (x *DateTime) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Generator struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"uri,attr"
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty" xml:"uri,attr"`
	// @gotags: xml:"version,attr"
	Version       string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty" xml:"version,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Generator) Reset() {
	*x = Generator{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Generator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Generator) ProtoMessage() {}

func (x *Generator) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Generator.ProtoReflect.Descriptor instead.
func (*Generator) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{39}
}

func (x *Generator) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Generator) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Generator) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Icon struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Icon) Reset() {
	*x = Icon{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Icon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Icon) ProtoMessage() {}

func (x *Icon) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Icon.ProtoReflect.Descriptor instead.
func (*Icon) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{40}
}

func (x *Icon) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Id struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Id) Reset() {
	*x = Id{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{41}
}

func (x *Id) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Link struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"href,attr"
	Href string `protobuf:"bytes,1,opt,name=href,proto3" json:"href,omitempty" xml:"href,attr"`
	// @gotags: xml:"rel,attr"
	Rel string `protobuf:"bytes,2,opt,name=rel,proto3" json:"rel,omitempty" xml:"rel,attr"`
	// @gotags: xml:"type,attr"
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty" xml:"type,attr"`
	// @gotags: xml:"hreflang,attr"
	Hreflang string `protobuf:"bytes,4,opt,name=hreflang,proto3" json:"hreflang,omitempty" xml:"hreflang,attr"`
	// @gotags: xml:"title,attr"
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty" xml:"title,attr"`
	// @gotags: xml:"length,attr"
	Length        int32 `protobuf:"varint,6,opt,name=length,proto3" json:"length,omitempty" xml:"length,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Link) Reset() {
	*x = Link{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{42}
}

func (x *Link) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *Link) GetRel() string {
	if x != nil {
		return x.Rel
	}
	return ""
}

func (x *Link) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Link) GetHreflang() string {
	if x != nil {
		return x.Hreflang
	}
	return ""
}

func (x *Link) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Link) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type Logo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logo) Reset() {
	*x = Logo{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logo) ProtoMessage() {}

func (x *Logo) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logo.ProtoReflect.Descriptor instead.
func (*Logo) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{43}
}

func (x *Logo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Person struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Choice:
	//
	//	*Person_Name
	//	*Person_Uri
	//	*Person_Email
	Choice        isPerson_Choice `protobuf_oneof:"choice"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{44}
}

func (x *Person) GetChoice() isPerson_Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *Person) GetName() string {
	if x != nil {
		if x, ok := x.Choice.(*Person_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *Person) GetUri() *URI {
	if x != nil {
		if x, ok := x.Choice.(*Person_Uri); ok {
			return x.Uri
		}
	}
	return nil
}

func (x *Person) GetEmail() string {
	if x != nil {
		if x, ok := x.Choice.(*Person_Email); ok {
			return x.Email
		}
	}
	return ""
}

type isPerson_Choice interface {
	isPerson_Choice()
}

type Person_Name struct {
	// @gotags: xml:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof" xml:"name"`
}

type Person_Uri struct {
	// @gotags: xml:"uri"
	Uri *URI `protobuf:"bytes,2,opt,name=uri,proto3,oneof" xml:"uri"`
}

type Person_Email struct {
	// @gotags: xml:"email"
	Email string `protobuf:"bytes,3,opt,name=email,proto3,oneof" xml:"email"`
}

func (*Person_Name) isPerson_Choice() {}

func (*Person_Uri) isPerson_Choice() {}

func (*Person_Email) isPerson_Choice() {}

type Source struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Choice:
	//
	//	*Source_Author
	//	*Source_Category
	//	*Source_Contributor
	//	*Source_Generator
	//	*Source_Icon
	//	*Source_Id
	//	*Source_Link
	//	*Source_Logo
	//	*Source_Rights
	//	*Source_Subtitle
	//	*Source_Title
	//	*Source_Updated
	Choice        isSource_Choice `protobuf_oneof:"choice"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Source) Reset() {
	*x = Source{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{45}
}

func (x *Source) GetChoice() isSource_Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *Source) GetAuthor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Source_Author); ok {
			return x.Author
		}
	}
	return nil
}

func (x *Source) GetCategory() *Category {
	if x != nil {
		if x, ok := x.Choice.(*Source_Category); ok {
			return x.Category
		}
	}
	return nil
}

func (x *Source) GetContributor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Source_Contributor); ok {
			return x.Contributor
		}
	}
	return nil
}

func (x *Source) GetGenerator() *Generator {
	if x != nil {
		if x, ok := x.Choice.(*Source_Generator); ok {
			return x.Generator
		}
	}
	return nil
}

func (x *Source) GetIcon() *Icon {
	if x != nil {
		if x, ok := x.Choice.(*Source_Icon); ok {
			return x.Icon
		}
	}
	return nil
}

func (x *Source) GetId() *Id {
	if x != nil {
		if x, ok := x.Choice.(*Source_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *Source) GetLink() *Link {
	if x != nil {
		if x, ok := x.Choice.(*Source_Link); ok {
			return x.Link
		}
	}
	return nil
}

func (x *Source) GetLogo() *Logo {
	if x != nil {
		if x, ok := x.Choice.(*Source_Logo); ok {
			return x.Logo
		}
	}
	return nil
}

func (x *Source) GetRights() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Source_Rights); ok {
			return x.Rights
		}
	}
	return nil
}

func (x *Source) GetSubtitle() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Source_Subtitle); ok {
			return x.Subtitle
		}
	}
	return nil
}

func (x *Source) GetTitle() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Source_Title); ok {
			return x.Title
		}
	}
	return nil
}

func (x *Source) GetUpdated() *DateTime {
	if x != nil {
		if x, ok := x.Choice.(*Source_Updated); ok {
			return x.Updated
		}
	}
	return nil
}

type isSource_Choice interface {
	isSource_Choice()
}

type Source_Author struct {
	// @gotags: xml:"author"
	Author *Person `protobuf:"bytes,1,opt,name=author,proto3,oneof" xml:"author"`
}

type Source_Category struct {
	// @gotags: xml:"category"
	Category *Category `protobuf:"bytes,2,opt,name=category,proto3,oneof" xml:"category"`
}

type Source_Contributor struct {
	// @gotags: xml:"contributor"
	Contributor *Person `protobuf:"bytes,3,opt,name=contributor,proto3,oneof" xml:"contributor"`
}

type Source_Generator struct {
	// @gotags: xml:"generator"
	Generator *Generator `protobuf:"bytes,4,opt,name=generator,proto3,oneof" xml:"generator"`
}

type Source_Icon struct {
	// @gotags: xml:"icon"
	Icon *Icon `protobuf:"bytes,5,opt,name=icon,proto3,oneof" xml:"icon"`
}

type Source_Id struct {
	// @gotags: xml:"id"
	Id *Id `protobuf:"bytes,6,opt,name=id,proto3,oneof" xml:"id"`
}

type Source_Link struct {
	// @gotags: xml:"link"
	Link *Link `protobuf:"bytes,7,opt,name=link,proto3,oneof" xml:"link"`
}

type Source_Logo struct {
	// @gotags: xml:"logo"
	Logo *Logo `protobuf:"bytes,8,opt,name=logo,proto3,oneof" xml:"logo"`
}

type Source_Rights struct {
	// @gotags: xml:"rights"
	Rights *Text `protobuf:"bytes,9,opt,name=rights,proto3,oneof" xml:"rights"`
}

type Source_Subtitle struct {
	// @gotags: xml:"subtitle"
	Subtitle *Text `protobuf:"bytes,10,opt,name=subtitle,proto3,oneof" xml:"subtitle"`
}

type Source_Title struct {
	// @gotags: xml:"title"
	Title *Text `protobuf:"bytes,11,opt,name=title,proto3,oneof" xml:"title"`
}

type Source_Updated struct {
	// @gotags: xml:"updated"
	Updated *DateTime `protobuf:"bytes,12,opt,name=updated,proto3,oneof" xml:"updated"`
}

func (*Source_Author) isSource_Choice() {}

func (*Source_Category) isSource_Choice() {}

func (*Source_Contributor) isSource_Choice() {}

func (*Source_Generator) isSource_Choice() {}

func (*Source_Icon) isSource_Choice() {}

func (*Source_Id) isSource_Choice() {}

func (*Source_Link) isSource_Choice() {}

func (*Source_Logo) isSource_Choice() {}

func (*Source_Rights) isSource_Choice() {}

func (*Source_Subtitle) isSource_Choice() {}

func (*Source_Title) isSource_Choice() {}

func (*Source_Updated) isSource_Choice() {}

type Text struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"type,attr"
	Type          avs.TextTypeATOM `protobuf:"varint,1,opt,name=type,proto3,enum=ddex.avs.TextTypeATOM" json:"type,omitempty" xml:"type,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Text) Reset() {
	*x = Text{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{46}
}

func (x *Text) GetType() avs.TextTypeATOM {
	if x != nil {
		return x.Type
	}
	return avs.TextTypeATOM(0)
}

type URI struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *URI) Reset() {
	*x = URI{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *URI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URI) ProtoMessage() {}

func (x *URI) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URI.ProtoReflect.Descriptor instead.
func (*URI) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{47}
}

func (x *URI) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AllTerritoryCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IdentifierType,attr"
	IdentifierType avs.TerritoryCodeTypeIncludingDeprecatedCodes `protobuf:"varint,2,opt,name=identifier_type,json=identifierType,proto3,enum=ddex.avs.TerritoryCodeTypeIncludingDeprecatedCodes" json:"identifier_type,omitempty" xml:"IdentifierType,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AllTerritoryCode) Reset() {
	*x = AllTerritoryCode{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllTerritoryCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTerritoryCode) ProtoMessage() {}

func (x *AllTerritoryCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTerritoryCode.ProtoReflect.Descriptor instead.
func (*AllTerritoryCode) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{48}
}

func (x *AllTerritoryCode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AllTerritoryCode) GetIdentifierType() avs.TerritoryCodeTypeIncludingDeprecatedCodes {
	if x != nil {
		return x.IdentifierType
	}
	return avs.TerritoryCodeTypeIncludingDeprecatedCodes(0)
}

type ArtistType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value *ArtistTypeValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"TerritoryOfArtistTypeDescription"
	TerritoryOfArtistTypeDescription []avs.CurrentTerritoryCode `protobuf:"varint,3,rep,packed,name=territory_of_artist_type_description,json=territoryOfArtistTypeDescription,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"territory_of_artist_type_description,omitempty" xml:"TerritoryOfArtistTypeDescription"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *ArtistType) Reset() {
	*x = ArtistType{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistType) ProtoMessage() {}

func (x *ArtistType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistType.ProtoReflect.Descriptor instead.
func (*ArtistType) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{49}
}

func (x *ArtistType) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *ArtistType) GetValue() *ArtistTypeValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ArtistType) GetTerritoryOfArtistTypeDescription() []avs.CurrentTerritoryCode {
	if x != nil {
		return x.TerritoryOfArtistTypeDescription
	}
	return nil
}

type ArtistTypeValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ArtistTypeValue) Reset() {
	*x = ArtistTypeValue{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistTypeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistTypeValue) ProtoMessage() {}

func (x *ArtistTypeValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistTypeValue.ProtoReflect.Descriptor instead.
func (*ArtistTypeValue) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{50}
}

func (x *ArtistTypeValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ArtistTypeValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ArtistTypeValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ArtisticInfluence struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Party"
	Party []*PartyDescriptorWithPronunciation `protobuf:"bytes,2,rep,name=party,proto3" json:"party,omitempty" xml:"Party"`
	// @gotags: xml:"Work"
	Work []*Work `protobuf:"bytes,3,rep,name=work,proto3" json:"work,omitempty" xml:"Work"`
	// @gotags: xml:"Resource"
	Resource []*Resource `protobuf:"bytes,4,rep,name=resource,proto3" json:"resource,omitempty" xml:"Resource"`
	// @gotags: xml:"Release"
	Release []*Release `protobuf:"bytes,5,rep,name=release,proto3" json:"release,omitempty" xml:"Release"`
	// @gotags: xml:"Description"
	Description []*TextWithFormat `protobuf:"bytes,6,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"IsInfluenced"
	IsInfluenced bool `protobuf:"varint,7,opt,name=is_influenced,json=isInfluenced,proto3" json:"is_influenced,omitempty" xml:"IsInfluenced"`
	// @gotags: xml:"IsInfluencer"
	IsInfluencer  bool `protobuf:"varint,8,opt,name=is_influencer,json=isInfluencer,proto3" json:"is_influencer,omitempty" xml:"IsInfluencer"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtisticInfluence) Reset() {
	*x = ArtisticInfluence{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtisticInfluence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtisticInfluence) ProtoMessage() {}

func (x *ArtisticInfluence) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtisticInfluence.ProtoReflect.Descriptor instead.
func (*ArtisticInfluence) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{51}
}

func (x *ArtisticInfluence) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *ArtisticInfluence) GetParty() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Party
	}
	return nil
}

func (x *ArtisticInfluence) GetWork() []*Work {
	if x != nil {
		return x.Work
	}
	return nil
}

func (x *ArtisticInfluence) GetResource() []*Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ArtisticInfluence) GetRelease() []*Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *ArtisticInfluence) GetDescription() []*TextWithFormat {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ArtisticInfluence) GetIsInfluenced() bool {
	if x != nil {
		return x.IsInfluenced
	}
	return false
}

func (x *ArtisticInfluence) GetIsInfluencer() bool {
	if x != nil {
		return x.IsInfluencer
	}
	return false
}

type Award struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"AwardingBody"
	AwardingBody *PartyDescriptorWithPronunciation `protobuf:"bytes,2,opt,name=awarding_body,json=awardingBody,proto3" json:"awarding_body,omitempty" xml:"AwardingBody"`
	// @gotags: xml:"AwardedParty"
	AwardedParty *PartyDescriptorWithPronunciation `protobuf:"bytes,3,opt,name=awarded_party,json=awardedParty,proto3" json:"awarded_party,omitempty" xml:"AwardedParty"`
	// @gotags: xml:"AwardName"
	AwardName *NameWithPronunciationAndScriptCode `protobuf:"bytes,4,opt,name=award_name,json=awardName,proto3" json:"award_name,omitempty" xml:"AwardName"`
	// @gotags: xml:"Date"
	Date *EventDate `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty" xml:"Date"`
	// @gotags: xml:"IsWinner"
	IsWinner bool `protobuf:"varint,6,opt,name=is_winner,json=isWinner,proto3" json:"is_winner,omitempty" xml:"IsWinner"`
	// @gotags: xml:"Comment"
	Comment       []*TextWithFormat `protobuf:"bytes,7,rep,name=comment,proto3" json:"comment,omitempty" xml:"Comment"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Award) Reset() {
	*x = Award{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Award) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Award) ProtoMessage() {}

func (x *Award) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Award.ProtoReflect.Descriptor instead.
func (*Award) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{52}
}

func (x *Award) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Award) GetAwardingBody() *PartyDescriptorWithPronunciation {
	if x != nil {
		return x.AwardingBody
	}
	return nil
}

func (x *Award) GetAwardedParty() *PartyDescriptorWithPronunciation {
	if x != nil {
		return x.AwardedParty
	}
	return nil
}

func (x *Award) GetAwardName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.AwardName
	}
	return nil
}

func (x *Award) GetDate() *EventDate {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Award) GetIsWinner() bool {
	if x != nil {
		return x.IsWinner
	}
	return false
}

func (x *Award) GetComment() []*TextWithFormat {
	if x != nil {
		return x.Comment
	}
	return nil
}

type Biography struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Text"
	Text []*BiographyText `protobuf:"bytes,2,rep,name=text,proto3" json:"text,omitempty" xml:"Text"`
	// @gotags: xml:"Author"
	Author        []*PartyDescriptorWithPronunciation `protobuf:"bytes,3,rep,name=author,proto3" json:"author,omitempty" xml:"Author"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Biography) Reset() {
	*x = Biography{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Biography) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Biography) ProtoMessage() {}

func (x *Biography) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Biography.ProtoReflect.Descriptor instead.
func (*Biography) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{53}
}

func (x *Biography) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Biography) GetText() []*BiographyText {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *Biography) GetAuthor() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Author
	}
	return nil
}

type BiographyText struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"Format,attr"
	Format avs.TextCodecType `protobuf:"varint,4,opt,name=format,proto3,enum=ddex.avs.TextCodecType" json:"format,omitempty" xml:"Format,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,6,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BiographyText) Reset() {
	*x = BiographyText{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BiographyText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BiographyText) ProtoMessage() {}

func (x *BiographyText) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BiographyText.ProtoReflect.Descriptor instead.
func (*BiographyText) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{54}
}

func (x *BiographyText) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *BiographyText) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *BiographyText) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *BiographyText) GetFormat() avs.TextCodecType {
	if x != nil {
		return x.Format
	}
	return avs.TextCodecType(0)
}

func (x *BiographyText) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *BiographyText) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CatalogNumber struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatalogNumber) Reset() {
	*x = CatalogNumber{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatalogNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogNumber) ProtoMessage() {}

func (x *CatalogNumber) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogNumber.ProtoReflect.Descriptor instead.
func (*CatalogNumber) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{55}
}

func (x *CatalogNumber) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CatalogNumber) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ClassicalPeriod struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Name"
	Name *PeriodValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" xml:"Name"`
	// @gotags: xml:"LanguageAndScriptOfClassicalPeriod"
	LanguageAndScriptOfClassicalPeriod []string `protobuf:"bytes,3,rep,name=language_and_script_of_classical_period,json=languageAndScriptOfClassicalPeriod,proto3" json:"language_and_script_of_classical_period,omitempty" xml:"LanguageAndScriptOfClassicalPeriod"`
	// @gotags: xml:"TerritoryOfClassicalPeriodDescription"
	TerritoryOfClassicalPeriodDescription []avs.CurrentTerritoryCode `protobuf:"varint,4,rep,packed,name=territory_of_classical_period_description,json=territoryOfClassicalPeriodDescription,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"territory_of_classical_period_description,omitempty" xml:"TerritoryOfClassicalPeriodDescription"`
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *ClassicalPeriod) Reset() {
	*x = ClassicalPeriod{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassicalPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassicalPeriod) ProtoMessage() {}

func (x *ClassicalPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassicalPeriod.ProtoReflect.Descriptor instead.
func (*ClassicalPeriod) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{56}
}

func (x *ClassicalPeriod) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *ClassicalPeriod) GetName() *PeriodValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ClassicalPeriod) GetLanguageAndScriptOfClassicalPeriod() []string {
	if x != nil {
		return x.LanguageAndScriptOfClassicalPeriod
	}
	return nil
}

func (x *ClassicalPeriod) GetTerritoryOfClassicalPeriodDescription() []avs.CurrentTerritoryCode {
	if x != nil {
		return x.TerritoryOfClassicalPeriodDescription
	}
	return nil
}

type CommentaryNote struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Text"
	Text []*TextWithoutTerritory `protobuf:"bytes,2,rep,name=text,proto3" json:"text,omitempty" xml:"Text"`
	// @gotags: xml:"CommentaryNoteType"
	CommentaryNoteType []*CommentaryNoteType `protobuf:"bytes,3,rep,name=commentary_note_type,json=commentaryNoteType,proto3" json:"commentary_note_type,omitempty" xml:"CommentaryNoteType"`
	// @gotags: xml:"LanguageAndScriptOfCommentaryNote"
	LanguageAndScriptOfCommentaryNote []string `protobuf:"bytes,4,rep,name=language_and_script_of_commentary_note,json=languageAndScriptOfCommentaryNote,proto3" json:"language_and_script_of_commentary_note,omitempty" xml:"LanguageAndScriptOfCommentaryNote"`
	// @gotags: xml:"TerritoryOfCommentaryNoteDescription"
	TerritoryOfCommentaryNoteDescription []avs.CurrentTerritoryCode `protobuf:"varint,5,rep,packed,name=territory_of_commentary_note_description,json=territoryOfCommentaryNoteDescription,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"territory_of_commentary_note_description,omitempty" xml:"TerritoryOfCommentaryNoteDescription"`
	// @gotags: xml:"Author"
	Author        []*PartyDescriptorWithPronunciation `protobuf:"bytes,6,rep,name=author,proto3" json:"author,omitempty" xml:"Author"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentaryNote) Reset() {
	*x = CommentaryNote{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentaryNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentaryNote) ProtoMessage() {}

func (x *CommentaryNote) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentaryNote.ProtoReflect.Descriptor instead.
func (*CommentaryNote) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{57}
}

func (x *CommentaryNote) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *CommentaryNote) GetText() []*TextWithoutTerritory {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *CommentaryNote) GetCommentaryNoteType() []*CommentaryNoteType {
	if x != nil {
		return x.CommentaryNoteType
	}
	return nil
}

func (x *CommentaryNote) GetLanguageAndScriptOfCommentaryNote() []string {
	if x != nil {
		return x.LanguageAndScriptOfCommentaryNote
	}
	return nil
}

func (x *CommentaryNote) GetTerritoryOfCommentaryNoteDescription() []avs.CurrentTerritoryCode {
	if x != nil {
		return x.TerritoryOfCommentaryNoteDescription
	}
	return nil
}

func (x *CommentaryNote) GetAuthor() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Author
	}
	return nil
}

type CommentaryNoteType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CommentaryNoteType) Reset() {
	*x = CommentaryNoteType{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentaryNoteType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentaryNoteType) ProtoMessage() {}

func (x *CommentaryNoteType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentaryNoteType.ProtoReflect.Descriptor instead.
func (*CommentaryNoteType) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{58}
}

func (x *CommentaryNoteType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CommentaryNoteType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CommentaryNoteType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ContributorRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ContributorRole) Reset() {
	*x = ContributorRole{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorRole) ProtoMessage() {}

func (x *ContributorRole) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorRole.ProtoReflect.Descriptor instead.
func (*ContributorRole) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{59}
}

func (x *ContributorRole) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ContributorRole) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ContributorRole) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Date struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Date) Reset() {
	*x = Date{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{60}
}

func (x *Date) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Date) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

type Description struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Description) Reset() {
	*x = Description{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Description) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Description) ProtoMessage() {}

func (x *Description) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Description.ProtoReflect.Descriptor instead.
func (*Description) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{61}
}

func (x *Description) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Description) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type DetailedHashSum struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Algorithm"
	Algorithm *HashSumAlgorithmType `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty" xml:"Algorithm"`
	// @gotags: xml:"Version"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version"`
	// @gotags: xml:"Parameter"
	Parameter string `protobuf:"bytes,3,opt,name=parameter,proto3" json:"parameter,omitempty" xml:"Parameter"`
	// @gotags: xml:"DataType"
	DataType avs.BinaryDataType `protobuf:"varint,4,opt,name=data_type,json=dataType,proto3,enum=ddex.avs.BinaryDataType" json:"data_type,omitempty" xml:"DataType"`
	// @gotags: xml:"HashSumValue"
	HashSumValue  string `protobuf:"bytes,5,opt,name=hash_sum_value,json=hashSumValue,proto3" json:"hash_sum_value,omitempty" xml:"HashSumValue"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailedHashSum) Reset() {
	*x = DetailedHashSum{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedHashSum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedHashSum) ProtoMessage() {}

func (x *DetailedHashSum) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedHashSum.ProtoReflect.Descriptor instead.
func (*DetailedHashSum) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{62}
}

func (x *DetailedHashSum) GetAlgorithm() *HashSumAlgorithmType {
	if x != nil {
		return x.Algorithm
	}
	return nil
}

func (x *DetailedHashSum) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DetailedHashSum) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

func (x *DetailedHashSum) GetDataType() avs.BinaryDataType {
	if x != nil {
		return x.DataType
	}
	return avs.BinaryDataType(0)
}

func (x *DetailedHashSum) GetHashSumValue() string {
	if x != nil {
		return x.HashSumValue
	}
	return ""
}

type DetailedPartyId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISNI"
	ISNI string `protobuf:"bytes,1,opt,name=i_s_n_i,json=iSNI,proto3" json:"i_s_n_i,omitempty" xml:"ISNI"`
	// @gotags: xml:"DPID"
	DPID string `protobuf:"bytes,2,opt,name=d_p_i_d,json=dPID,proto3" json:"d_p_i_d,omitempty" xml:"DPID"`
	// @gotags: xml:"IpiNameNumber"
	IpiNameNumber string `protobuf:"bytes,3,opt,name=ipi_name_number,json=ipiNameNumber,proto3" json:"ipi_name_number,omitempty" xml:"IpiNameNumber"`
	// @gotags: xml:"IPN"
	IPN string `protobuf:"bytes,4,opt,name=i_p_n,json=iPN,proto3" json:"i_p_n,omitempty" xml:"IPN"`
	// @gotags: xml:"CisacSocietyId"
	CisacSocietyId string `protobuf:"bytes,5,opt,name=cisac_society_id,json=cisacSocietyId,proto3" json:"cisac_society_id,omitempty" xml:"CisacSocietyId"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,6,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailedPartyId) Reset() {
	*x = DetailedPartyId{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedPartyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedPartyId) ProtoMessage() {}

func (x *DetailedPartyId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedPartyId.ProtoReflect.Descriptor instead.
func (*DetailedPartyId) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{63}
}

func (x *DetailedPartyId) GetISNI() string {
	if x != nil {
		return x.ISNI
	}
	return ""
}

func (x *DetailedPartyId) GetDPID() string {
	if x != nil {
		return x.DPID
	}
	return ""
}

func (x *DetailedPartyId) GetIpiNameNumber() string {
	if x != nil {
		return x.IpiNameNumber
	}
	return ""
}

func (x *DetailedPartyId) GetIPN() string {
	if x != nil {
		return x.IPN
	}
	return ""
}

func (x *DetailedPartyId) GetCisacSocietyId() string {
	if x != nil {
		return x.CisacSocietyId
	}
	return ""
}

func (x *DetailedPartyId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type DisplayArtistName struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *DisplayArtistName) Reset() {
	*x = DisplayArtistName{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayArtistName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayArtistName) ProtoMessage() {}

func (x *DisplayArtistName) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayArtistName.ProtoReflect.Descriptor instead.
func (*DisplayArtistName) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{64}
}

func (x *DisplayArtistName) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DisplayArtistName) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DisplayArtistName) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

type DisplayArtistNameWithDefault struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayArtistNameWithDefault) Reset() {
	*x = DisplayArtistNameWithDefault{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayArtistNameWithDefault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayArtistNameWithDefault) ProtoMessage() {}

func (x *DisplayArtistNameWithDefault) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayArtistNameWithDefault.ProtoReflect.Descriptor instead.
func (*DisplayArtistNameWithDefault) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{65}
}

func (x *DisplayArtistNameWithDefault) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DisplayArtistNameWithDefault) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DisplayArtistNameWithDefault) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *DisplayArtistNameWithDefault) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type DisplayArtistNameWithPronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Name"
	Name *DisplayArtistNameWithDefault `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" xml:"Name"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*Pronunciation `protobuf:"bytes,2,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayArtistNameWithPronunciation) Reset() {
	*x = DisplayArtistNameWithPronunciation{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayArtistNameWithPronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayArtistNameWithPronunciation) ProtoMessage() {}

func (x *DisplayArtistNameWithPronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayArtistNameWithPronunciation.ProtoReflect.Descriptor instead.
func (*DisplayArtistNameWithPronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{66}
}

func (x *DisplayArtistNameWithPronunciation) GetName() *DisplayArtistNameWithDefault {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *DisplayArtistNameWithPronunciation) GetPronunciation() []*Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

type DisplaySubTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Title"
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty" xml:"Title"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*Pronunciation `protobuf:"bytes,2,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	// @gotags: xml:"IsDisplayedInTitle,attr"
	IsDisplayedInTitle bool `protobuf:"varint,4,opt,name=is_displayed_in_title,json=isDisplayedInTitle,proto3" json:"is_displayed_in_title,omitempty" xml:"IsDisplayedInTitle,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,6,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	// @gotags: xml:"SubTitleType,attr"
	SubTitleType  string `protobuf:"bytes,7,opt,name=sub_title_type,json=subTitleType,proto3" json:"sub_title_type,omitempty" xml:"SubTitleType,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplaySubTitle) Reset() {
	*x = DisplaySubTitle{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplaySubTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplaySubTitle) ProtoMessage() {}

func (x *DisplaySubTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplaySubTitle.ProtoReflect.Descriptor instead.
func (*DisplaySubTitle) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{67}
}

func (x *DisplaySubTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DisplaySubTitle) GetPronunciation() []*Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

func (x *DisplaySubTitle) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *DisplaySubTitle) GetIsDisplayedInTitle() bool {
	if x != nil {
		return x.IsDisplayedInTitle
	}
	return false
}

func (x *DisplaySubTitle) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DisplaySubTitle) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

func (x *DisplaySubTitle) GetSubTitleType() string {
	if x != nil {
		return x.SubTitleType
	}
	return ""
}

type DisplayTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TitleText"
	TitleText *TitleText `protobuf:"bytes,1,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty" xml:"TitleText"`
	// @gotags: xml:"SubTitle"
	SubTitle []*DisplaySubTitle `protobuf:"bytes,2,rep,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty" xml:"SubTitle"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,3,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,4,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayTitle) Reset() {
	*x = DisplayTitle{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayTitle) ProtoMessage() {}

func (x *DisplayTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayTitle.ProtoReflect.Descriptor instead.
func (*DisplayTitle) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{68}
}

func (x *DisplayTitle) GetTitleText() *TitleText {
	if x != nil {
		return x.TitleText
	}
	return nil
}

func (x *DisplayTitle) GetSubTitle() []*DisplaySubTitle {
	if x != nil {
		return x.SubTitle
	}
	return nil
}

func (x *DisplayTitle) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DisplayTitle) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *DisplayTitle) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type Epoch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value []*Name `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"RelatedArtist"
	RelatedArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,3,rep,name=related_artist,json=relatedArtist,proto3" json:"related_artist,omitempty" xml:"RelatedArtist"`
	// @gotags: xml:"RelatedCreation"
	RelatedCreation []*RelatedCreation `protobuf:"bytes,4,rep,name=related_creation,json=relatedCreation,proto3" json:"related_creation,omitempty" xml:"RelatedCreation"`
	// @gotags: xml:"StartDate"
	StartDate *Date `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" xml:"StartDate"`
	// @gotags: xml:"EndDate"
	EndDate *Date `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty" xml:"EndDate"`
	// @gotags: xml:"LanguageAndScriptOfEpoch"
	LanguageAndScriptOfEpoch []string `protobuf:"bytes,7,rep,name=language_and_script_of_epoch,json=languageAndScriptOfEpoch,proto3" json:"language_and_script_of_epoch,omitempty" xml:"LanguageAndScriptOfEpoch"`
	// @gotags: xml:"TerritoryOfEpochDescription"
	TerritoryOfEpochDescription []avs.CurrentTerritoryCode `protobuf:"varint,8,rep,packed,name=territory_of_epoch_description,json=territoryOfEpochDescription,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"territory_of_epoch_description,omitempty" xml:"TerritoryOfEpochDescription"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Epoch) Reset() {
	*x = Epoch{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Epoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Epoch) ProtoMessage() {}

func (x *Epoch) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Epoch.ProtoReflect.Descriptor instead.
func (*Epoch) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{69}
}

func (x *Epoch) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Epoch) GetValue() []*Name {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Epoch) GetRelatedArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.RelatedArtist
	}
	return nil
}

func (x *Epoch) GetRelatedCreation() []*RelatedCreation {
	if x != nil {
		return x.RelatedCreation
	}
	return nil
}

func (x *Epoch) GetStartDate() *Date {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Epoch) GetEndDate() *Date {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Epoch) GetLanguageAndScriptOfEpoch() []string {
	if x != nil {
		return x.LanguageAndScriptOfEpoch
	}
	return nil
}

func (x *Epoch) GetTerritoryOfEpochDescription() []avs.CurrentTerritoryCode {
	if x != nil {
		return x.TerritoryOfEpochDescription
	}
	return nil
}

type EventDate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	// @gotags: xml:"IsBefore,attr"
	IsBefore bool `protobuf:"varint,3,opt,name=is_before,json=isBefore,proto3" json:"is_before,omitempty" xml:"IsBefore,attr"`
	// @gotags: xml:"IsAfter,attr"
	IsAfter bool `protobuf:"varint,4,opt,name=is_after,json=isAfter,proto3" json:"is_after,omitempty" xml:"IsAfter,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.AllTerritoryCode `protobuf:"varint,5,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.AllTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"LocationDescription,attr"
	LocationDescription string `protobuf:"bytes,6,opt,name=location_description,json=locationDescription,proto3" json:"location_description,omitempty" xml:"LocationDescription,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,7,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventDate) Reset() {
	*x = EventDate{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDate) ProtoMessage() {}

func (x *EventDate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDate.ProtoReflect.Descriptor instead.
func (*EventDate) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{70}
}

func (x *EventDate) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventDate) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

func (x *EventDate) GetIsBefore() bool {
	if x != nil {
		return x.IsBefore
	}
	return false
}

func (x *EventDate) GetIsAfter() bool {
	if x != nil {
		return x.IsAfter
	}
	return false
}

func (x *EventDate) GetApplicableTerritoryCode() avs.AllTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.AllTerritoryCode(0)
}

func (x *EventDate) GetLocationDescription() string {
	if x != nil {
		return x.LocationDescription
	}
	return ""
}

func (x *EventDate) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type File struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"URI"
	URI string `protobuf:"bytes,1,opt,name=u_r_i,json=uRI,proto3" json:"u_r_i,omitempty" xml:"URI"`
	// @gotags: xml:"HashSum"
	HashSum *DetailedHashSum `protobuf:"bytes,2,opt,name=hash_sum,json=hashSum,proto3" json:"hash_sum,omitempty" xml:"HashSum"`
	// @gotags: xml:"FileSize"
	FileSize      string `protobuf:"bytes,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty" xml:"FileSize"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{71}
}

func (x *File) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *File) GetHashSum() *DetailedHashSum {
	if x != nil {
		return x.HashSum
	}
	return nil
}

func (x *File) GetFileSize() string {
	if x != nil {
		return x.FileSize
	}
	return ""
}

type HashSumAlgorithmType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HashSumAlgorithmType) Reset() {
	*x = HashSumAlgorithmType{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashSumAlgorithmType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashSumAlgorithmType) ProtoMessage() {}

func (x *HashSumAlgorithmType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashSumAlgorithmType.ProtoReflect.Descriptor instead.
func (*HashSumAlgorithmType) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{72}
}

func (x *HashSumAlgorithmType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *HashSumAlgorithmType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HashSumAlgorithmType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Image struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"File"
	File *File `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty" xml:"File"`
	// @gotags: xml:"ImageType"
	ImageType     []*ImageType `protobuf:"bytes,3,rep,name=image_type,json=imageType,proto3" json:"image_type,omitempty" xml:"ImageType"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{73}
}

func (x *Image) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Image) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Image) GetImageType() []*ImageType {
	if x != nil {
		return x.ImageType
	}
	return nil
}

type ImageType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ImageType) Reset() {
	*x = ImageType{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageType) ProtoMessage() {}

func (x *ImageType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageType.ProtoReflect.Descriptor instead.
func (*ImageType) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{74}
}

func (x *ImageType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ImageType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type MessageAuditTrail struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageAuditTrailEvent"
	MessageAuditTrailEvent []*MessageAuditTrailEvent `protobuf:"bytes,1,rep,name=message_audit_trail_event,json=messageAuditTrailEvent,proto3" json:"message_audit_trail_event,omitempty" xml:"MessageAuditTrailEvent"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MessageAuditTrail) Reset() {
	*x = MessageAuditTrail{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAuditTrail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAuditTrail) ProtoMessage() {}

func (x *MessageAuditTrail) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAuditTrail.ProtoReflect.Descriptor instead.
func (*MessageAuditTrail) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{75}
}

func (x *MessageAuditTrail) GetMessageAuditTrailEvent() []*MessageAuditTrailEvent {
	if x != nil {
		return x.MessageAuditTrailEvent
	}
	return nil
}

type MessageAuditTrailEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessagingPartyDescriptor"
	MessagingPartyDescriptor *MessagingPartyWithoutCode `protobuf:"bytes,1,opt,name=messaging_party_descriptor,json=messagingPartyDescriptor,proto3" json:"messaging_party_descriptor,omitempty" xml:"MessagingPartyDescriptor"`
	// @gotags: xml:"DateTime"
	DateTime      string `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty" xml:"DateTime"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageAuditTrailEvent) Reset() {
	*x = MessageAuditTrailEvent{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAuditTrailEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAuditTrailEvent) ProtoMessage() {}

func (x *MessageAuditTrailEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAuditTrailEvent.ProtoReflect.Descriptor instead.
func (*MessageAuditTrailEvent) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{76}
}

func (x *MessageAuditTrailEvent) GetMessagingPartyDescriptor() *MessagingPartyWithoutCode {
	if x != nil {
		return x.MessagingPartyDescriptor
	}
	return nil
}

func (x *MessageAuditTrailEvent) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

type MessageHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageThreadId"
	MessageThreadId string `protobuf:"bytes,1,opt,name=message_thread_id,json=messageThreadId,proto3" json:"message_thread_id,omitempty" xml:"MessageThreadId"`
	// @gotags: xml:"MessageId"
	MessageId string `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty" xml:"MessageId"`
	// @gotags: xml:"MessageFileName"
	MessageFileName string `protobuf:"bytes,3,opt,name=message_file_name,json=messageFileName,proto3" json:"message_file_name,omitempty" xml:"MessageFileName"`
	// @gotags: xml:"MessageSender"
	MessageSender *MessagingPartyWithoutCode `protobuf:"bytes,4,opt,name=message_sender,json=messageSender,proto3" json:"message_sender,omitempty" xml:"MessageSender"`
	// @gotags: xml:"SentOnBehalfOf"
	SentOnBehalfOf *MessagingPartyWithoutCode `protobuf:"bytes,5,opt,name=sent_on_behalf_of,json=sentOnBehalfOf,proto3" json:"sent_on_behalf_of,omitempty" xml:"SentOnBehalfOf"`
	// @gotags: xml:"MessageRecipient"
	MessageRecipient []*MessagingPartyWithoutCode `protobuf:"bytes,6,rep,name=message_recipient,json=messageRecipient,proto3" json:"message_recipient,omitempty" xml:"MessageRecipient"`
	// @gotags: xml:"MessageCreatedDateTime"
	MessageCreatedDateTime string `protobuf:"bytes,7,opt,name=message_created_date_time,json=messageCreatedDateTime,proto3" json:"message_created_date_time,omitempty" xml:"MessageCreatedDateTime"`
	// @gotags: xml:"MessageAuditTrail"
	MessageAuditTrail *MessageAuditTrail `protobuf:"bytes,8,opt,name=message_audit_trail,json=messageAuditTrail,proto3" json:"message_audit_trail,omitempty" xml:"MessageAuditTrail"`
	// @gotags: xml:"MessageControlType"
	MessageControlType avs.MessageControlType `protobuf:"varint,9,opt,name=message_control_type,json=messageControlType,proto3,enum=ddex.avs.MessageControlType" json:"message_control_type,omitempty" xml:"MessageControlType"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MessageHeader) Reset() {
	*x = MessageHeader{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageHeader) ProtoMessage() {}

func (x *MessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageHeader.ProtoReflect.Descriptor instead.
func (*MessageHeader) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{77}
}

func (x *MessageHeader) GetMessageThreadId() string {
	if x != nil {
		return x.MessageThreadId
	}
	return ""
}

func (x *MessageHeader) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageHeader) GetMessageFileName() string {
	if x != nil {
		return x.MessageFileName
	}
	return ""
}

func (x *MessageHeader) GetMessageSender() *MessagingPartyWithoutCode {
	if x != nil {
		return x.MessageSender
	}
	return nil
}

func (x *MessageHeader) GetSentOnBehalfOf() *MessagingPartyWithoutCode {
	if x != nil {
		return x.SentOnBehalfOf
	}
	return nil
}

func (x *MessageHeader) GetMessageRecipient() []*MessagingPartyWithoutCode {
	if x != nil {
		return x.MessageRecipient
	}
	return nil
}

func (x *MessageHeader) GetMessageCreatedDateTime() string {
	if x != nil {
		return x.MessageCreatedDateTime
	}
	return ""
}

func (x *MessageHeader) GetMessageAuditTrail() *MessageAuditTrail {
	if x != nil {
		return x.MessageAuditTrail
	}
	return nil
}

func (x *MessageHeader) GetMessageControlType() avs.MessageControlType {
	if x != nil {
		return x.MessageControlType
	}
	return avs.MessageControlType(0)
}

type MessagingPartyWithoutCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"PartyId"
	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty" xml:"PartyId"`
	// @gotags: xml:"PartyName"
	PartyName *PartyNameWithoutCode `protobuf:"bytes,2,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty" xml:"PartyName"`
	// @gotags: xml:"TradingName"
	TradingName   string `protobuf:"bytes,3,opt,name=trading_name,json=tradingName,proto3" json:"trading_name,omitempty" xml:"TradingName"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagingPartyWithoutCode) Reset() {
	*x = MessagingPartyWithoutCode{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagingPartyWithoutCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingPartyWithoutCode) ProtoMessage() {}

func (x *MessagingPartyWithoutCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingPartyWithoutCode.ProtoReflect.Descriptor instead.
func (*MessagingPartyWithoutCode) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{78}
}

func (x *MessagingPartyWithoutCode) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *MessagingPartyWithoutCode) GetPartyName() *PartyNameWithoutCode {
	if x != nil {
		return x.PartyName
	}
	return nil
}

func (x *MessagingPartyWithoutCode) GetTradingName() string {
	if x != nil {
		return x.TradingName
	}
	return ""
}

type MetadataSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"SourceReference"
	SourceReference string `protobuf:"bytes,1,opt,name=source_reference,json=sourceReference,proto3" json:"source_reference,omitempty" xml:"SourceReference"`
	// @gotags: xml:"MetadataSourceType"
	MetadataSourceType *MetadataSourceType `protobuf:"bytes,2,opt,name=metadata_source_type,json=metadataSourceType,proto3" json:"metadata_source_type,omitempty" xml:"MetadataSourceType"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MetadataSource) Reset() {
	*x = MetadataSource{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSource) ProtoMessage() {}

func (x *MetadataSource) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataSource.ProtoReflect.Descriptor instead.
func (*MetadataSource) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{79}
}

func (x *MetadataSource) GetSourceReference() string {
	if x != nil {
		return x.SourceReference
	}
	return ""
}

func (x *MetadataSource) GetMetadataSourceType() *MetadataSourceType {
	if x != nil {
		return x.MetadataSourceType
	}
	return nil
}

type MetadataSourceList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSource"
	MetadataSource []*MetadataSource `protobuf:"bytes,1,rep,name=metadata_source,json=metadataSource,proto3" json:"metadata_source,omitempty" xml:"MetadataSource"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MetadataSourceList) Reset() {
	*x = MetadataSourceList{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataSourceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSourceList) ProtoMessage() {}

func (x *MetadataSourceList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataSourceList.ProtoReflect.Descriptor instead.
func (*MetadataSourceList) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{80}
}

func (x *MetadataSourceList) GetMetadataSource() []*MetadataSource {
	if x != nil {
		return x.MetadataSource
	}
	return nil
}

type MetadataSourceReference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"AssertionDateTime,attr"
	AssertionDateTime string `protobuf:"bytes,2,opt,name=assertion_date_time,json=assertionDateTime,proto3" json:"assertion_date_time,omitempty" xml:"AssertionDateTime,attr"`
	// @gotags: xml:"Status,attr"
	Status avs.AssertionStatus `protobuf:"varint,3,opt,name=status,proto3,enum=ddex.avs.AssertionStatus" json:"status,omitempty" xml:"Status,attr"`
	// @gotags: xml:"Weight,attr"
	Weight        string `protobuf:"bytes,4,opt,name=weight,proto3" json:"weight,omitempty" xml:"Weight,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetadataSourceReference) Reset() {
	*x = MetadataSourceReference{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataSourceReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSourceReference) ProtoMessage() {}

func (x *MetadataSourceReference) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataSourceReference.ProtoReflect.Descriptor instead.
func (*MetadataSourceReference) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{81}
}

func (x *MetadataSourceReference) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MetadataSourceReference) GetAssertionDateTime() string {
	if x != nil {
		return x.AssertionDateTime
	}
	return ""
}

func (x *MetadataSourceReference) GetStatus() avs.AssertionStatus {
	if x != nil {
		return x.Status
	}
	return avs.AssertionStatus(0)
}

func (x *MetadataSourceReference) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

type MetadataSourceType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MetadataSourceType) Reset() {
	*x = MetadataSourceType{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataSourceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSourceType) ProtoMessage() {}

func (x *MetadataSourceType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataSourceType.ProtoReflect.Descriptor instead.
func (*MetadataSourceType) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{82}
}

func (x *MetadataSourceType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MetadataSourceType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *MetadataSourceType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type MusicalWorkIdWithoutFlag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISWC"
	ISWC string `protobuf:"bytes,1,opt,name=i_s_w_c,json=iSWC,proto3" json:"i_s_w_c,omitempty" xml:"ISWC"`
	// @gotags: xml:"OpusNumber"
	OpusNumber string `protobuf:"bytes,2,opt,name=opus_number,json=opusNumber,proto3" json:"opus_number,omitempty" xml:"OpusNumber"`
	// @gotags: xml:"ComposerCatalogNumber"
	ComposerCatalogNumber []string `protobuf:"bytes,3,rep,name=composer_catalog_number,json=composerCatalogNumber,proto3" json:"composer_catalog_number,omitempty" xml:"ComposerCatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,4,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MusicalWorkIdWithoutFlag) Reset() {
	*x = MusicalWorkIdWithoutFlag{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MusicalWorkIdWithoutFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicalWorkIdWithoutFlag) ProtoMessage() {}

func (x *MusicalWorkIdWithoutFlag) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicalWorkIdWithoutFlag.ProtoReflect.Descriptor instead.
func (*MusicalWorkIdWithoutFlag) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{83}
}

func (x *MusicalWorkIdWithoutFlag) GetISWC() string {
	if x != nil {
		return x.ISWC
	}
	return ""
}

func (x *MusicalWorkIdWithoutFlag) GetOpusNumber() string {
	if x != nil {
		return x.OpusNumber
	}
	return ""
}

func (x *MusicalWorkIdWithoutFlag) GetComposerCatalogNumber() []string {
	if x != nil {
		return x.ComposerCatalogNumber
	}
	return nil
}

func (x *MusicalWorkIdWithoutFlag) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type Name struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Name) Reset() {
	*x = Name{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{84}
}

func (x *Name) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Name) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type NameId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISNI"
	ISNI string `protobuf:"bytes,1,opt,name=i_s_n_i,json=iSNI,proto3" json:"i_s_n_i,omitempty" xml:"ISNI"`
	// @gotags: xml:"IpiNameNumber"
	IpiNameNumber string `protobuf:"bytes,2,opt,name=ipi_name_number,json=ipiNameNumber,proto3" json:"ipi_name_number,omitempty" xml:"IpiNameNumber"`
	// @gotags: xml:"IPN"
	IPN string `protobuf:"bytes,3,opt,name=i_p_n,json=iPN,proto3" json:"i_p_n,omitempty" xml:"IPN"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,4,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"IsDeprecated,attr"
	IsDeprecated  bool `protobuf:"varint,5,opt,name=is_deprecated,json=isDeprecated,proto3" json:"is_deprecated,omitempty" xml:"IsDeprecated,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameId) Reset() {
	*x = NameId{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameId) ProtoMessage() {}

func (x *NameId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameId.ProtoReflect.Descriptor instead.
func (*NameId) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{85}
}

func (x *NameId) GetISNI() string {
	if x != nil {
		return x.ISNI
	}
	return ""
}

func (x *NameId) GetIpiNameNumber() string {
	if x != nil {
		return x.IpiNameNumber
	}
	return ""
}

func (x *NameId) GetIPN() string {
	if x != nil {
		return x.IPN
	}
	return ""
}

func (x *NameId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *NameId) GetIsDeprecated() bool {
	if x != nil {
		return x.IsDeprecated
	}
	return false
}

type NameWithPronunciationAndScriptCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Name"
	Name *Name `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" xml:"Name"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*Pronunciation `protobuf:"bytes,2,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameWithPronunciationAndScriptCode) Reset() {
	*x = NameWithPronunciationAndScriptCode{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameWithPronunciationAndScriptCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameWithPronunciationAndScriptCode) ProtoMessage() {}

func (x *NameWithPronunciationAndScriptCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameWithPronunciationAndScriptCode.ProtoReflect.Descriptor instead.
func (*NameWithPronunciationAndScriptCode) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{86}
}

func (x *NameWithPronunciationAndScriptCode) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *NameWithPronunciationAndScriptCode) GetPronunciation() []*Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

type PartyDescriptorWithPronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Choice:
	//
	//	*PartyDescriptorWithPronunciation_PartyId
	Choice        isPartyDescriptorWithPronunciation_Choice `protobuf_oneof:"choice"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartyDescriptorWithPronunciation) Reset() {
	*x = PartyDescriptorWithPronunciation{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyDescriptorWithPronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyDescriptorWithPronunciation) ProtoMessage() {}

func (x *PartyDescriptorWithPronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyDescriptorWithPronunciation.ProtoReflect.Descriptor instead.
func (*PartyDescriptorWithPronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{87}
}

func (x *PartyDescriptorWithPronunciation) GetChoice() isPartyDescriptorWithPronunciation_Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *PartyDescriptorWithPronunciation) GetPartyId() *DetailedPartyId {
	if x != nil {
		if x, ok := x.Choice.(*PartyDescriptorWithPronunciation_PartyId); ok {
			return x.PartyId
		}
	}
	return nil
}

type isPartyDescriptorWithPronunciation_Choice interface {
	isPartyDescriptorWithPronunciation_Choice()
}

type PartyDescriptorWithPronunciation_PartyId struct {
	// @gotags: xml:"PartyId"
	PartyId *DetailedPartyId `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3,oneof" xml:"PartyId"`
}

func (*PartyDescriptorWithPronunciation_PartyId) isPartyDescriptorWithPronunciation_Choice() {}

type PartyNameWithPronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"FullName"
	FullName *NameWithPronunciationAndScriptCode `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty" xml:"FullName"`
	// @gotags: xml:"FullNameAsciiTranscribed"
	FullNameAsciiTranscribed *NameWithPronunciationAndScriptCode `protobuf:"bytes,2,opt,name=full_name_ascii_transcribed,json=fullNameAsciiTranscribed,proto3" json:"full_name_ascii_transcribed,omitempty" xml:"FullNameAsciiTranscribed"`
	// @gotags: xml:"FullNameIndexed"
	FullNameIndexed *NameWithPronunciationAndScriptCode `protobuf:"bytes,3,opt,name=full_name_indexed,json=fullNameIndexed,proto3" json:"full_name_indexed,omitempty" xml:"FullNameIndexed"`
	// @gotags: xml:"NamesBeforeKeyName"
	NamesBeforeKeyName *NameWithPronunciationAndScriptCode `protobuf:"bytes,4,opt,name=names_before_key_name,json=namesBeforeKeyName,proto3" json:"names_before_key_name,omitempty" xml:"NamesBeforeKeyName"`
	// @gotags: xml:"KeyName"
	KeyName *NameWithPronunciationAndScriptCode `protobuf:"bytes,5,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty" xml:"KeyName"`
	// @gotags: xml:"NamesAfterKeyName"
	NamesAfterKeyName *NameWithPronunciationAndScriptCode `protobuf:"bytes,6,opt,name=names_after_key_name,json=namesAfterKeyName,proto3" json:"names_after_key_name,omitempty" xml:"NamesAfterKeyName"`
	// @gotags: xml:"AbbreviatedName"
	AbbreviatedName *NameWithPronunciationAndScriptCode `protobuf:"bytes,7,opt,name=abbreviated_name,json=abbreviatedName,proto3" json:"abbreviated_name,omitempty" xml:"AbbreviatedName"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,8,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,9,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PartyNameWithPronunciation) Reset() {
	*x = PartyNameWithPronunciation{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyNameWithPronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameWithPronunciation) ProtoMessage() {}

func (x *PartyNameWithPronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameWithPronunciation.ProtoReflect.Descriptor instead.
func (*PartyNameWithPronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{88}
}

func (x *PartyNameWithPronunciation) GetFullName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.FullName
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetFullNameAsciiTranscribed() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.FullNameAsciiTranscribed
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetFullNameIndexed() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.FullNameIndexed
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetNamesBeforeKeyName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.NamesBeforeKeyName
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetKeyName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.KeyName
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetNamesAfterKeyName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.NamesAfterKeyName
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetAbbreviatedName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.AbbreviatedName
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *PartyNameWithPronunciation) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

type PartyNameWithoutCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"FullName"
	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty" xml:"FullName"`
	// @gotags: xml:"FullNameAsciiTranscribed"
	FullNameAsciiTranscribed string `protobuf:"bytes,2,opt,name=full_name_ascii_transcribed,json=fullNameAsciiTranscribed,proto3" json:"full_name_ascii_transcribed,omitempty" xml:"FullNameAsciiTranscribed"`
	// @gotags: xml:"FullNameIndexed"
	FullNameIndexed string `protobuf:"bytes,3,opt,name=full_name_indexed,json=fullNameIndexed,proto3" json:"full_name_indexed,omitempty" xml:"FullNameIndexed"`
	// @gotags: xml:"NamesBeforeKeyName"
	NamesBeforeKeyName string `protobuf:"bytes,4,opt,name=names_before_key_name,json=namesBeforeKeyName,proto3" json:"names_before_key_name,omitempty" xml:"NamesBeforeKeyName"`
	// @gotags: xml:"KeyName"
	KeyName string `protobuf:"bytes,5,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty" xml:"KeyName"`
	// @gotags: xml:"NamesAfterKeyName"
	NamesAfterKeyName string `protobuf:"bytes,6,opt,name=names_after_key_name,json=namesAfterKeyName,proto3" json:"names_after_key_name,omitempty" xml:"NamesAfterKeyName"`
	// @gotags: xml:"AbbreviatedName"
	AbbreviatedName string `protobuf:"bytes,7,opt,name=abbreviated_name,json=abbreviatedName,proto3" json:"abbreviated_name,omitempty" xml:"AbbreviatedName"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PartyNameWithoutCode) Reset() {
	*x = PartyNameWithoutCode{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyNameWithoutCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameWithoutCode) ProtoMessage() {}

func (x *PartyNameWithoutCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameWithoutCode.ProtoReflect.Descriptor instead.
func (*PartyNameWithoutCode) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{89}
}

func (x *PartyNameWithoutCode) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetFullNameAsciiTranscribed() string {
	if x != nil {
		return x.FullNameAsciiTranscribed
	}
	return ""
}

func (x *PartyNameWithoutCode) GetFullNameIndexed() string {
	if x != nil {
		return x.FullNameIndexed
	}
	return ""
}

func (x *PartyNameWithoutCode) GetNamesBeforeKeyName() string {
	if x != nil {
		return x.NamesBeforeKeyName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetNamesAfterKeyName() string {
	if x != nil {
		return x.NamesAfterKeyName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetAbbreviatedName() string {
	if x != nil {
		return x.AbbreviatedName
	}
	return ""
}

type PeriodValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PeriodValue) Reset() {
	*x = PeriodValue{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeriodValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodValue) ProtoMessage() {}

func (x *PeriodValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodValue.ProtoReflect.Descriptor instead.
func (*PeriodValue) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{90}
}

func (x *PeriodValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PeriodValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PeriodValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type PeriodWithTime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"StartDateTime"
	StartDateTime string `protobuf:"bytes,1,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty" xml:"StartDateTime"`
	// @gotags: xml:"EndDateTime"
	EndDateTime   string `protobuf:"bytes,2,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty" xml:"EndDateTime"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeriodWithTime) Reset() {
	*x = PeriodWithTime{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeriodWithTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodWithTime) ProtoMessage() {}

func (x *PeriodWithTime) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodWithTime.ProtoReflect.Descriptor instead.
func (*PeriodWithTime) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{91}
}

func (x *PeriodWithTime) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *PeriodWithTime) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

type Pronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsCanonical,attr"
	IsCanonical bool `protobuf:"varint,2,opt,name=is_canonical,json=isCanonical,proto3" json:"is_canonical,omitempty" xml:"IsCanonical,attr"`
	// @gotags: xml:"LanguageCode,attr"
	LanguageCode string `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty" xml:"LanguageCode,attr"`
	// @gotags: xml:"EncodingType,attr"
	EncodingType avs.EncodingType `protobuf:"varint,4,opt,name=encoding_type,json=encodingType,proto3,enum=ddex.avs.EncodingType" json:"encoding_type,omitempty" xml:"EncodingType,attr"`
	// @gotags: xml:"EncodingNamespace,attr"
	EncodingNamespace string `protobuf:"bytes,5,opt,name=encoding_namespace,json=encodingNamespace,proto3" json:"encoding_namespace,omitempty" xml:"EncodingNamespace,attr"`
	// @gotags: xml:"EncodingUserDefinedValue,attr"
	EncodingUserDefinedValue string `protobuf:"bytes,6,opt,name=encoding_user_defined_value,json=encodingUserDefinedValue,proto3" json:"encoding_user_defined_value,omitempty" xml:"EncodingUserDefinedValue,attr"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Pronunciation) Reset() {
	*x = Pronunciation{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pronunciation) ProtoMessage() {}

func (x *Pronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pronunciation.ProtoReflect.Descriptor instead.
func (*Pronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{92}
}

func (x *Pronunciation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Pronunciation) GetIsCanonical() bool {
	if x != nil {
		return x.IsCanonical
	}
	return false
}

func (x *Pronunciation) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *Pronunciation) GetEncodingType() avs.EncodingType {
	if x != nil {
		return x.EncodingType
	}
	return avs.EncodingType(0)
}

func (x *Pronunciation) GetEncodingNamespace() string {
	if x != nil {
		return x.EncodingNamespace
	}
	return ""
}

func (x *Pronunciation) GetEncodingUserDefinedValue() string {
	if x != nil {
		return x.EncodingUserDefinedValue
	}
	return ""
}

type ProprietaryId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProprietaryId) Reset() {
	*x = ProprietaryId{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProprietaryId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProprietaryId) ProtoMessage() {}

func (x *ProprietaryId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProprietaryId.ProtoReflect.Descriptor instead.
func (*ProprietaryId) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{93}
}

func (x *ProprietaryId) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ProprietaryId) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type RelatedCreation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Title"
	Title         *TitleWithPronunciation `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty" xml:"Title"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelatedCreation) Reset() {
	*x = RelatedCreation{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelatedCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedCreation) ProtoMessage() {}

func (x *RelatedCreation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedCreation.ProtoReflect.Descriptor instead.
func (*RelatedCreation) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{94}
}

func (x *RelatedCreation) GetTitle() *TitleWithPronunciation {
	if x != nil {
		return x.Title
	}
	return nil
}

type Release struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"GRid"
	GRid string `protobuf:"bytes,1,opt,name=g_rid,json=gRid,proto3" json:"g_rid,omitempty" xml:"GRid"`
	// @gotags: xml:"ICPN"
	ICPN string `protobuf:"bytes,2,opt,name=i_c_p_n,json=iCPN,proto3" json:"i_c_p_n,omitempty" xml:"ICPN"`
	// @gotags: xml:"ProprietaryReleaseId"
	ProprietaryReleaseId string `protobuf:"bytes,3,opt,name=proprietary_release_id,json=proprietaryReleaseId,proto3" json:"proprietary_release_id,omitempty" xml:"ProprietaryReleaseId"`
	// @gotags: xml:"ReleaseTitle"
	ReleaseTitle []*ReleaseTitle `protobuf:"bytes,4,rep,name=release_title,json=releaseTitle,proto3" json:"release_title,omitempty" xml:"ReleaseTitle"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithPronunciation `protobuf:"bytes,5,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,6,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Release) Reset() {
	*x = Release{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{95}
}

func (x *Release) GetGRid() string {
	if x != nil {
		return x.GRid
	}
	return ""
}

func (x *Release) GetICPN() string {
	if x != nil {
		return x.ICPN
	}
	return ""
}

func (x *Release) GetProprietaryReleaseId() string {
	if x != nil {
		return x.ProprietaryReleaseId
	}
	return ""
}

func (x *Release) GetReleaseTitle() []*ReleaseTitle {
	if x != nil {
		return x.ReleaseTitle
	}
	return nil
}

func (x *Release) GetDisplayArtistName() []*DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Release) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type ReleaseId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"GRid"
	GRid string `protobuf:"bytes,1,opt,name=g_rid,json=gRid,proto3" json:"g_rid,omitempty" xml:"GRid"`
	// @gotags: xml:"ISRC"
	ISRC string `protobuf:"bytes,2,opt,name=i_s_r_c,json=iSRC,proto3" json:"i_s_r_c,omitempty" xml:"ISRC"`
	// @gotags: xml:"ICPN"
	ICPN string `protobuf:"bytes,3,opt,name=i_c_p_n,json=iCPN,proto3" json:"i_c_p_n,omitempty" xml:"ICPN"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber *CatalogNumber `protobuf:"bytes,4,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,5,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseId) Reset() {
	*x = ReleaseId{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseId) ProtoMessage() {}

func (x *ReleaseId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseId.ProtoReflect.Descriptor instead.
func (*ReleaseId) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{96}
}

func (x *ReleaseId) GetGRid() string {
	if x != nil {
		return x.GRid
	}
	return ""
}

func (x *ReleaseId) GetISRC() string {
	if x != nil {
		return x.ISRC
	}
	return ""
}

func (x *ReleaseId) GetICPN() string {
	if x != nil {
		return x.ICPN
	}
	return ""
}

func (x *ReleaseId) GetCatalogNumber() *CatalogNumber {
	if x != nil {
		return x.CatalogNumber
	}
	return nil
}

func (x *ReleaseId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type ReleaseSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseId"
	ReleaseId *ReleaseId `protobuf:"bytes,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty" xml:"ReleaseId"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,2,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithPronunciation `protobuf:"bytes,3,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,4,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseSummary) Reset() {
	*x = ReleaseSummary{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSummary) ProtoMessage() {}

func (x *ReleaseSummary) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSummary.ProtoReflect.Descriptor instead.
func (*ReleaseSummary) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{97}
}

func (x *ReleaseSummary) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *ReleaseSummary) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *ReleaseSummary) GetDisplayArtistName() []*DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *ReleaseSummary) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type ReleaseTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ReleaseTitle) Reset() {
	*x = ReleaseTitle{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseTitle) ProtoMessage() {}

func (x *ReleaseTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseTitle.ProtoReflect.Descriptor instead.
func (*ReleaseTitle) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{98}
}

func (x *ReleaseTitle) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReleaseTitle) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type Resource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISRC"
	ISRC string `protobuf:"bytes,1,opt,name=i_s_r_c,json=iSRC,proto3" json:"i_s_r_c,omitempty" xml:"ISRC"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber string `protobuf:"bytes,2,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryResourceId"
	ProprietaryResourceId string `protobuf:"bytes,3,opt,name=proprietary_resource_id,json=proprietaryResourceId,proto3" json:"proprietary_resource_id,omitempty" xml:"ProprietaryResourceId"`
	// @gotags: xml:"ResourceTitle"
	ResourceTitle []*ResourceTitle `protobuf:"bytes,4,rep,name=resource_title,json=resourceTitle,proto3" json:"resource_title,omitempty" xml:"ResourceTitle"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithPronunciation `protobuf:"bytes,5,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,6,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{99}
}

func (x *Resource) GetISRC() string {
	if x != nil {
		return x.ISRC
	}
	return ""
}

func (x *Resource) GetCatalogNumber() string {
	if x != nil {
		return x.CatalogNumber
	}
	return ""
}

func (x *Resource) GetProprietaryResourceId() string {
	if x != nil {
		return x.ProprietaryResourceId
	}
	return ""
}

func (x *Resource) GetResourceTitle() []*ResourceTitle {
	if x != nil {
		return x.ResourceTitle
	}
	return nil
}

func (x *Resource) GetDisplayArtistName() []*DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Resource) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type ResourceIdWithoutFlag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISRC"
	ISRC string `protobuf:"bytes,1,opt,name=i_s_r_c,json=iSRC,proto3" json:"i_s_r_c,omitempty" xml:"ISRC"`
	// @gotags: xml:"ISMN"
	ISMN string `protobuf:"bytes,2,opt,name=i_s_m_n,json=iSMN,proto3" json:"i_s_m_n,omitempty" xml:"ISMN"`
	// @gotags: xml:"ISAN"
	ISAN string `protobuf:"bytes,3,opt,name=i_s_a_n,json=iSAN,proto3" json:"i_s_a_n,omitempty" xml:"ISAN"`
	// @gotags: xml:"VISAN"
	VISAN string `protobuf:"bytes,4,opt,name=v_i_s_a_n,json=vISAN,proto3" json:"v_i_s_a_n,omitempty" xml:"VISAN"`
	// @gotags: xml:"ISBN"
	ISBN string `protobuf:"bytes,5,opt,name=i_s_b_n,json=iSBN,proto3" json:"i_s_b_n,omitempty" xml:"ISBN"`
	// @gotags: xml:"ISSN"
	ISSN string `protobuf:"bytes,6,opt,name=i_s_s_n,json=iSSN,proto3" json:"i_s_s_n,omitempty" xml:"ISSN"`
	// @gotags: xml:"SICI"
	SICI string `protobuf:"bytes,7,opt,name=s_i_c_i,json=sICI,proto3" json:"s_i_c_i,omitempty" xml:"SICI"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber *CatalogNumber `protobuf:"bytes,8,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,9,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceIdWithoutFlag) Reset() {
	*x = ResourceIdWithoutFlag{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceIdWithoutFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceIdWithoutFlag) ProtoMessage() {}

func (x *ResourceIdWithoutFlag) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceIdWithoutFlag.ProtoReflect.Descriptor instead.
func (*ResourceIdWithoutFlag) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{100}
}

func (x *ResourceIdWithoutFlag) GetISRC() string {
	if x != nil {
		return x.ISRC
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetISMN() string {
	if x != nil {
		return x.ISMN
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetISAN() string {
	if x != nil {
		return x.ISAN
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetVISAN() string {
	if x != nil {
		return x.VISAN
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetISBN() string {
	if x != nil {
		return x.ISBN
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetISSN() string {
	if x != nil {
		return x.ISSN
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetSICI() string {
	if x != nil {
		return x.SICI
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetCatalogNumber() *CatalogNumber {
	if x != nil {
		return x.CatalogNumber
	}
	return nil
}

func (x *ResourceIdWithoutFlag) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type ResourceSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceId"
	ResourceId *ResourceIdWithoutFlag `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,2,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithPronunciation `protobuf:"bytes,3,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,4,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceSummary) Reset() {
	*x = ResourceSummary{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSummary) ProtoMessage() {}

func (x *ResourceSummary) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSummary.ProtoReflect.Descriptor instead.
func (*ResourceSummary) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{101}
}

func (x *ResourceSummary) GetResourceId() *ResourceIdWithoutFlag {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *ResourceSummary) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *ResourceSummary) GetDisplayArtistName() []*DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *ResourceSummary) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type ResourceTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ResourceTitle) Reset() {
	*x = ResourceTitle{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTitle) ProtoMessage() {}

func (x *ResourceTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTitle.ProtoReflect.Descriptor instead.
func (*ResourceTitle) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{102}
}

func (x *ResourceTitle) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ResourceTitle) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type SubTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"SubTitleType,attr"
	SubTitleType  string `protobuf:"bytes,2,opt,name=sub_title_type,json=subTitleType,proto3" json:"sub_title_type,omitempty" xml:"SubTitleType,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubTitle) Reset() {
	*x = SubTitle{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubTitle) ProtoMessage() {}

func (x *SubTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubTitle.ProtoReflect.Descriptor instead.
func (*SubTitle) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{103}
}

func (x *SubTitle) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SubTitle) GetSubTitleType() string {
	if x != nil {
		return x.SubTitleType
	}
	return ""
}

type TextWithFormat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"Format,attr"
	Format avs.TextCodecType `protobuf:"varint,5,opt,name=format,proto3,enum=ddex.avs.TextCodecType" json:"format,omitempty" xml:"Format,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,7,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TextWithFormat) Reset() {
	*x = TextWithFormat{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextWithFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextWithFormat) ProtoMessage() {}

func (x *TextWithFormat) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextWithFormat.ProtoReflect.Descriptor instead.
func (*TextWithFormat) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{104}
}

func (x *TextWithFormat) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TextWithFormat) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TextWithFormat) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *TextWithFormat) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *TextWithFormat) GetFormat() avs.TextCodecType {
	if x != nil {
		return x.Format
	}
	return avs.TextCodecType(0)
}

func (x *TextWithFormat) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TextWithFormat) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TextWithoutTerritory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"Format,attr"
	Format avs.TextCodecType `protobuf:"varint,5,opt,name=format,proto3,enum=ddex.avs.TextCodecType" json:"format,omitempty" xml:"Format,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,7,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TextWithoutTerritory) Reset() {
	*x = TextWithoutTerritory{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextWithoutTerritory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextWithoutTerritory) ProtoMessage() {}

func (x *TextWithoutTerritory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextWithoutTerritory.ProtoReflect.Descriptor instead.
func (*TextWithoutTerritory) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{105}
}

func (x *TextWithoutTerritory) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TextWithoutTerritory) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TextWithoutTerritory) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *TextWithoutTerritory) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *TextWithoutTerritory) GetFormat() avs.TextCodecType {
	if x != nil {
		return x.Format
	}
	return avs.TextCodecType(0)
}

func (x *TextWithoutTerritory) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TextWithoutTerritory) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TitleText struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Title"
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty" xml:"Title"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*Pronunciation `protobuf:"bytes,2,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleText) Reset() {
	*x = TitleText{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleText) ProtoMessage() {}

func (x *TitleText) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleText.ProtoReflect.Descriptor instead.
func (*TitleText) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{106}
}

func (x *TitleText) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TitleText) GetPronunciation() []*Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

type TitleWithPronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TitleText"
	TitleText *TitleText `protobuf:"bytes,1,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty" xml:"TitleText"`
	// @gotags: xml:"SubTitle"
	SubTitle *TitleText `protobuf:"bytes,2,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty" xml:"SubTitle"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,3,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"TitleType,attr"
	TitleType avs.TitleType `protobuf:"varint,4,opt,name=title_type,json=titleType,proto3,enum=ddex.avs.TitleType" json:"title_type,omitempty" xml:"TitleType,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,6,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TitleWithPronunciation) Reset() {
	*x = TitleWithPronunciation{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleWithPronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleWithPronunciation) ProtoMessage() {}

func (x *TitleWithPronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleWithPronunciation.ProtoReflect.Descriptor instead.
func (*TitleWithPronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{107}
}

func (x *TitleWithPronunciation) GetTitleText() *TitleText {
	if x != nil {
		return x.TitleText
	}
	return nil
}

func (x *TitleWithPronunciation) GetSubTitle() *TitleText {
	if x != nil {
		return x.SubTitle
	}
	return nil
}

func (x *TitleWithPronunciation) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TitleWithPronunciation) GetTitleType() avs.TitleType {
	if x != nil {
		return x.TitleType
	}
	return avs.TitleType(0)
}

func (x *TitleWithPronunciation) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TitleWithPronunciation) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TitleWithUDV struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TitleText"
	TitleText string `protobuf:"bytes,1,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty" xml:"TitleText"`
	// @gotags: xml:"SubTitle"
	SubTitle []*SubTitle `protobuf:"bytes,2,rep,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty" xml:"SubTitle"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,3,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"TitleType,attr"
	TitleType avs.TitleType `protobuf:"varint,4,opt,name=title_type,json=titleType,proto3,enum=ddex.avs.TitleType" json:"title_type,omitempty" xml:"TitleType,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,6,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TitleWithUDV) Reset() {
	*x = TitleWithUDV{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleWithUDV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleWithUDV) ProtoMessage() {}

func (x *TitleWithUDV) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleWithUDV.ProtoReflect.Descriptor instead.
func (*TitleWithUDV) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{108}
}

func (x *TitleWithUDV) GetTitleText() string {
	if x != nil {
		return x.TitleText
	}
	return ""
}

func (x *TitleWithUDV) GetSubTitle() []*SubTitle {
	if x != nil {
		return x.SubTitle
	}
	return nil
}

func (x *TitleWithUDV) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TitleWithUDV) GetTitleType() avs.TitleType {
	if x != nil {
		return x.TitleType
	}
	return avs.TitleType(0)
}

func (x *TitleWithUDV) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TitleWithUDV) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ValidityPeriod struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"StartDate"
	StartDate *EventDate `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" xml:"StartDate"`
	// @gotags: xml:"EndDate"
	EndDate       *EventDate `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty" xml:"EndDate"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidityPeriod) Reset() {
	*x = ValidityPeriod{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidityPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidityPeriod) ProtoMessage() {}

func (x *ValidityPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidityPeriod.ProtoReflect.Descriptor instead.
func (*ValidityPeriod) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{109}
}

func (x *ValidityPeriod) GetStartDate() *EventDate {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ValidityPeriod) GetEndDate() *EventDate {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type VocalRegister struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value         *VocalRegisterValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocalRegister) Reset() {
	*x = VocalRegister{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocalRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocalRegister) ProtoMessage() {}

func (x *VocalRegister) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocalRegister.ProtoReflect.Descriptor instead.
func (*VocalRegister) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{110}
}

func (x *VocalRegister) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *VocalRegister) GetValue() *VocalRegisterValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type VocalRegisterValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VocalRegisterValue) Reset() {
	*x = VocalRegisterValue{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocalRegisterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocalRegisterValue) ProtoMessage() {}

func (x *VocalRegisterValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocalRegisterValue.ProtoReflect.Descriptor instead.
func (*VocalRegisterValue) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{111}
}

func (x *VocalRegisterValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *VocalRegisterValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *VocalRegisterValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Work struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISWC"
	ISWC string `protobuf:"bytes,1,opt,name=i_s_w_c,json=iSWC,proto3" json:"i_s_w_c,omitempty" xml:"ISWC"`
	// @gotags: xml:"ProprietaryWorkId"
	ProprietaryWorkId string `protobuf:"bytes,2,opt,name=proprietary_work_id,json=proprietaryWorkId,proto3" json:"proprietary_work_id,omitempty" xml:"ProprietaryWorkId"`
	// @gotags: xml:"WorkTitle"
	WorkTitle []*WorkTitle `protobuf:"bytes,3,rep,name=work_title,json=workTitle,proto3" json:"work_title,omitempty" xml:"WorkTitle"`
	// @gotags: xml:"Writer"
	Writer        []*PartyDescriptorWithPronunciation `protobuf:"bytes,4,rep,name=writer,proto3" json:"writer,omitempty" xml:"Writer"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Work) Reset() {
	*x = Work{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Work) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Work) ProtoMessage() {}

func (x *Work) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Work.ProtoReflect.Descriptor instead.
func (*Work) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{112}
}

func (x *Work) GetISWC() string {
	if x != nil {
		return x.ISWC
	}
	return ""
}

func (x *Work) GetProprietaryWorkId() string {
	if x != nil {
		return x.ProprietaryWorkId
	}
	return ""
}

func (x *Work) GetWorkTitle() []*WorkTitle {
	if x != nil {
		return x.WorkTitle
	}
	return nil
}

func (x *Work) GetWriter() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Writer
	}
	return nil
}

type WorkSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MusicalWorkId"
	MusicalWorkId *MusicalWorkIdWithoutFlag `protobuf:"bytes,1,opt,name=musical_work_id,json=musicalWorkId,proto3" json:"musical_work_id,omitempty" xml:"MusicalWorkId"`
	// @gotags: xml:"WorkTitle"
	WorkTitle []*TitleWithPronunciation `protobuf:"bytes,2,rep,name=work_title,json=workTitle,proto3" json:"work_title,omitempty" xml:"WorkTitle"`
	// @gotags: xml:"Writer"
	Writer        []*PartyDescriptorWithPronunciation `protobuf:"bytes,3,rep,name=writer,proto3" json:"writer,omitempty" xml:"Writer"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkSummary) Reset() {
	*x = WorkSummary{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkSummary) ProtoMessage() {}

func (x *WorkSummary) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkSummary.ProtoReflect.Descriptor instead.
func (*WorkSummary) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{113}
}

func (x *WorkSummary) GetMusicalWorkId() *MusicalWorkIdWithoutFlag {
	if x != nil {
		return x.MusicalWorkId
	}
	return nil
}

func (x *WorkSummary) GetWorkTitle() []*TitleWithPronunciation {
	if x != nil {
		return x.WorkTitle
	}
	return nil
}

func (x *WorkSummary) GetWriter() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Writer
	}
	return nil
}

type WorkTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *WorkTitle) Reset() {
	*x = WorkTitle{}
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkTitle) ProtoMessage() {}

func (x *WorkTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_pie_v10_v10_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkTitle.ProtoReflect.Descriptor instead.
func (*WorkTitle) Descriptor() ([]byte, []int) {
	return file_ddex_pie_v10_v10_proto_rawDescGZIP(), []int{114}
}

func (x *WorkTitle) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *WorkTitle) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

var File_ddex_pie_v10_v10_proto protoreflect.FileDescriptor

const file_ddex_pie_v10_v10_proto_rawDesc = "" +
	"\n" +
	"\x16ddex/pie/v10/v10.proto\x12\fddex.pie.v10\x1a\x12ddex/avs/avs.proto\"\xbb\x02\n" +
	"\n" +
	"PieMessage\x12B\n" +
	"\x0emessage_header\x18\x01 \x01(\v2\x1b.ddex.pie.v10.MessageHeaderR\rmessageHeader\x12R\n" +
	"\x14metadata_source_list\x18\x02 \x01(\v2 .ddex.pie.v10.MetadataSourceListR\x12metadataSourceList\x126\n" +
	"\n" +
	"party_list\x18\x03 \x01(\v2\x17.ddex.pie.v10.PartyListR\tpartyList\x12$\n" +
	"\x0eavs_version_id\x18\x04 \x01(\tR\favsVersionId\x127\n" +
	"\x18language_and_script_code\x18\x05 \x01(\tR\x15languageAndScriptCode\"\xfd\x01\n" +
	"\x11PieRequestMessage\x12B\n" +
	"\x0emessage_header\x18\x01 \x01(\v2\x1b.ddex.pie.v10.MessageHeaderR\rmessageHeader\x12E\n" +
	"\x0frequested_party\x18\x02 \x03(\v2\x1c.ddex.pie.v10.RequestedPartyR\x0erequestedParty\x12$\n" +
	"\x0eavs_version_id\x18\x03 \x01(\tR\favsVersionId\x127\n" +
	"\x18language_and_script_code\x18\x04 \x01(\tR\x15languageAndScriptCode\"\xf8\x04\n" +
	"\x04Feed\x12.\n" +
	"\x06author\x18\x01 \x01(\v2\x14.ddex.pie.v10.PersonH\x00R\x06author\x124\n" +
	"\bcategory\x18\x02 \x01(\v2\x16.ddex.pie.v10.CategoryH\x00R\bcategory\x128\n" +
	"\vcontributor\x18\x03 \x01(\v2\x14.ddex.pie.v10.PersonH\x00R\vcontributor\x127\n" +
	"\tgenerator\x18\x04 \x01(\v2\x17.ddex.pie.v10.GeneratorH\x00R\tgenerator\x12(\n" +
	"\x04icon\x18\x05 \x01(\v2\x12.ddex.pie.v10.IconH\x00R\x04icon\x12\"\n" +
	"\x02id\x18\x06 \x01(\v2\x10.ddex.pie.v10.IdH\x00R\x02id\x12(\n" +
	"\x04link\x18\a \x01(\v2\x12.ddex.pie.v10.LinkH\x00R\x04link\x12(\n" +
	"\x04logo\x18\b \x01(\v2\x12.ddex.pie.v10.LogoH\x00R\x04logo\x12,\n" +
	"\x06rights\x18\t \x01(\v2\x12.ddex.pie.v10.TextH\x00R\x06rights\x120\n" +
	"\bsubtitle\x18\n" +
	" \x01(\v2\x12.ddex.pie.v10.TextH\x00R\bsubtitle\x12*\n" +
	"\x05title\x18\v \x01(\v2\x12.ddex.pie.v10.TextH\x00R\x05title\x122\n" +
	"\aupdated\x18\f \x01(\v2\x16.ddex.pie.v10.DateTimeH\x00R\aupdated\x12+\n" +
	"\x05entry\x18\r \x01(\v2\x13.ddex.pie.v10.EntryH\x00R\x05entryB\b\n" +
	"\x06choice\"\xa6\x02\n" +
	"\fContribution\x121\n" +
	"\x04role\x18\x01 \x03(\v2\x1d.ddex.pie.v10.ContributorRoleR\x04role\x12&\n" +
	"\x0fis_primary_role\x18\x02 \x01(\bR\risPrimaryRole\x12C\n" +
	"\x1ehas_made_featured_contribution\x18\x03 \x01(\bR\x1bhasMadeFeaturedContribution\x12G\n" +
	" has_made_contracted_contribution\x18\x04 \x01(\bR\x1dhasMadeContractedContribution\x12-\n" +
	"\x05event\x18\x05 \x01(\v2\x17.ddex.pie.v10.EventDateR\x05event\"\xdc\x01\n" +
	"\x13CreationDescription\x120\n" +
	"\x05title\x18\x01 \x03(\v2\x1a.ddex.pie.v10.TitleWithUDVR\x05title\x12O\n" +
	"\x13display_artist_name\x18\x02 \x01(\v2\x1f.ddex.pie.v10.DisplayArtistNameR\x11displayArtistName\x12B\n" +
	"\x10publication_date\x18\x03 \x01(\v2\x17.ddex.pie.v10.EventDateR\x0fpublicationDate\"\x96\x02\n" +
	"\x17DetailedPartyIdForParty\x12\x15\n" +
	"\ai_s_n_i\x18\x01 \x01(\tR\x04iSNI\x12\x15\n" +
	"\ad_p_i_d\x18\x02 \x01(\tR\x04dPID\x12&\n" +
	"\x0fipi_name_number\x18\x03 \x01(\tR\ripiNameNumber\x12\x12\n" +
	"\x05i_p_n\x18\x04 \x01(\tR\x03iPN\x12(\n" +
	"\x10cisac_society_id\x18\x05 \x01(\tR\x0ecisacSocietyId\x12B\n" +
	"\x0eproprietary_id\x18\x06 \x03(\v2\x1b.ddex.pie.v10.ProprietaryIdR\rproprietaryId\x12#\n" +
	"\ris_deprecated\x18\a \x01(\bR\fisDeprecated\"\xe8\x05\n" +
	"\x05Entry\x12.\n" +
	"\x06author\x18\x01 \x01(\v2\x14.ddex.pie.v10.PersonH\x00R\x06author\x124\n" +
	"\bcategory\x18\x02 \x01(\v2\x16.ddex.pie.v10.CategoryH\x00R\bcategory\x121\n" +
	"\acontent\x18\x03 \x01(\v2\x15.ddex.pie.v10.ContentH\x00R\acontent\x128\n" +
	"\vcontributor\x18\x04 \x01(\v2\x14.ddex.pie.v10.PersonH\x00R\vcontributor\x12\"\n" +
	"\x02id\x18\x05 \x01(\v2\x10.ddex.pie.v10.IdH\x00R\x02id\x12(\n" +
	"\x04link\x18\x06 \x01(\v2\x12.ddex.pie.v10.LinkH\x00R\x04link\x126\n" +
	"\tpublished\x18\a \x01(\v2\x16.ddex.pie.v10.DateTimeH\x00R\tpublished\x12,\n" +
	"\x06rights\x18\b \x01(\v2\x12.ddex.pie.v10.TextH\x00R\x06rights\x12.\n" +
	"\x06source\x18\t \x01(\v2\x14.ddex.pie.v10.SourceH\x00R\x06source\x12.\n" +
	"\asummary\x18\n" +
	" \x01(\v2\x12.ddex.pie.v10.TextH\x00R\asummary\x12*\n" +
	"\x05title\x18\v \x01(\v2\x12.ddex.pie.v10.TextH\x00R\x05title\x122\n" +
	"\aupdated\x18\f \x01(\v2\x16.ddex.pie.v10.DateTimeH\x00R\aupdated\x12)\n" +
	"\x0fsubscription_id\x18\r \x01(\tH\x00R\x0esubscriptionId\x12=\n" +
	"\x05party\x18\x0e \x01(\v2%.ddex.pie.v10.PartyDescriptorForEntryH\x00R\x05party\x12$\n" +
	"\x0eavs_version_id\x18\x0f \x01(\tR\favsVersionIdB\b\n" +
	"\x06choice\"\xea\x01\n" +
	"\x05Event\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x126\n" +
	"\n" +
	"event_type\x18\x02 \x01(\v2\x17.ddex.pie.v10.EventTypeR\teventType\x12F\n" +
	"\x11event_description\x18\x03 \x03(\v2\x19.ddex.pie.v10.DescriptionR\x10eventDescription\"m\n" +
	"\tEventType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xfa\x06\n" +
	"\x05Focus\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12>\n" +
	"\vfocus_track\x18\x02 \x01(\v2\x1d.ddex.pie.v10.ResourceSummaryR\n" +
	"focusTrack\x12A\n" +
	"\rfocus_release\x18\x03 \x01(\v2\x1c.ddex.pie.v10.ReleaseSummaryR\ffocusRelease\x128\n" +
	"\n" +
	"focus_work\x18\x04 \x01(\v2\x19.ddex.pie.v10.WorkSummaryR\tfocusWork\x12`\n" +
	"\x13display_artist_name\x18\x05 \x03(\v20.ddex.pie.v10.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12U\n" +
	"\x0edisplay_artist\x18\x06 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\rdisplayArtist\x12F\n" +
	"\x06writer\x18\a \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\x06writer\x12'\n" +
	"\x0fsequence_number\x18\b \x01(\x05R\x0esequenceNumber\x12O\n" +
	"\x15period_of_being_focus\x18\t \x03(\v2\x1c.ddex.pie.v10.PeriodWithTimeR\x12periodOfBeingFocus\x12y\n" +
	"*territory_of_being_focus_track_description\x18\n" +
	" \x03(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR%territoryOfBeingFocusTrackDescription\x12<\n" +
	"\acomment\x18\v \x03(\v2\".ddex.pie.v10.TextWithoutTerritoryR\acomment\x12\x1d\n" +
	"\n" +
	"is_default\x18\f \x01(\bR\tisDefault\"\xc2\x01\n" +
	"\x06Gender\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.ddex.pie.v10.GenderValueR\x05value\x12$\n" +
	"\x0edo_not_display\x18\x03 \x01(\bR\fdoNotDisplay\"o\n" +
	"\vGenderValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"v\n" +
	"\x15NameWithPronunciation\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12I\n" +
	"\rpronunciation\x18\x02 \x03(\v2#.ddex.pie.v10.PronunciationForPartyR\rpronunciation\"\x87\x01\n" +
	"\x12NameWithScriptCode\x12&\n" +
	"\x04name\x18\x01 \x01(\v2\x12.ddex.pie.v10.NameR\x04name\x12I\n" +
	"\rpronunciation\x18\x02 \x03(\v2#.ddex.pie.v10.PronunciationForPartyR\rpronunciation\"\xa6\x01\n" +
	"\vNationality\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.ddex.pie.v10.AllTerritoryCodeR\x05value\"\x8f\n" +
	"\n" +
	"\x05Party\x12'\n" +
	"\x0fparty_reference\x18\x01 \x01(\tR\x0epartyReference\x12@\n" +
	"\bparty_id\x18\x02 \x03(\v2%.ddex.pie.v10.DetailedPartyIdForPartyR\apartyId\x126\n" +
	"\n" +
	"party_name\x18\x03 \x03(\v2\x17.ddex.pie.v10.PartyNameR\tpartyName\x126\n" +
	"\n" +
	"party_type\x18\x04 \x01(\v2\x17.ddex.pie.v10.PartyTypeR\tpartyType\x12)\n" +
	"\x05event\x18\x05 \x03(\v2\x13.ddex.pie.v10.EventR\x05event\x12?\n" +
	"\rrelated_party\x18\x06 \x03(\v2\x1a.ddex.pie.v10.RelatedPartyR\frelatedParty\x12P\n" +
	"\x10related_creation\x18\a \x03(\v2%.ddex.pie.v10.RelatedCreationForPartyR\x0frelatedCreation\x12,\n" +
	"\x06gender\x18\b \x01(\v2\x14.ddex.pie.v10.GenderR\x06gender\x12;\n" +
	"\vnationality\x18\t \x03(\v2\x19.ddex.pie.v10.NationalityR\vnationality\x12<\n" +
	"\fprimary_role\x18\n" +
	" \x01(\v2\x19.ddex.pie.v10.PrimaryRoleR\vprimaryRole\x12B\n" +
	"\x0evocal_register\x18\v \x01(\v2\x1b.ddex.pie.v10.VocalRegisterR\rvocalRegister\x12)\n" +
	"\x05focus\x18\f \x03(\v2\x13.ddex.pie.v10.FocusR\x05focus\x129\n" +
	"\vartist_type\x18\r \x03(\v2\x18.ddex.pie.v10.ArtistTypeR\n" +
	"artistType\x12H\n" +
	"\x10classical_period\x18\x0e \x01(\v2\x1d.ddex.pie.v10.ClassicalPeriodR\x0fclassicalPeriod\x12)\n" +
	"\x05epoch\x18\x0f \x03(\v2\x13.ddex.pie.v10.EpochR\x05epoch\x12N\n" +
	"\x12artistic_influence\x18\x10 \x03(\v2\x1f.ddex.pie.v10.ArtisticInfluenceR\x11artisticInfluence\x12)\n" +
	"\x05award\x18\x11 \x03(\v2\x13.ddex.pie.v10.AwardR\x05award\x125\n" +
	"\tbiography\x18\x12 \x03(\v2\x17.ddex.pie.v10.BiographyR\tbiography\x12)\n" +
	"\x05image\x18\x13 \x03(\v2\x13.ddex.pie.v10.ImageR\x05image\x12H\n" +
	"\x12social_media_u_r_l\x18\x14 \x01(\v2\x1c.ddex.pie.v10.SocialMediaURLR\x0esocialMediaURL\x12E\n" +
	"\x0fcommentary_note\x18\x15 \x03(\v2\x1c.ddex.pie.v10.CommentaryNoteR\x0ecommentaryNote\x127\n" +
	"\x18language_and_script_code\x18\x16 \x01(\tR\x15languageAndScriptCode\"r\n" +
	"\x17PartyDescriptorForEntry\x128\n" +
	"\bparty_id\x18\x01 \x01(\v2\x1d.ddex.pie.v10.DetailedPartyIdR\apartyId\x12\x1d\n" +
	"\n" +
	"party_name\x18\x02 \x01(\tR\tpartyName\"6\n" +
	"\tPartyList\x12)\n" +
	"\x05party\x18\x01 \x03(\v2\x13.ddex.pie.v10.PartyR\x05party\"\x85\f\n" +
	"\tPartyName\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12-\n" +
	"\aname_id\x18\x02 \x03(\v2\x14.ddex.pie.v10.NameIdR\x06nameId\x12C\n" +
	"\x0fparty_name_type\x18\x03 \x03(\v2\x1b.ddex.pie.v10.PartyNameTypeR\rpartyNameType\x12V\n" +
	"\x16reason_for_name_change\x18\x04 \x01(\v2!.ddex.pie.v10.ReasonForNameChangeR\x13reasonForNameChange\x12L\n" +
	"\x12party_name_purpose\x18\x05 \x03(\v2\x1e.ddex.pie.v10.PartyNamePurposeR\x10partyNamePurpose\x12I\n" +
	"\x11party_name_format\x18\x06 \x03(\v2\x1d.ddex.pie.v10.PartyNameFormatR\x0fpartyNameFormat\x12=\n" +
	"\tfull_name\x18\a \x01(\v2 .ddex.pie.v10.NameWithScriptCodeR\bfullName\x12b\n" +
	"\x1bfull_name_ascii_transcribed\x18\b \x01(\v2#.ddex.pie.v10.NameWithPronunciationR\x18fullNameAsciiTranscribed\x12L\n" +
	"\x11full_name_indexed\x18\t \x01(\v2 .ddex.pie.v10.NameWithScriptCodeR\x0ffullNameIndexed\x12.\n" +
	"\x13titles_before_names\x18\n" +
	" \x01(\tR\x11titlesBeforeNames\x12S\n" +
	"\x15names_before_key_name\x18\v \x01(\v2 .ddex.pie.v10.NameWithScriptCodeR\x12namesBeforeKeyName\x12;\n" +
	"\bkey_name\x18\f \x01(\v2 .ddex.pie.v10.NameWithScriptCodeR\akeyName\x12Q\n" +
	"\x14names_after_key_name\x18\r \x01(\v2 .ddex.pie.v10.NameWithScriptCodeR\x11namesAfterKeyName\x12,\n" +
	"\x12titles_after_names\x18\x0e \x01(\tR\x10titlesAfterNames\x12?\n" +
	"\n" +
	"short_name\x18\x0f \x03(\v2 .ddex.pie.v10.NameWithScriptCodeR\tshortName\x12K\n" +
	"\x10abbreviated_name\x18\x10 \x03(\v2 .ddex.pie.v10.NameWithScriptCodeR\x0fabbreviatedName\x12E\n" +
	"\x0fvalidity_period\x18\x11 \x03(\v2\x1c.ddex.pie.v10.ValidityPeriodR\x0evalidityPeriod\x12P\n" +
	"\x10related_creation\x18\x12 \x03(\v2%.ddex.pie.v10.RelatedCreationForPartyR\x0frelatedCreation\x127\n" +
	"\x18language_and_script_code\x18\x13 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x14 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x15 \x01(\bR\tisDefault\x12!\n" +
	"\fis_canonical\x18\x16 \x01(\bR\visCanonical\"\xf8\x03\n" +
	"\x13PartyNameForRequest\x12/\n" +
	"\tfull_name\x18\x01 \x01(\v2\x12.ddex.pie.v10.NameR\bfullName\x12=\n" +
	"\x1bfull_name_ascii_transcribed\x18\x02 \x01(\tR\x18fullNameAsciiTranscribed\x12>\n" +
	"\x11full_name_indexed\x18\x03 \x01(\v2\x12.ddex.pie.v10.NameR\x0ffullNameIndexed\x12E\n" +
	"\x15names_before_key_name\x18\x04 \x01(\v2\x12.ddex.pie.v10.NameR\x12namesBeforeKeyName\x12-\n" +
	"\bkey_name\x18\x05 \x01(\v2\x12.ddex.pie.v10.NameR\akeyName\x12C\n" +
	"\x14names_after_key_name\x18\x06 \x01(\v2\x12.ddex.pie.v10.NameR\x11namesAfterKeyName\x12=\n" +
	"\x10abbreviated_name\x18\a \x01(\v2\x12.ddex.pie.v10.NameR\x0fabbreviatedName\x127\n" +
	"\x18language_and_script_code\x18\b \x01(\tR\x15languageAndScriptCode\"s\n" +
	"\x0fPartyNameFormat\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"t\n" +
	"\x10PartyNamePurpose\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"q\n" +
	"\rPartyNameType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"y\n" +
	"\x15PartyRelationshipType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xa2\x01\n" +
	"\tPartyType\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.ddex.pie.v10.PartyTypeValueR\x05value\"r\n" +
	"\x0ePartyTypeValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xa5\x01\n" +
	"\vPrimaryRole\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.ddex.pie.v10.ContributorRoleR\x05value\"\xcb\x02\n" +
	"\x15PronunciationForParty\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12!\n" +
	"\fis_canonical\x18\x02 \x01(\bR\visCanonical\x12)\n" +
	"\x10is_mispronounced\x18\x03 \x01(\bR\x0fisMispronounced\x12#\n" +
	"\rlanguage_code\x18\x04 \x01(\tR\flanguageCode\x12;\n" +
	"\rencoding_type\x18\x05 \x01(\x0e2\x16.ddex.avs.EncodingTypeR\fencodingType\x12-\n" +
	"\x12encoding_namespace\x18\x06 \x01(\tR\x11encodingNamespace\x12=\n" +
	"\x1bencoding_user_defined_value\x18\a \x01(\tR\x18encodingUserDefinedValue\"w\n" +
	"\x13ReasonForNameChange\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x85\x04\n" +
	"\x17RelatedCreationForParty\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12;\n" +
	"\rcreation_type\x18\x02 \x01(\x0e2\x16.ddex.avs.CreationTypeR\fcreationType\x12>\n" +
	"\fcontribution\x18\x03 \x01(\v2\x1a.ddex.pie.v10.ContributionR\fcontribution\x12T\n" +
	"\x18relationship_description\x18\x04 \x03(\v2\x19.ddex.pie.v10.DescriptionR\x17relationshipDescription\x12\x1a\n" +
	"\bcontract\x18\x05 \x01(\tR\bcontract\x12\x19\n" +
	"\bis_false\x18\x06 \x01(\bR\aisFalse\x12'\n" +
	"\x0fis_confidential\x18\a \x01(\bR\x0eisConfidential\x12*\n" +
	"\x11is_first_creation\x18\b \x01(\bR\x0fisFirstCreation\x12(\n" +
	"\x10is_last_creation\x18\t \x01(\bR\x0eisLastCreation\"\xaf\x04\n" +
	"\fRelatedParty\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12[\n" +
	"\x17party_relationship_type\x18\x02 \x01(\v2#.ddex.pie.v10.PartyRelationshipTypeR\x15partyRelationshipType\x12)\n" +
	"\x10business_purpose\x18\x03 \x01(\tR\x0fbusinessPurpose\x12;\n" +
	"\vdescription\x18\x04 \x03(\v2\x19.ddex.pie.v10.DescriptionR\vdescription\x12\x1a\n" +
	"\bcontract\x18\x05 \x01(\tR\bcontract\x12E\n" +
	"\x0fvalidity_period\x18\x06 \x03(\v2\x1c.ddex.pie.v10.ValidityPeriodR\x0evalidityPeriod\x12P\n" +
	"\x10related_creation\x18\a \x03(\v2%.ddex.pie.v10.RelatedCreationForPartyR\x0frelatedCreation\x12\x19\n" +
	"\bis_false\x18\b \x01(\bR\aisFalse\x12'\n" +
	"\x0fis_confidential\x18\t \x01(\bR\x0eisConfidential\"\x8c\x01\n" +
	"\x11ReleaseForRequest\x126\n" +
	"\n" +
	"release_id\x18\x01 \x01(\v2\x17.ddex.pie.v10.ReleaseIdR\treleaseId\x12?\n" +
	"\rrelease_title\x18\x02 \x01(\v2\x1a.ddex.pie.v10.ReleaseTitleR\freleaseTitle\"\xee\x01\n" +
	"\x0eRequestedParty\x121\n" +
	"\x04role\x18\x01 \x03(\v2\x1d.ddex.pie.v10.ContributorRoleR\x04role\x129\n" +
	"\arelease\x18\x02 \x03(\v2\x1f.ddex.pie.v10.ReleaseForRequestR\arelease\x12<\n" +
	"\bresource\x18\x03 \x03(\v2 .ddex.pie.v10.ResourceForRequestR\bresource\x120\n" +
	"\x04work\x18\x04 \x03(\v2\x1c.ddex.pie.v10.WorkForRequestR\x04work\"\xdb\x01\n" +
	"\x12ResourceForRequest\x12D\n" +
	"\vresource_id\x18\x01 \x01(\v2#.ddex.pie.v10.ResourceIdWithoutFlagR\n" +
	"resourceId\x12B\n" +
	"\x0eresource_title\x18\x02 \x01(\v2\x1b.ddex.pie.v10.ResourceTitleR\rresourceTitle\x12;\n" +
	"\rresource_type\x18\x03 \x01(\x0e2\x16.ddex.avs.ResourceTypeR\fresourceType\"\xa7\x01\n" +
	"\x0eSocialMediaURL\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12#\n" +
	"\rlanguage_code\x18\x02 \x01(\tR\flanguageCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\"\x89\x01\n" +
	"\x0eWorkForRequest\x12?\n" +
	"\awork_id\x18\x01 \x01(\v2&.ddex.pie.v10.MusicalWorkIdWithoutFlagR\x06workId\x126\n" +
	"\n" +
	"work_title\x18\x02 \x01(\v2\x17.ddex.pie.v10.WorkTitleR\tworkTitle\"L\n" +
	"\bCategory\x12\x12\n" +
	"\x04term\x18\x01 \x01(\tR\x04term\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\"/\n" +
	"\aContent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x10\n" +
	"\x03src\x18\x02 \x01(\tR\x03src\" \n" +
	"\bDateTime\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"M\n" +
	"\tGenerator\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x10\n" +
	"\x03uri\x18\x02 \x01(\tR\x03uri\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\"\x1c\n" +
	"\x04Icon\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x1a\n" +
	"\x02Id\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x8a\x01\n" +
	"\x04Link\x12\x12\n" +
	"\x04href\x18\x01 \x01(\tR\x04href\x12\x10\n" +
	"\x03rel\x18\x02 \x01(\tR\x03rel\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\bhreflang\x18\x04 \x01(\tR\bhreflang\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\x12\x16\n" +
	"\x06length\x18\x06 \x01(\x05R\x06length\"\x1c\n" +
	"\x04Logo\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"g\n" +
	"\x06Person\x12\x14\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x12%\n" +
	"\x03uri\x18\x02 \x01(\v2\x11.ddex.pie.v10.URIH\x00R\x03uri\x12\x16\n" +
	"\x05email\x18\x03 \x01(\tH\x00R\x05emailB\b\n" +
	"\x06choice\"\xcd\x04\n" +
	"\x06Source\x12.\n" +
	"\x06author\x18\x01 \x01(\v2\x14.ddex.pie.v10.PersonH\x00R\x06author\x124\n" +
	"\bcategory\x18\x02 \x01(\v2\x16.ddex.pie.v10.CategoryH\x00R\bcategory\x128\n" +
	"\vcontributor\x18\x03 \x01(\v2\x14.ddex.pie.v10.PersonH\x00R\vcontributor\x127\n" +
	"\tgenerator\x18\x04 \x01(\v2\x17.ddex.pie.v10.GeneratorH\x00R\tgenerator\x12(\n" +
	"\x04icon\x18\x05 \x01(\v2\x12.ddex.pie.v10.IconH\x00R\x04icon\x12\"\n" +
	"\x02id\x18\x06 \x01(\v2\x10.ddex.pie.v10.IdH\x00R\x02id\x12(\n" +
	"\x04link\x18\a \x01(\v2\x12.ddex.pie.v10.LinkH\x00R\x04link\x12(\n" +
	"\x04logo\x18\b \x01(\v2\x12.ddex.pie.v10.LogoH\x00R\x04logo\x12,\n" +
	"\x06rights\x18\t \x01(\v2\x12.ddex.pie.v10.TextH\x00R\x06rights\x120\n" +
	"\bsubtitle\x18\n" +
	" \x01(\v2\x12.ddex.pie.v10.TextH\x00R\bsubtitle\x12*\n" +
	"\x05title\x18\v \x01(\v2\x12.ddex.pie.v10.TextH\x00R\x05title\x122\n" +
	"\aupdated\x18\f \x01(\v2\x16.ddex.pie.v10.DateTimeH\x00R\aupdatedB\b\n" +
	"\x06choice\"2\n" +
	"\x04Text\x12*\n" +
	"\x04type\x18\x01 \x01(\x0e2\x16.ddex.avs.TextTypeATOMR\x04type\"\x1b\n" +
	"\x03URI\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x86\x01\n" +
	"\x10AllTerritoryCode\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\\\n" +
	"\x0fidentifier_type\x18\x02 \x01(\x0e23.ddex.avs.TerritoryCodeTypeIncludingDeprecatedCodesR\x0eidentifierType\"\x94\x02\n" +
	"\n" +
	"ArtistType\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.ddex.pie.v10.ArtistTypeValueR\x05value\x12n\n" +
	"$territory_of_artist_type_description\x18\x03 \x03(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR territoryOfArtistTypeDescription\"s\n" +
	"\x0fArtistTypeValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xd3\x03\n" +
	"\x11ArtisticInfluence\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12D\n" +
	"\x05party\x18\x02 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\x05party\x12&\n" +
	"\x04work\x18\x03 \x03(\v2\x12.ddex.pie.v10.WorkR\x04work\x122\n" +
	"\bresource\x18\x04 \x03(\v2\x16.ddex.pie.v10.ResourceR\bresource\x12/\n" +
	"\arelease\x18\x05 \x03(\v2\x15.ddex.pie.v10.ReleaseR\arelease\x12>\n" +
	"\vdescription\x18\x06 \x03(\v2\x1c.ddex.pie.v10.TextWithFormatR\vdescription\x12#\n" +
	"\ris_influenced\x18\a \x01(\bR\fisInfluenced\x12#\n" +
	"\ris_influencer\x18\b \x01(\bR\fisInfluencer\"\xe7\x03\n" +
	"\x05Award\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12S\n" +
	"\rawarding_body\x18\x02 \x01(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\fawardingBody\x12S\n" +
	"\rawarded_party\x18\x03 \x01(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\fawardedParty\x12O\n" +
	"\n" +
	"award_name\x18\x04 \x01(\v20.ddex.pie.v10.NameWithPronunciationAndScriptCodeR\tawardName\x12+\n" +
	"\x04date\x18\x05 \x01(\v2\x17.ddex.pie.v10.EventDateR\x04date\x12\x1b\n" +
	"\tis_winner\x18\x06 \x01(\bR\bisWinner\x126\n" +
	"\acomment\x18\a \x03(\v2\x1c.ddex.pie.v10.TextWithFormatR\acomment\"\xe7\x01\n" +
	"\tBiography\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12/\n" +
	"\x04text\x18\x02 \x03(\v2\x1b.ddex.pie.v10.BiographyTextR\x04text\x12F\n" +
	"\x06author\x18\x03 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\x06author\"\xb7\x02\n" +
	"\rBiographyText\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12/\n" +
	"\x06format\x18\x04 \x01(\x0e2\x17.ddex.avs.TextCodecTypeR\x06format\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x06 \x01(\tR\x10userDefinedValue\"C\n" +
	"\rCatalogNumber\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"\xf2\x02\n" +
	"\x0fClassicalPeriod\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12-\n" +
	"\x04name\x18\x02 \x01(\v2\x19.ddex.pie.v10.PeriodValueR\x04name\x12S\n" +
	"'language_and_script_of_classical_period\x18\x03 \x03(\tR\"languageAndScriptOfClassicalPeriod\x12x\n" +
	")territory_of_classical_period_description\x18\x04 \x03(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR%territoryOfClassicalPeriodDescription\"\x92\x04\n" +
	"\x0eCommentaryNote\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x126\n" +
	"\x04text\x18\x02 \x03(\v2\".ddex.pie.v10.TextWithoutTerritoryR\x04text\x12R\n" +
	"\x14commentary_note_type\x18\x03 \x03(\v2 .ddex.pie.v10.CommentaryNoteTypeR\x12commentaryNoteType\x12Q\n" +
	"&language_and_script_of_commentary_note\x18\x04 \x03(\tR!languageAndScriptOfCommentaryNote\x12v\n" +
	"(territory_of_commentary_note_description\x18\x05 \x03(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR$territoryOfCommentaryNoteDescription\x12F\n" +
	"\x06author\x18\x06 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\x06author\"v\n" +
	"\x12CommentaryNoteType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"s\n" +
	"\x0fContributorRole\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"C\n" +
	"\x04Date\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\"\\\n" +
	"\vDescription\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"\xe8\x01\n" +
	"\x0fDetailedHashSum\x12@\n" +
	"\talgorithm\x18\x01 \x01(\v2\".ddex.pie.v10.HashSumAlgorithmTypeR\talgorithm\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tparameter\x18\x03 \x01(\tR\tparameter\x125\n" +
	"\tdata_type\x18\x04 \x01(\x0e2\x18.ddex.avs.BinaryDataTypeR\bdataType\x12$\n" +
	"\x0ehash_sum_value\x18\x05 \x01(\tR\fhashSumValue\"\xe9\x01\n" +
	"\x0fDetailedPartyId\x12\x15\n" +
	"\ai_s_n_i\x18\x01 \x01(\tR\x04iSNI\x12\x15\n" +
	"\ad_p_i_d\x18\x02 \x01(\tR\x04dPID\x12&\n" +
	"\x0fipi_name_number\x18\x03 \x01(\tR\ripiNameNumber\x12\x12\n" +
	"\x05i_p_n\x18\x04 \x01(\tR\x03iPN\x12(\n" +
	"\x10cisac_society_id\x18\x05 \x01(\tR\x0ecisacSocietyId\x12B\n" +
	"\x0eproprietary_id\x18\x06 \x03(\v2\x1b.ddex.pie.v10.ProprietaryIdR\rproprietaryId\"\xbe\x01\n" +
	"\x11DisplayArtistName\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\"\xe8\x01\n" +
	"\x1cDisplayArtistNameWithDefault\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\"\xa7\x01\n" +
	"\"DisplayArtistNameWithPronunciation\x12>\n" +
	"\x04name\x18\x01 \x01(\v2*.ddex.pie.v10.DisplayArtistNameWithDefaultR\x04name\x12A\n" +
	"\rpronunciation\x18\x02 \x03(\v2\x1b.ddex.pie.v10.PronunciationR\rpronunciation\"\xb8\x02\n" +
	"\x0fDisplaySubTitle\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12A\n" +
	"\rpronunciation\x18\x02 \x03(\v2\x1b.ddex.pie.v10.PronunciationR\rpronunciation\x12'\n" +
	"\x0fsequence_number\x18\x03 \x01(\x05R\x0esequenceNumber\x121\n" +
	"\x15is_displayed_in_title\x18\x04 \x01(\bR\x12isDisplayedInTitle\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x06 \x01(\tR\x10userDefinedValue\x12$\n" +
	"\x0esub_title_type\x18\a \x01(\tR\fsubTitleType\"\xb6\x02\n" +
	"\fDisplayTitle\x126\n" +
	"\n" +
	"title_text\x18\x01 \x01(\v2\x17.ddex.pie.v10.TitleTextR\ttitleText\x12:\n" +
	"\tsub_title\x18\x02 \x03(\v2\x1d.ddex.pie.v10.DisplaySubTitleR\bsubTitle\x127\n" +
	"\x18language_and_script_code\x18\x03 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x04 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x05 \x01(\bR\tisDefault\"\xbc\x04\n" +
	"\x05Epoch\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12(\n" +
	"\x05value\x18\x02 \x03(\v2\x12.ddex.pie.v10.NameR\x05value\x12U\n" +
	"\x0erelated_artist\x18\x03 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\rrelatedArtist\x12H\n" +
	"\x10related_creation\x18\x04 \x03(\v2\x1d.ddex.pie.v10.RelatedCreationR\x0frelatedCreation\x121\n" +
	"\n" +
	"start_date\x18\x05 \x01(\v2\x12.ddex.pie.v10.DateR\tstartDate\x12-\n" +
	"\bend_date\x18\x06 \x01(\v2\x12.ddex.pie.v10.DateR\aendDate\x12>\n" +
	"\x1clanguage_and_script_of_epoch\x18\a \x03(\tR\x18languageAndScriptOfEpoch\x12c\n" +
	"\x1eterritory_of_epoch_description\x18\b \x03(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x1bterritoryOfEpochDescription\"\xc4\x02\n" +
	"\tEventDate\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\x12\x1b\n" +
	"\tis_before\x18\x03 \x01(\bR\bisBefore\x12\x19\n" +
	"\bis_after\x18\x04 \x01(\bR\aisAfter\x12V\n" +
	"\x19applicable_territory_code\x18\x05 \x01(\x0e2\x1a.ddex.avs.AllTerritoryCodeR\x17applicableTerritoryCode\x121\n" +
	"\x14location_description\x18\x06 \x01(\tR\x13locationDescription\x127\n" +
	"\x18language_and_script_code\x18\a \x01(\tR\x15languageAndScriptCode\"q\n" +
	"\x04File\x12\x12\n" +
	"\x05u_r_i\x18\x01 \x01(\tR\x03uRI\x128\n" +
	"\bhash_sum\x18\x02 \x01(\v2\x1d.ddex.pie.v10.DetailedHashSumR\ahashSum\x12\x1b\n" +
	"\tfile_size\x18\x03 \x01(\tR\bfileSize\"x\n" +
	"\x14HashSumAlgorithmType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xca\x01\n" +
	"\x05Image\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x12&\n" +
	"\x04file\x18\x02 \x01(\v2\x12.ddex.pie.v10.FileR\x04file\x126\n" +
	"\n" +
	"image_type\x18\x03 \x03(\v2\x17.ddex.pie.v10.ImageTypeR\timageType\"m\n" +
	"\tImageType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"t\n" +
	"\x11MessageAuditTrail\x12_\n" +
	"\x19message_audit_trail_event\x18\x01 \x03(\v2$.ddex.pie.v10.MessageAuditTrailEventR\x16messageAuditTrailEvent\"\x9c\x01\n" +
	"\x16MessageAuditTrailEvent\x12e\n" +
	"\x1amessaging_party_descriptor\x18\x01 \x01(\v2'.ddex.pie.v10.MessagingPartyWithoutCodeR\x18messagingPartyDescriptor\x12\x1b\n" +
	"\tdate_time\x18\x02 \x01(\tR\bdateTime\"\xdc\x04\n" +
	"\rMessageHeader\x12*\n" +
	"\x11message_thread_id\x18\x01 \x01(\tR\x0fmessageThreadId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12*\n" +
	"\x11message_file_name\x18\x03 \x01(\tR\x0fmessageFileName\x12N\n" +
	"\x0emessage_sender\x18\x04 \x01(\v2'.ddex.pie.v10.MessagingPartyWithoutCodeR\rmessageSender\x12R\n" +
	"\x11sent_on_behalf_of\x18\x05 \x01(\v2'.ddex.pie.v10.MessagingPartyWithoutCodeR\x0esentOnBehalfOf\x12T\n" +
	"\x11message_recipient\x18\x06 \x03(\v2'.ddex.pie.v10.MessagingPartyWithoutCodeR\x10messageRecipient\x129\n" +
	"\x19message_created_date_time\x18\a \x01(\tR\x16messageCreatedDateTime\x12O\n" +
	"\x13message_audit_trail\x18\b \x01(\v2\x1f.ddex.pie.v10.MessageAuditTrailR\x11messageAuditTrail\x12N\n" +
	"\x14message_control_type\x18\t \x01(\x0e2\x1c.ddex.avs.MessageControlTypeR\x12messageControlType\"\x9c\x01\n" +
	"\x19MessagingPartyWithoutCode\x12\x19\n" +
	"\bparty_id\x18\x01 \x01(\tR\apartyId\x12A\n" +
	"\n" +
	"party_name\x18\x02 \x01(\v2\".ddex.pie.v10.PartyNameWithoutCodeR\tpartyName\x12!\n" +
	"\ftrading_name\x18\x03 \x01(\tR\vtradingName\"\x8f\x01\n" +
	"\x0eMetadataSource\x12)\n" +
	"\x10source_reference\x18\x01 \x01(\tR\x0fsourceReference\x12R\n" +
	"\x14metadata_source_type\x18\x02 \x01(\v2 .ddex.pie.v10.MetadataSourceTypeR\x12metadataSourceType\"[\n" +
	"\x12MetadataSourceList\x12E\n" +
	"\x0fmetadata_source\x18\x01 \x03(\v2\x1c.ddex.pie.v10.MetadataSourceR\x0emetadataSource\"\xaa\x01\n" +
	"\x17MetadataSourceReference\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12.\n" +
	"\x13assertion_date_time\x18\x02 \x01(\tR\x11assertionDateTime\x121\n" +
	"\x06status\x18\x03 \x01(\x0e2\x19.ddex.avs.AssertionStatusR\x06status\x12\x16\n" +
	"\x06weight\x18\x04 \x01(\tR\x06weight\"v\n" +
	"\x12MetadataSourceType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xce\x01\n" +
	"\x18MusicalWorkIdWithoutFlag\x12\x15\n" +
	"\ai_s_w_c\x18\x01 \x01(\tR\x04iSWC\x12\x1f\n" +
	"\vopus_number\x18\x02 \x01(\tR\n" +
	"opusNumber\x126\n" +
	"\x17composer_catalog_number\x18\x03 \x03(\tR\x15composerCatalogNumber\x12B\n" +
	"\x0eproprietary_id\x18\x04 \x03(\v2\x1b.ddex.pie.v10.ProprietaryIdR\rproprietaryId\"U\n" +
	"\x04Name\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"\xc4\x01\n" +
	"\x06NameId\x12\x15\n" +
	"\ai_s_n_i\x18\x01 \x01(\tR\x04iSNI\x12&\n" +
	"\x0fipi_name_number\x18\x02 \x01(\tR\ripiNameNumber\x12\x12\n" +
	"\x05i_p_n\x18\x03 \x01(\tR\x03iPN\x12B\n" +
	"\x0eproprietary_id\x18\x04 \x03(\v2\x1b.ddex.pie.v10.ProprietaryIdR\rproprietaryId\x12#\n" +
	"\ris_deprecated\x18\x05 \x01(\bR\fisDeprecated\"\x8f\x01\n" +
	"\"NameWithPronunciationAndScriptCode\x12&\n" +
	"\x04name\x18\x01 \x01(\v2\x12.ddex.pie.v10.NameR\x04name\x12A\n" +
	"\rpronunciation\x18\x02 \x03(\v2\x1b.ddex.pie.v10.PronunciationR\rpronunciation\"h\n" +
	" PartyDescriptorWithPronunciation\x12:\n" +
	"\bparty_id\x18\x01 \x01(\v2\x1d.ddex.pie.v10.DetailedPartyIdH\x00R\apartyIdB\b\n" +
	"\x06choice\"\xc1\x06\n" +
	"\x1aPartyNameWithPronunciation\x12M\n" +
	"\tfull_name\x18\x01 \x01(\v20.ddex.pie.v10.NameWithPronunciationAndScriptCodeR\bfullName\x12o\n" +
	"\x1bfull_name_ascii_transcribed\x18\x02 \x01(\v20.ddex.pie.v10.NameWithPronunciationAndScriptCodeR\x18fullNameAsciiTranscribed\x12\\\n" +
	"\x11full_name_indexed\x18\x03 \x01(\v20.ddex.pie.v10.NameWithPronunciationAndScriptCodeR\x0ffullNameIndexed\x12c\n" +
	"\x15names_before_key_name\x18\x04 \x01(\v20.ddex.pie.v10.NameWithPronunciationAndScriptCodeR\x12namesBeforeKeyName\x12K\n" +
	"\bkey_name\x18\x05 \x01(\v20.ddex.pie.v10.NameWithPronunciationAndScriptCodeR\akeyName\x12a\n" +
	"\x14names_after_key_name\x18\x06 \x01(\v20.ddex.pie.v10.NameWithPronunciationAndScriptCodeR\x11namesAfterKeyName\x12[\n" +
	"\x10abbreviated_name\x18\a \x01(\v20.ddex.pie.v10.NameWithPronunciationAndScriptCodeR\x0fabbreviatedName\x127\n" +
	"\x18language_and_script_code\x18\b \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\t \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\"\xc8\x02\n" +
	"\x14PartyNameWithoutCode\x12\x1b\n" +
	"\tfull_name\x18\x01 \x01(\tR\bfullName\x12=\n" +
	"\x1bfull_name_ascii_transcribed\x18\x02 \x01(\tR\x18fullNameAsciiTranscribed\x12*\n" +
	"\x11full_name_indexed\x18\x03 \x01(\tR\x0ffullNameIndexed\x121\n" +
	"\x15names_before_key_name\x18\x04 \x01(\tR\x12namesBeforeKeyName\x12\x19\n" +
	"\bkey_name\x18\x05 \x01(\tR\akeyName\x12/\n" +
	"\x14names_after_key_name\x18\x06 \x01(\tR\x11namesAfterKeyName\x12)\n" +
	"\x10abbreviated_name\x18\a \x01(\tR\x0fabbreviatedName\"o\n" +
	"\vPeriodValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\\\n" +
	"\x0ePeriodWithTime\x12&\n" +
	"\x0fstart_date_time\x18\x01 \x01(\tR\rstartDateTime\x12\"\n" +
	"\rend_date_time\x18\x02 \x01(\tR\vendDateTime\"\x98\x02\n" +
	"\rPronunciation\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12!\n" +
	"\fis_canonical\x18\x02 \x01(\bR\visCanonical\x12#\n" +
	"\rlanguage_code\x18\x03 \x01(\tR\flanguageCode\x12;\n" +
	"\rencoding_type\x18\x04 \x01(\x0e2\x16.ddex.avs.EncodingTypeR\fencodingType\x12-\n" +
	"\x12encoding_namespace\x18\x05 \x01(\tR\x11encodingNamespace\x12=\n" +
	"\x1bencoding_user_defined_value\x18\x06 \x01(\tR\x18encodingUserDefinedValue\"C\n" +
	"\rProprietaryId\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"M\n" +
	"\x0fRelatedCreation\x12:\n" +
	"\x05title\x18\x01 \x01(\v2$.ddex.pie.v10.TitleWithPronunciationR\x05title\"\xe5\x02\n" +
	"\aRelease\x12\x13\n" +
	"\x05g_rid\x18\x01 \x01(\tR\x04gRid\x12\x15\n" +
	"\ai_c_p_n\x18\x02 \x01(\tR\x04iCPN\x124\n" +
	"\x16proprietary_release_id\x18\x03 \x01(\tR\x14proprietaryReleaseId\x12?\n" +
	"\rrelease_title\x18\x04 \x03(\v2\x1a.ddex.pie.v10.ReleaseTitleR\freleaseTitle\x12`\n" +
	"\x13display_artist_name\x18\x05 \x03(\v20.ddex.pie.v10.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12U\n" +
	"\x0edisplay_artist\x18\x06 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\rdisplayArtist\"\xd6\x01\n" +
	"\tReleaseId\x12\x13\n" +
	"\x05g_rid\x18\x01 \x01(\tR\x04gRid\x12\x15\n" +
	"\ai_s_r_c\x18\x02 \x01(\tR\x04iSRC\x12\x15\n" +
	"\ai_c_p_n\x18\x03 \x01(\tR\x04iCPN\x12B\n" +
	"\x0ecatalog_number\x18\x04 \x01(\v2\x1b.ddex.pie.v10.CatalogNumberR\rcatalogNumber\x12B\n" +
	"\x0eproprietary_id\x18\x05 \x03(\v2\x1b.ddex.pie.v10.ProprietaryIdR\rproprietaryId\"\xc2\x02\n" +
	"\x0eReleaseSummary\x126\n" +
	"\n" +
	"release_id\x18\x01 \x01(\v2\x17.ddex.pie.v10.ReleaseIdR\treleaseId\x12?\n" +
	"\rdisplay_title\x18\x02 \x03(\v2\x1a.ddex.pie.v10.DisplayTitleR\fdisplayTitle\x12`\n" +
	"\x13display_artist_name\x18\x03 \x03(\v20.ddex.pie.v10.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12U\n" +
	"\x0edisplay_artist\x18\x04 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\rdisplayArtist\"]\n" +
	"\fReleaseTitle\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"\xfd\x02\n" +
	"\bResource\x12\x15\n" +
	"\ai_s_r_c\x18\x01 \x01(\tR\x04iSRC\x12%\n" +
	"\x0ecatalog_number\x18\x02 \x01(\tR\rcatalogNumber\x126\n" +
	"\x17proprietary_resource_id\x18\x03 \x01(\tR\x15proprietaryResourceId\x12B\n" +
	"\x0eresource_title\x18\x04 \x03(\v2\x1b.ddex.pie.v10.ResourceTitleR\rresourceTitle\x12`\n" +
	"\x13display_artist_name\x18\x05 \x03(\v20.ddex.pie.v10.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12U\n" +
	"\x0edisplay_artist\x18\x06 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\rdisplayArtist\"\xc3\x02\n" +
	"\x15ResourceIdWithoutFlag\x12\x15\n" +
	"\ai_s_r_c\x18\x01 \x01(\tR\x04iSRC\x12\x15\n" +
	"\ai_s_m_n\x18\x02 \x01(\tR\x04iSMN\x12\x15\n" +
	"\ai_s_a_n\x18\x03 \x01(\tR\x04iSAN\x12\x18\n" +
	"\tv_i_s_a_n\x18\x04 \x01(\tR\x05vISAN\x12\x15\n" +
	"\ai_s_b_n\x18\x05 \x01(\tR\x04iSBN\x12\x15\n" +
	"\ai_s_s_n\x18\x06 \x01(\tR\x04iSSN\x12\x15\n" +
	"\as_i_c_i\x18\a \x01(\tR\x04sICI\x12B\n" +
	"\x0ecatalog_number\x18\b \x01(\v2\x1b.ddex.pie.v10.CatalogNumberR\rcatalogNumber\x12B\n" +
	"\x0eproprietary_id\x18\t \x03(\v2\x1b.ddex.pie.v10.ProprietaryIdR\rproprietaryId\"\xd1\x02\n" +
	"\x0fResourceSummary\x12D\n" +
	"\vresource_id\x18\x01 \x01(\v2#.ddex.pie.v10.ResourceIdWithoutFlagR\n" +
	"resourceId\x12?\n" +
	"\rdisplay_title\x18\x02 \x03(\v2\x1a.ddex.pie.v10.DisplayTitleR\fdisplayTitle\x12`\n" +
	"\x13display_artist_name\x18\x03 \x03(\v20.ddex.pie.v10.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12U\n" +
	"\x0edisplay_artist\x18\x04 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\rdisplayArtist\"^\n" +
	"\rResourceTitle\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"F\n" +
	"\bSubTitle\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12$\n" +
	"\x0esub_title_type\x18\x02 \x01(\tR\fsubTitleType\"\xd7\x02\n" +
	"\x0eTextWithFormat\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\x12/\n" +
	"\x06format\x18\x05 \x01(\x0e2\x17.ddex.avs.TextCodecTypeR\x06format\x12\x1c\n" +
	"\tnamespace\x18\x06 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\a \x01(\tR\x10userDefinedValue\"\xdd\x02\n" +
	"\x14TextWithoutTerritory\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\x12/\n" +
	"\x06format\x18\x05 \x01(\x0e2\x17.ddex.avs.TextCodecTypeR\x06format\x12\x1c\n" +
	"\tnamespace\x18\x06 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\a \x01(\tR\x10userDefinedValue\"d\n" +
	"\tTitleText\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12A\n" +
	"\rpronunciation\x18\x02 \x03(\v2\x1b.ddex.pie.v10.PronunciationR\rpronunciation\"\xbf\x02\n" +
	"\x16TitleWithPronunciation\x126\n" +
	"\n" +
	"title_text\x18\x01 \x01(\v2\x17.ddex.pie.v10.TitleTextR\ttitleText\x124\n" +
	"\tsub_title\x18\x02 \x01(\v2\x17.ddex.pie.v10.TitleTextR\bsubTitle\x127\n" +
	"\x18language_and_script_code\x18\x03 \x01(\tR\x15languageAndScriptCode\x122\n" +
	"\n" +
	"title_type\x18\x04 \x01(\x0e2\x13.ddex.avs.TitleTypeR\ttitleType\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x06 \x01(\tR\x10userDefinedValue\"\x9b\x02\n" +
	"\fTitleWithUDV\x12\x1d\n" +
	"\n" +
	"title_text\x18\x01 \x01(\tR\ttitleText\x123\n" +
	"\tsub_title\x18\x02 \x03(\v2\x16.ddex.pie.v10.SubTitleR\bsubTitle\x127\n" +
	"\x18language_and_script_code\x18\x03 \x01(\tR\x15languageAndScriptCode\x122\n" +
	"\n" +
	"title_type\x18\x04 \x01(\x0e2\x13.ddex.avs.TitleTypeR\ttitleType\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x06 \x01(\tR\x10userDefinedValue\"|\n" +
	"\x0eValidityPeriod\x126\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x17.ddex.pie.v10.EventDateR\tstartDate\x122\n" +
	"\bend_date\x18\x02 \x01(\v2\x17.ddex.pie.v10.EventDateR\aendDate\"\xaa\x01\n" +
	"\rVocalRegister\x12a\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2%.ddex.pie.v10.MetadataSourceReferenceR\x17metadataSourceReference\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .ddex.pie.v10.VocalRegisterValueR\x05value\"v\n" +
	"\x12VocalRegisterValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xcd\x01\n" +
	"\x04Work\x12\x15\n" +
	"\ai_s_w_c\x18\x01 \x01(\tR\x04iSWC\x12.\n" +
	"\x13proprietary_work_id\x18\x02 \x01(\tR\x11proprietaryWorkId\x126\n" +
	"\n" +
	"work_title\x18\x03 \x03(\v2\x17.ddex.pie.v10.WorkTitleR\tworkTitle\x12F\n" +
	"\x06writer\x18\x04 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\x06writer\"\xea\x01\n" +
	"\vWorkSummary\x12N\n" +
	"\x0fmusical_work_id\x18\x01 \x01(\v2&.ddex.pie.v10.MusicalWorkIdWithoutFlagR\rmusicalWorkId\x12C\n" +
	"\n" +
	"work_title\x18\x02 \x03(\v2$.ddex.pie.v10.TitleWithPronunciationR\tworkTitle\x12F\n" +
	"\x06writer\x18\x03 \x03(\v2..ddex.pie.v10.PartyDescriptorWithPronunciationR\x06writer\"Z\n" +
	"\tWorkTitle\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCodeB\x9d\x01\n" +
	"\x10com.ddex.pie.v10B\bV10ProtoP\x01Z-github.com/alecsavvy/ddex-go/gen/ddex/pie/v10\xa2\x02\x03DPX\xaa\x02\fDdex.Pie.V10\xca\x02\fDdex\\Pie\\V10\xe2\x02\x18Ddex\\Pie\\V10\\GPBMetadata\xea\x02\x0eDdex::Pie::V10b\x06proto3"

var (
	file_ddex_pie_v10_v10_proto_rawDescOnce sync.Once
	file_ddex_pie_v10_v10_proto_rawDescData []byte
)

func file_ddex_pie_v10_v10_proto_rawDescGZIP() []byte {
	file_ddex_pie_v10_v10_proto_rawDescOnce.Do(func() {
		file_ddex_pie_v10_v10_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ddex_pie_v10_v10_proto_rawDesc), len(file_ddex_pie_v10_v10_proto_rawDesc)))
	})
	return file_ddex_pie_v10_v10_proto_rawDescData
}

var file_ddex_pie_v10_v10_proto_msgTypes = make([]protoimpl.MessageInfo, 115)
var file_ddex_pie_v10_v10_proto_goTypes = []any{
	(*PieMessage)(nil),                                 // 0: ddex.pie.v10.PieMessage
	(*PieRequestMessage)(nil),                          // 1: ddex.pie.v10.PieRequestMessage
	(*Feed)(nil),                                       // 2: ddex.pie.v10.Feed
	(*Contribution)(nil),                               // 3: ddex.pie.v10.Contribution
	(*CreationDescription)(nil),                        // 4: ddex.pie.v10.CreationDescription
	(*DetailedPartyIdForParty)(nil),                    // 5: ddex.pie.v10.DetailedPartyIdForParty
	(*Entry)(nil),                                      // 6: ddex.pie.v10.Entry
	(*Event)(nil),                                      // 7: ddex.pie.v10.Event
	(*EventType)(nil),                                  // 8: ddex.pie.v10.EventType
	(*Focus)(nil),                                      // 9: ddex.pie.v10.Focus
	(*Gender)(nil),                                     // 10: ddex.pie.v10.Gender
	(*GenderValue)(nil),                                // 11: ddex.pie.v10.GenderValue
	(*NameWithPronunciation)(nil),                      // 12: ddex.pie.v10.NameWithPronunciation
	(*NameWithScriptCode)(nil),                         // 13: ddex.pie.v10.NameWithScriptCode
	(*Nationality)(nil),                                // 14: ddex.pie.v10.Nationality
	(*Party)(nil),                                      // 15: ddex.pie.v10.Party
	(*PartyDescriptorForEntry)(nil),                    // 16: ddex.pie.v10.PartyDescriptorForEntry
	(*PartyList)(nil),                                  // 17: ddex.pie.v10.PartyList
	(*PartyName)(nil),                                  // 18: ddex.pie.v10.PartyName
	(*PartyNameForRequest)(nil),                        // 19: ddex.pie.v10.PartyNameForRequest
	(*PartyNameFormat)(nil),                            // 20: ddex.pie.v10.PartyNameFormat
	(*PartyNamePurpose)(nil),                           // 21: ddex.pie.v10.PartyNamePurpose
	(*PartyNameType)(nil),                              // 22: ddex.pie.v10.PartyNameType
	(*PartyRelationshipType)(nil),                      // 23: ddex.pie.v10.PartyRelationshipType
	(*PartyType)(nil),                                  // 24: ddex.pie.v10.PartyType
	(*PartyTypeValue)(nil),                             // 25: ddex.pie.v10.PartyTypeValue
	(*PrimaryRole)(nil),                                // 26: ddex.pie.v10.PrimaryRole
	(*PronunciationForParty)(nil),                      // 27: ddex.pie.v10.PronunciationForParty
	(*ReasonForNameChange)(nil),                        // 28: ddex.pie.v10.ReasonForNameChange
	(*RelatedCreationForParty)(nil),                    // 29: ddex.pie.v10.RelatedCreationForParty
	(*RelatedParty)(nil),                               // 30: ddex.pie.v10.RelatedParty
	(*ReleaseForRequest)(nil),                          // 31: ddex.pie.v10.ReleaseForRequest
	(*RequestedParty)(nil),                             // 32: ddex.pie.v10.RequestedParty
	(*ResourceForRequest)(nil),                         // 33: ddex.pie.v10.ResourceForRequest
	(*SocialMediaURL)(nil),                             // 34: ddex.pie.v10.SocialMediaURL
	(*WorkForRequest)(nil),                             // 35: ddex.pie.v10.WorkForRequest
	(*Category)(nil),                                   // 36: ddex.pie.v10.Category
	(*Content)(nil),                                    // 37: ddex.pie.v10.Content
	(*DateTime)(nil),                                   // 38: ddex.pie.v10.DateTime
	(*Generator)(nil),                                  // 39: ddex.pie.v10.Generator
	(*Icon)(nil),                                       // 40: ddex.pie.v10.Icon
	(*Id)(nil),                                         // 41: ddex.pie.v10.Id
	(*Link)(nil),                                       // 42: ddex.pie.v10.Link
	(*Logo)(nil),                                       // 43: ddex.pie.v10.Logo
	(*Person)(nil),                                     // 44: ddex.pie.v10.Person
	(*Source)(nil),                                     // 45: ddex.pie.v10.Source
	(*Text)(nil),                                       // 46: ddex.pie.v10.Text
	(*URI)(nil),                                        // 47: ddex.pie.v10.URI
	(*AllTerritoryCode)(nil),                           // 48: ddex.pie.v10.AllTerritoryCode
	(*ArtistType)(nil),                                 // 49: ddex.pie.v10.ArtistType
	(*ArtistTypeValue)(nil),                            // 50: ddex.pie.v10.ArtistTypeValue
	(*ArtisticInfluence)(nil),                          // 51: ddex.pie.v10.ArtisticInfluence
	(*Award)(nil),                                      // 52: ddex.pie.v10.Award
	(*Biography)(nil),                                  // 53: ddex.pie.v10.Biography
	(*BiographyText)(nil),                              // 54: ddex.pie.v10.BiographyText
	(*CatalogNumber)(nil),                              // 55: ddex.pie.v10.CatalogNumber
	(*ClassicalPeriod)(nil),                            // 56: ddex.pie.v10.ClassicalPeriod
	(*CommentaryNote)(nil),                             // 57: ddex.pie.v10.CommentaryNote
	(*CommentaryNoteType)(nil),                         // 58: ddex.pie.v10.CommentaryNoteType
	(*ContributorRole)(nil),                            // 59: ddex.pie.v10.ContributorRole
	(*Date)(nil),                                       // 60: ddex.pie.v10.Date
	(*Description)(nil),                                // 61: ddex.pie.v10.Description
	(*DetailedHashSum)(nil),                            // 62: ddex.pie.v10.DetailedHashSum
	(*DetailedPartyId)(nil),                            // 63: ddex.pie.v10.DetailedPartyId
	(*DisplayArtistName)(nil),                          // 64: ddex.pie.v10.DisplayArtistName
	(*DisplayArtistNameWithDefault)(nil),               // 65: ddex.pie.v10.DisplayArtistNameWithDefault
	(*DisplayArtistNameWithPronunciation)(nil),         // 66: ddex.pie.v10.DisplayArtistNameWithPronunciation
	(*DisplaySubTitle)(nil),                            // 67: ddex.pie.v10.DisplaySubTitle
	(*DisplayTitle)(nil),                               // 68: ddex.pie.v10.DisplayTitle
	(*Epoch)(nil),                                      // 69: ddex.pie.v10.Epoch
	(*EventDate)(nil),                                  // 70: ddex.pie.v10.EventDate
	(*File)(nil),                                       // 71: ddex.pie.v10.File
	(*HashSumAlgorithmType)(nil),                       // 72: ddex.pie.v10.HashSumAlgorithmType
	(*Image)(nil),                                      // 73: ddex.pie.v10.Image
	(*ImageType)(nil),                                  // 74: ddex.pie.v10.ImageType
	(*MessageAuditTrail)(nil),                          // 75: ddex.pie.v10.MessageAuditTrail
	(*MessageAuditTrailEvent)(nil),                     // 76: ddex.pie.v10.MessageAuditTrailEvent
	(*MessageHeader)(nil),                              // 77: ddex.pie.v10.MessageHeader
	(*MessagingPartyWithoutCode)(nil),                  // 78: ddex.pie.v10.MessagingPartyWithoutCode
	(*MetadataSource)(nil),                             // 79: ddex.pie.v10.MetadataSource
	(*MetadataSourceList)(nil),                         // 80: ddex.pie.v10.MetadataSourceList
	(*MetadataSourceReference)(nil),                    // 81: ddex.pie.v10.MetadataSourceReference
	(*MetadataSourceType)(nil),                         // 82: ddex.pie.v10.MetadataSourceType
	(*MusicalWorkIdWithoutFlag)(nil),                   // 83: ddex.pie.v10.MusicalWorkIdWithoutFlag
	(*Name)(nil),                                       // 84: ddex.pie.v10.Name
	(*NameId)(nil),                                     // 85: ddex.pie.v10.NameId
	(*NameWithPronunciationAndScriptCode)(nil),         // 86: ddex.pie.v10.NameWithPronunciationAndScriptCode
	(*PartyDescriptorWithPronunciation)(nil),           // 87: ddex.pie.v10.PartyDescriptorWithPronunciation
	(*PartyNameWithPronunciation)(nil),                 // 88: ddex.pie.v10.PartyNameWithPronunciation
	(*PartyNameWithoutCode)(nil),                       // 89: ddex.pie.v10.PartyNameWithoutCode
	(*PeriodValue)(nil),                                // 90: ddex.pie.v10.PeriodValue
	(*PeriodWithTime)(nil),                             // 91: ddex.pie.v10.PeriodWithTime
	(*Pronunciation)(nil),                              // 92: ddex.pie.v10.Pronunciation
	(*ProprietaryId)(nil),                              // 93: ddex.pie.v10.ProprietaryId
	(*RelatedCreation)(nil),                            // 94: ddex.pie.v10.RelatedCreation
	(*Release)(nil),                                    // 95: ddex.pie.v10.Release
	(*ReleaseId)(nil),                                  // 96: ddex.pie.v10.ReleaseId
	(*ReleaseSummary)(nil),                             // 97: ddex.pie.v10.ReleaseSummary
	(*ReleaseTitle)(nil),                               // 98: ddex.pie.v10.ReleaseTitle
	(*Resource)(nil),                                   // 99: ddex.pie.v10.Resource
	(*ResourceIdWithoutFlag)(nil),                      // 100: ddex.pie.v10.ResourceIdWithoutFlag
	(*ResourceSummary)(nil),                            // 101: ddex.pie.v10.ResourceSummary
	(*ResourceTitle)(nil),                              // 102: ddex.pie.v10.ResourceTitle
	(*SubTitle)(nil),                                   // 103: ddex.pie.v10.SubTitle
	(*TextWithFormat)(nil),                             // 104: ddex.pie.v10.TextWithFormat
	(*TextWithoutTerritory)(nil),                       // 105: ddex.pie.v10.TextWithoutTerritory
	(*TitleText)(nil),                                  // 106: ddex.pie.v10.TitleText
	(*TitleWithPronunciation)(nil),                     // 107: ddex.pie.v10.TitleWithPronunciation
	(*TitleWithUDV)(nil),                               // 108: ddex.pie.v10.TitleWithUDV
	(*ValidityPeriod)(nil),                             // 109: ddex.pie.v10.ValidityPeriod
	(*VocalRegister)(nil),                              // 110: ddex.pie.v10.VocalRegister
	(*VocalRegisterValue)(nil),                         // 111: ddex.pie.v10.VocalRegisterValue
	(*Work)(nil),                                       // 112: ddex.pie.v10.Work
	(*WorkSummary)(nil),                                // 113: ddex.pie.v10.WorkSummary
	(*WorkTitle)(nil),                                  // 114: ddex.pie.v10.WorkTitle
	(avs.CurrentTerritoryCode)(0),                      // 115: ddex.avs.CurrentTerritoryCode
	(avs.EncodingType)(0),                              // 116: ddex.avs.EncodingType
	(avs.CreationType)(0),                              // 117: ddex.avs.CreationType
	(avs.ResourceType)(0),                              // 118: ddex.avs.ResourceType
	(avs.TextTypeATOM)(0),                              // 119: ddex.avs.TextTypeATOM
	(avs.TerritoryCodeTypeIncludingDeprecatedCodes)(0), // 120: ddex.avs.TerritoryCodeTypeIncludingDeprecatedCodes
	(avs.TextCodecType)(0),                             // 121: ddex.avs.TextCodecType
	(avs.BinaryDataType)(0),                            // 122: ddex.avs.BinaryDataType
	(avs.AllTerritoryCode)(0),                          // 123: ddex.avs.AllTerritoryCode
	(avs.MessageControlType)(0),                        // 124: ddex.avs.MessageControlType
	(avs.AssertionStatus)(0),                           // 125: ddex.avs.AssertionStatus
	(avs.TitleType)(0),                                 // 126: ddex.avs.TitleType
}
var file_ddex_pie_v10_v10_proto_depIdxs = []int32{
	77,  // 0: ddex.pie.v10.PieMessage.message_header:type_name -> ddex.pie.v10.MessageHeader
	80,  // 1: ddex.pie.v10.PieMessage.metadata_source_list:type_name -> ddex.pie.v10.MetadataSourceList
	17,  // 2: ddex.pie.v10.PieMessage.party_list:type_name -> ddex.pie.v10.PartyList
	77,  // 3: ddex.pie.v10.PieRequestMessage.message_header:type_name -> ddex.pie.v10.MessageHeader
	32,  // 4: ddex.pie.v10.PieRequestMessage.requested_party:type_name -> ddex.pie.v10.RequestedParty
	44,  // 5: ddex.pie.v10.Feed.author:type_name -> ddex.pie.v10.Person
	36,  // 6: ddex.pie.v10.Feed.category:type_name -> ddex.pie.v10.Category
	44,  // 7: ddex.pie.v10.Feed.contributor:type_name -> ddex.pie.v10.Person
	39,  // 8: ddex.pie.v10.Feed.generator:type_name -> ddex.pie.v10.Generator
	40,  // 9: ddex.pie.v10.Feed.icon:type_name -> ddex.pie.v10.Icon
	41,  // 10: ddex.pie.v10.Feed.id:type_name -> ddex.pie.v10.Id
	42,  // 11: ddex.pie.v10.Feed.link:type_name -> ddex.pie.v10.Link
	43,  // 12: ddex.pie.v10.Feed.logo:type_name -> ddex.pie.v10.Logo
	46,  // 13: ddex.pie.v10.Feed.rights:type_name -> ddex.pie.v10.Text
	46,  // 14: ddex.pie.v10.Feed.subtitle:type_name -> ddex.pie.v10.Text
	46,  // 15: ddex.pie.v10.Feed.title:type_name -> ddex.pie.v10.Text
	38,  // 16: ddex.pie.v10.Feed.updated:type_name -> ddex.pie.v10.DateTime
	6,   // 17: ddex.pie.v10.Feed.entry:type_name -> ddex.pie.v10.Entry
	59,  // 18: ddex.pie.v10.Contribution.role:type_name -> ddex.pie.v10.ContributorRole
	70,  // 19: ddex.pie.v10.Contribution.event:type_name -> ddex.pie.v10.EventDate
	108, // 20: ddex.pie.v10.CreationDescription.title:type_name -> ddex.pie.v10.TitleWithUDV
	64,  // 21: ddex.pie.v10.CreationDescription.display_artist_name:type_name -> ddex.pie.v10.DisplayArtistName
	70,  // 22: ddex.pie.v10.CreationDescription.publication_date:type_name -> ddex.pie.v10.EventDate
	93,  // 23: ddex.pie.v10.DetailedPartyIdForParty.proprietary_id:type_name -> ddex.pie.v10.ProprietaryId
	44,  // 24: ddex.pie.v10.Entry.author:type_name -> ddex.pie.v10.Person
	36,  // 25: ddex.pie.v10.Entry.category:type_name -> ddex.pie.v10.Category
	37,  // 26: ddex.pie.v10.Entry.content:type_name -> ddex.pie.v10.Content
	44,  // 27: ddex.pie.v10.Entry.contributor:type_name -> ddex.pie.v10.Person
	41,  // 28: ddex.pie.v10.Entry.id:type_name -> ddex.pie.v10.Id
	42,  // 29: ddex.pie.v10.Entry.link:type_name -> ddex.pie.v10.Link
	38,  // 30: ddex.pie.v10.Entry.published:type_name -> ddex.pie.v10.DateTime
	46,  // 31: ddex.pie.v10.Entry.rights:type_name -> ddex.pie.v10.Text
	45,  // 32: ddex.pie.v10.Entry.source:type_name -> ddex.pie.v10.Source
	46,  // 33: ddex.pie.v10.Entry.summary:type_name -> ddex.pie.v10.Text
	46,  // 34: ddex.pie.v10.Entry.title:type_name -> ddex.pie.v10.Text
	38,  // 35: ddex.pie.v10.Entry.updated:type_name -> ddex.pie.v10.DateTime
	16,  // 36: ddex.pie.v10.Entry.party:type_name -> ddex.pie.v10.PartyDescriptorForEntry
	81,  // 37: ddex.pie.v10.Event.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	8,   // 38: ddex.pie.v10.Event.event_type:type_name -> ddex.pie.v10.EventType
	61,  // 39: ddex.pie.v10.Event.event_description:type_name -> ddex.pie.v10.Description
	81,  // 40: ddex.pie.v10.Focus.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	101, // 41: ddex.pie.v10.Focus.focus_track:type_name -> ddex.pie.v10.ResourceSummary
	97,  // 42: ddex.pie.v10.Focus.focus_release:type_name -> ddex.pie.v10.ReleaseSummary
	113, // 43: ddex.pie.v10.Focus.focus_work:type_name -> ddex.pie.v10.WorkSummary
	66,  // 44: ddex.pie.v10.Focus.display_artist_name:type_name -> ddex.pie.v10.DisplayArtistNameWithPronunciation
	87,  // 45: ddex.pie.v10.Focus.display_artist:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	87,  // 46: ddex.pie.v10.Focus.writer:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	91,  // 47: ddex.pie.v10.Focus.period_of_being_focus:type_name -> ddex.pie.v10.PeriodWithTime
	115, // 48: ddex.pie.v10.Focus.territory_of_being_focus_track_description:type_name -> ddex.avs.CurrentTerritoryCode
	105, // 49: ddex.pie.v10.Focus.comment:type_name -> ddex.pie.v10.TextWithoutTerritory
	81,  // 50: ddex.pie.v10.Gender.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	11,  // 51: ddex.pie.v10.Gender.value:type_name -> ddex.pie.v10.GenderValue
	27,  // 52: ddex.pie.v10.NameWithPronunciation.pronunciation:type_name -> ddex.pie.v10.PronunciationForParty
	84,  // 53: ddex.pie.v10.NameWithScriptCode.name:type_name -> ddex.pie.v10.Name
	27,  // 54: ddex.pie.v10.NameWithScriptCode.pronunciation:type_name -> ddex.pie.v10.PronunciationForParty
	81,  // 55: ddex.pie.v10.Nationality.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	48,  // 56: ddex.pie.v10.Nationality.value:type_name -> ddex.pie.v10.AllTerritoryCode
	5,   // 57: ddex.pie.v10.Party.party_id:type_name -> ddex.pie.v10.DetailedPartyIdForParty
	18,  // 58: ddex.pie.v10.Party.party_name:type_name -> ddex.pie.v10.PartyName
	24,  // 59: ddex.pie.v10.Party.party_type:type_name -> ddex.pie.v10.PartyType
	7,   // 60: ddex.pie.v10.Party.event:type_name -> ddex.pie.v10.Event
	30,  // 61: ddex.pie.v10.Party.related_party:type_name -> ddex.pie.v10.RelatedParty
	29,  // 62: ddex.pie.v10.Party.related_creation:type_name -> ddex.pie.v10.RelatedCreationForParty
	10,  // 63: ddex.pie.v10.Party.gender:type_name -> ddex.pie.v10.Gender
	14,  // 64: ddex.pie.v10.Party.nationality:type_name -> ddex.pie.v10.Nationality
	26,  // 65: ddex.pie.v10.Party.primary_role:type_name -> ddex.pie.v10.PrimaryRole
	110, // 66: ddex.pie.v10.Party.vocal_register:type_name -> ddex.pie.v10.VocalRegister
	9,   // 67: ddex.pie.v10.Party.focus:type_name -> ddex.pie.v10.Focus
	49,  // 68: ddex.pie.v10.Party.artist_type:type_name -> ddex.pie.v10.ArtistType
	56,  // 69: ddex.pie.v10.Party.classical_period:type_name -> ddex.pie.v10.ClassicalPeriod
	69,  // 70: ddex.pie.v10.Party.epoch:type_name -> ddex.pie.v10.Epoch
	51,  // 71: ddex.pie.v10.Party.artistic_influence:type_name -> ddex.pie.v10.ArtisticInfluence
	52,  // 72: ddex.pie.v10.Party.award:type_name -> ddex.pie.v10.Award
	53,  // 73: ddex.pie.v10.Party.biography:type_name -> ddex.pie.v10.Biography
	73,  // 74: ddex.pie.v10.Party.image:type_name -> ddex.pie.v10.Image
	34,  // 75: ddex.pie.v10.Party.social_media_u_r_l:type_name -> ddex.pie.v10.SocialMediaURL
	57,  // 76: ddex.pie.v10.Party.commentary_note:type_name -> ddex.pie.v10.CommentaryNote
	63,  // 77: ddex.pie.v10.PartyDescriptorForEntry.party_id:type_name -> ddex.pie.v10.DetailedPartyId
	15,  // 78: ddex.pie.v10.PartyList.party:type_name -> ddex.pie.v10.Party
	81,  // 79: ddex.pie.v10.PartyName.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	85,  // 80: ddex.pie.v10.PartyName.name_id:type_name -> ddex.pie.v10.NameId
	22,  // 81: ddex.pie.v10.PartyName.party_name_type:type_name -> ddex.pie.v10.PartyNameType
	28,  // 82: ddex.pie.v10.PartyName.reason_for_name_change:type_name -> ddex.pie.v10.ReasonForNameChange
	21,  // 83: ddex.pie.v10.PartyName.party_name_purpose:type_name -> ddex.pie.v10.PartyNamePurpose
	20,  // 84: ddex.pie.v10.PartyName.party_name_format:type_name -> ddex.pie.v10.PartyNameFormat
	13,  // 85: ddex.pie.v10.PartyName.full_name:type_name -> ddex.pie.v10.NameWithScriptCode
	12,  // 86: ddex.pie.v10.PartyName.full_name_ascii_transcribed:type_name -> ddex.pie.v10.NameWithPronunciation
	13,  // 87: ddex.pie.v10.PartyName.full_name_indexed:type_name -> ddex.pie.v10.NameWithScriptCode
	13,  // 88: ddex.pie.v10.PartyName.names_before_key_name:type_name -> ddex.pie.v10.NameWithScriptCode
	13,  // 89: ddex.pie.v10.PartyName.key_name:type_name -> ddex.pie.v10.NameWithScriptCode
	13,  // 90: ddex.pie.v10.PartyName.names_after_key_name:type_name -> ddex.pie.v10.NameWithScriptCode
	13,  // 91: ddex.pie.v10.PartyName.short_name:type_name -> ddex.pie.v10.NameWithScriptCode
	13,  // 92: ddex.pie.v10.PartyName.abbreviated_name:type_name -> ddex.pie.v10.NameWithScriptCode
	109, // 93: ddex.pie.v10.PartyName.validity_period:type_name -> ddex.pie.v10.ValidityPeriod
	29,  // 94: ddex.pie.v10.PartyName.related_creation:type_name -> ddex.pie.v10.RelatedCreationForParty
	115, // 95: ddex.pie.v10.PartyName.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	84,  // 96: ddex.pie.v10.PartyNameForRequest.full_name:type_name -> ddex.pie.v10.Name
	84,  // 97: ddex.pie.v10.PartyNameForRequest.full_name_indexed:type_name -> ddex.pie.v10.Name
	84,  // 98: ddex.pie.v10.PartyNameForRequest.names_before_key_name:type_name -> ddex.pie.v10.Name
	84,  // 99: ddex.pie.v10.PartyNameForRequest.key_name:type_name -> ddex.pie.v10.Name
	84,  // 100: ddex.pie.v10.PartyNameForRequest.names_after_key_name:type_name -> ddex.pie.v10.Name
	84,  // 101: ddex.pie.v10.PartyNameForRequest.abbreviated_name:type_name -> ddex.pie.v10.Name
	81,  // 102: ddex.pie.v10.PartyType.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	25,  // 103: ddex.pie.v10.PartyType.value:type_name -> ddex.pie.v10.PartyTypeValue
	81,  // 104: ddex.pie.v10.PrimaryRole.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	59,  // 105: ddex.pie.v10.PrimaryRole.value:type_name -> ddex.pie.v10.ContributorRole
	116, // 106: ddex.pie.v10.PronunciationForParty.encoding_type:type_name -> ddex.avs.EncodingType
	81,  // 107: ddex.pie.v10.RelatedCreationForParty.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	117, // 108: ddex.pie.v10.RelatedCreationForParty.creation_type:type_name -> ddex.avs.CreationType
	3,   // 109: ddex.pie.v10.RelatedCreationForParty.contribution:type_name -> ddex.pie.v10.Contribution
	61,  // 110: ddex.pie.v10.RelatedCreationForParty.relationship_description:type_name -> ddex.pie.v10.Description
	81,  // 111: ddex.pie.v10.RelatedParty.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	23,  // 112: ddex.pie.v10.RelatedParty.party_relationship_type:type_name -> ddex.pie.v10.PartyRelationshipType
	61,  // 113: ddex.pie.v10.RelatedParty.description:type_name -> ddex.pie.v10.Description
	109, // 114: ddex.pie.v10.RelatedParty.validity_period:type_name -> ddex.pie.v10.ValidityPeriod
	29,  // 115: ddex.pie.v10.RelatedParty.related_creation:type_name -> ddex.pie.v10.RelatedCreationForParty
	96,  // 116: ddex.pie.v10.ReleaseForRequest.release_id:type_name -> ddex.pie.v10.ReleaseId
	98,  // 117: ddex.pie.v10.ReleaseForRequest.release_title:type_name -> ddex.pie.v10.ReleaseTitle
	59,  // 118: ddex.pie.v10.RequestedParty.role:type_name -> ddex.pie.v10.ContributorRole
	31,  // 119: ddex.pie.v10.RequestedParty.release:type_name -> ddex.pie.v10.ReleaseForRequest
	33,  // 120: ddex.pie.v10.RequestedParty.resource:type_name -> ddex.pie.v10.ResourceForRequest
	35,  // 121: ddex.pie.v10.RequestedParty.work:type_name -> ddex.pie.v10.WorkForRequest
	100, // 122: ddex.pie.v10.ResourceForRequest.resource_id:type_name -> ddex.pie.v10.ResourceIdWithoutFlag
	102, // 123: ddex.pie.v10.ResourceForRequest.resource_title:type_name -> ddex.pie.v10.ResourceTitle
	118, // 124: ddex.pie.v10.ResourceForRequest.resource_type:type_name -> ddex.avs.ResourceType
	115, // 125: ddex.pie.v10.SocialMediaURL.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	83,  // 126: ddex.pie.v10.WorkForRequest.work_id:type_name -> ddex.pie.v10.MusicalWorkIdWithoutFlag
	114, // 127: ddex.pie.v10.WorkForRequest.work_title:type_name -> ddex.pie.v10.WorkTitle
	47,  // 128: ddex.pie.v10.Person.uri:type_name -> ddex.pie.v10.URI
	44,  // 129: ddex.pie.v10.Source.author:type_name -> ddex.pie.v10.Person
	36,  // 130: ddex.pie.v10.Source.category:type_name -> ddex.pie.v10.Category
	44,  // 131: ddex.pie.v10.Source.contributor:type_name -> ddex.pie.v10.Person
	39,  // 132: ddex.pie.v10.Source.generator:type_name -> ddex.pie.v10.Generator
	40,  // 133: ddex.pie.v10.Source.icon:type_name -> ddex.pie.v10.Icon
	41,  // 134: ddex.pie.v10.Source.id:type_name -> ddex.pie.v10.Id
	42,  // 135: ddex.pie.v10.Source.link:type_name -> ddex.pie.v10.Link
	43,  // 136: ddex.pie.v10.Source.logo:type_name -> ddex.pie.v10.Logo
	46,  // 137: ddex.pie.v10.Source.rights:type_name -> ddex.pie.v10.Text
	46,  // 138: ddex.pie.v10.Source.subtitle:type_name -> ddex.pie.v10.Text
	46,  // 139: ddex.pie.v10.Source.title:type_name -> ddex.pie.v10.Text
	38,  // 140: ddex.pie.v10.Source.updated:type_name -> ddex.pie.v10.DateTime
	119, // 141: ddex.pie.v10.Text.type:type_name -> ddex.avs.TextTypeATOM
	120, // 142: ddex.pie.v10.AllTerritoryCode.identifier_type:type_name -> ddex.avs.TerritoryCodeTypeIncludingDeprecatedCodes
	81,  // 143: ddex.pie.v10.ArtistType.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	50,  // 144: ddex.pie.v10.ArtistType.value:type_name -> ddex.pie.v10.ArtistTypeValue
	115, // 145: ddex.pie.v10.ArtistType.territory_of_artist_type_description:type_name -> ddex.avs.CurrentTerritoryCode
	81,  // 146: ddex.pie.v10.ArtisticInfluence.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	87,  // 147: ddex.pie.v10.ArtisticInfluence.party:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	112, // 148: ddex.pie.v10.ArtisticInfluence.work:type_name -> ddex.pie.v10.Work
	99,  // 149: ddex.pie.v10.ArtisticInfluence.resource:type_name -> ddex.pie.v10.Resource
	95,  // 150: ddex.pie.v10.ArtisticInfluence.release:type_name -> ddex.pie.v10.Release
	104, // 151: ddex.pie.v10.ArtisticInfluence.description:type_name -> ddex.pie.v10.TextWithFormat
	81,  // 152: ddex.pie.v10.Award.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	87,  // 153: ddex.pie.v10.Award.awarding_body:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	87,  // 154: ddex.pie.v10.Award.awarded_party:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	86,  // 155: ddex.pie.v10.Award.award_name:type_name -> ddex.pie.v10.NameWithPronunciationAndScriptCode
	70,  // 156: ddex.pie.v10.Award.date:type_name -> ddex.pie.v10.EventDate
	104, // 157: ddex.pie.v10.Award.comment:type_name -> ddex.pie.v10.TextWithFormat
	81,  // 158: ddex.pie.v10.Biography.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	54,  // 159: ddex.pie.v10.Biography.text:type_name -> ddex.pie.v10.BiographyText
	87,  // 160: ddex.pie.v10.Biography.author:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	115, // 161: ddex.pie.v10.BiographyText.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	121, // 162: ddex.pie.v10.BiographyText.format:type_name -> ddex.avs.TextCodecType
	81,  // 163: ddex.pie.v10.ClassicalPeriod.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	90,  // 164: ddex.pie.v10.ClassicalPeriod.name:type_name -> ddex.pie.v10.PeriodValue
	115, // 165: ddex.pie.v10.ClassicalPeriod.territory_of_classical_period_description:type_name -> ddex.avs.CurrentTerritoryCode
	81,  // 166: ddex.pie.v10.CommentaryNote.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	105, // 167: ddex.pie.v10.CommentaryNote.text:type_name -> ddex.pie.v10.TextWithoutTerritory
	58,  // 168: ddex.pie.v10.CommentaryNote.commentary_note_type:type_name -> ddex.pie.v10.CommentaryNoteType
	115, // 169: ddex.pie.v10.CommentaryNote.territory_of_commentary_note_description:type_name -> ddex.avs.CurrentTerritoryCode
	87,  // 170: ddex.pie.v10.CommentaryNote.author:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	72,  // 171: ddex.pie.v10.DetailedHashSum.algorithm:type_name -> ddex.pie.v10.HashSumAlgorithmType
	122, // 172: ddex.pie.v10.DetailedHashSum.data_type:type_name -> ddex.avs.BinaryDataType
	93,  // 173: ddex.pie.v10.DetailedPartyId.proprietary_id:type_name -> ddex.pie.v10.ProprietaryId
	115, // 174: ddex.pie.v10.DisplayArtistName.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	115, // 175: ddex.pie.v10.DisplayArtistNameWithDefault.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	65,  // 176: ddex.pie.v10.DisplayArtistNameWithPronunciation.name:type_name -> ddex.pie.v10.DisplayArtistNameWithDefault
	92,  // 177: ddex.pie.v10.DisplayArtistNameWithPronunciation.pronunciation:type_name -> ddex.pie.v10.Pronunciation
	92,  // 178: ddex.pie.v10.DisplaySubTitle.pronunciation:type_name -> ddex.pie.v10.Pronunciation
	106, // 179: ddex.pie.v10.DisplayTitle.title_text:type_name -> ddex.pie.v10.TitleText
	67,  // 180: ddex.pie.v10.DisplayTitle.sub_title:type_name -> ddex.pie.v10.DisplaySubTitle
	115, // 181: ddex.pie.v10.DisplayTitle.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	81,  // 182: ddex.pie.v10.Epoch.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	84,  // 183: ddex.pie.v10.Epoch.value:type_name -> ddex.pie.v10.Name
	87,  // 184: ddex.pie.v10.Epoch.related_artist:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	94,  // 185: ddex.pie.v10.Epoch.related_creation:type_name -> ddex.pie.v10.RelatedCreation
	60,  // 186: ddex.pie.v10.Epoch.start_date:type_name -> ddex.pie.v10.Date
	60,  // 187: ddex.pie.v10.Epoch.end_date:type_name -> ddex.pie.v10.Date
	115, // 188: ddex.pie.v10.Epoch.territory_of_epoch_description:type_name -> ddex.avs.CurrentTerritoryCode
	123, // 189: ddex.pie.v10.EventDate.applicable_territory_code:type_name -> ddex.avs.AllTerritoryCode
	62,  // 190: ddex.pie.v10.File.hash_sum:type_name -> ddex.pie.v10.DetailedHashSum
	81,  // 191: ddex.pie.v10.Image.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	71,  // 192: ddex.pie.v10.Image.file:type_name -> ddex.pie.v10.File
	74,  // 193: ddex.pie.v10.Image.image_type:type_name -> ddex.pie.v10.ImageType
	76,  // 194: ddex.pie.v10.MessageAuditTrail.message_audit_trail_event:type_name -> ddex.pie.v10.MessageAuditTrailEvent
	78,  // 195: ddex.pie.v10.MessageAuditTrailEvent.messaging_party_descriptor:type_name -> ddex.pie.v10.MessagingPartyWithoutCode
	78,  // 196: ddex.pie.v10.MessageHeader.message_sender:type_name -> ddex.pie.v10.MessagingPartyWithoutCode
	78,  // 197: ddex.pie.v10.MessageHeader.sent_on_behalf_of:type_name -> ddex.pie.v10.MessagingPartyWithoutCode
	78,  // 198: ddex.pie.v10.MessageHeader.message_recipient:type_name -> ddex.pie.v10.MessagingPartyWithoutCode
	75,  // 199: ddex.pie.v10.MessageHeader.message_audit_trail:type_name -> ddex.pie.v10.MessageAuditTrail
	124, // 200: ddex.pie.v10.MessageHeader.message_control_type:type_name -> ddex.avs.MessageControlType
	89,  // 201: ddex.pie.v10.MessagingPartyWithoutCode.party_name:type_name -> ddex.pie.v10.PartyNameWithoutCode
	82,  // 202: ddex.pie.v10.MetadataSource.metadata_source_type:type_name -> ddex.pie.v10.MetadataSourceType
	79,  // 203: ddex.pie.v10.MetadataSourceList.metadata_source:type_name -> ddex.pie.v10.MetadataSource
	125, // 204: ddex.pie.v10.MetadataSourceReference.status:type_name -> ddex.avs.AssertionStatus
	93,  // 205: ddex.pie.v10.MusicalWorkIdWithoutFlag.proprietary_id:type_name -> ddex.pie.v10.ProprietaryId
	93,  // 206: ddex.pie.v10.NameId.proprietary_id:type_name -> ddex.pie.v10.ProprietaryId
	84,  // 207: ddex.pie.v10.NameWithPronunciationAndScriptCode.name:type_name -> ddex.pie.v10.Name
	92,  // 208: ddex.pie.v10.NameWithPronunciationAndScriptCode.pronunciation:type_name -> ddex.pie.v10.Pronunciation
	63,  // 209: ddex.pie.v10.PartyDescriptorWithPronunciation.party_id:type_name -> ddex.pie.v10.DetailedPartyId
	86,  // 210: ddex.pie.v10.PartyNameWithPronunciation.full_name:type_name -> ddex.pie.v10.NameWithPronunciationAndScriptCode
	86,  // 211: ddex.pie.v10.PartyNameWithPronunciation.full_name_ascii_transcribed:type_name -> ddex.pie.v10.NameWithPronunciationAndScriptCode
	86,  // 212: ddex.pie.v10.PartyNameWithPronunciation.full_name_indexed:type_name -> ddex.pie.v10.NameWithPronunciationAndScriptCode
	86,  // 213: ddex.pie.v10.PartyNameWithPronunciation.names_before_key_name:type_name -> ddex.pie.v10.NameWithPronunciationAndScriptCode
	86,  // 214: ddex.pie.v10.PartyNameWithPronunciation.key_name:type_name -> ddex.pie.v10.NameWithPronunciationAndScriptCode
	86,  // 215: ddex.pie.v10.PartyNameWithPronunciation.names_after_key_name:type_name -> ddex.pie.v10.NameWithPronunciationAndScriptCode
	86,  // 216: ddex.pie.v10.PartyNameWithPronunciation.abbreviated_name:type_name -> ddex.pie.v10.NameWithPronunciationAndScriptCode
	115, // 217: ddex.pie.v10.PartyNameWithPronunciation.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	116, // 218: ddex.pie.v10.Pronunciation.encoding_type:type_name -> ddex.avs.EncodingType
	107, // 219: ddex.pie.v10.RelatedCreation.title:type_name -> ddex.pie.v10.TitleWithPronunciation
	98,  // 220: ddex.pie.v10.Release.release_title:type_name -> ddex.pie.v10.ReleaseTitle
	66,  // 221: ddex.pie.v10.Release.display_artist_name:type_name -> ddex.pie.v10.DisplayArtistNameWithPronunciation
	87,  // 222: ddex.pie.v10.Release.display_artist:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	55,  // 223: ddex.pie.v10.ReleaseId.catalog_number:type_name -> ddex.pie.v10.CatalogNumber
	93,  // 224: ddex.pie.v10.ReleaseId.proprietary_id:type_name -> ddex.pie.v10.ProprietaryId
	96,  // 225: ddex.pie.v10.ReleaseSummary.release_id:type_name -> ddex.pie.v10.ReleaseId
	68,  // 226: ddex.pie.v10.ReleaseSummary.display_title:type_name -> ddex.pie.v10.DisplayTitle
	66,  // 227: ddex.pie.v10.ReleaseSummary.display_artist_name:type_name -> ddex.pie.v10.DisplayArtistNameWithPronunciation
	87,  // 228: ddex.pie.v10.ReleaseSummary.display_artist:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	102, // 229: ddex.pie.v10.Resource.resource_title:type_name -> ddex.pie.v10.ResourceTitle
	66,  // 230: ddex.pie.v10.Resource.display_artist_name:type_name -> ddex.pie.v10.DisplayArtistNameWithPronunciation
	87,  // 231: ddex.pie.v10.Resource.display_artist:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	55,  // 232: ddex.pie.v10.ResourceIdWithoutFlag.catalog_number:type_name -> ddex.pie.v10.CatalogNumber
	93,  // 233: ddex.pie.v10.ResourceIdWithoutFlag.proprietary_id:type_name -> ddex.pie.v10.ProprietaryId
	100, // 234: ddex.pie.v10.ResourceSummary.resource_id:type_name -> ddex.pie.v10.ResourceIdWithoutFlag
	68,  // 235: ddex.pie.v10.ResourceSummary.display_title:type_name -> ddex.pie.v10.DisplayTitle
	66,  // 236: ddex.pie.v10.ResourceSummary.display_artist_name:type_name -> ddex.pie.v10.DisplayArtistNameWithPronunciation
	87,  // 237: ddex.pie.v10.ResourceSummary.display_artist:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	115, // 238: ddex.pie.v10.TextWithFormat.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	121, // 239: ddex.pie.v10.TextWithFormat.format:type_name -> ddex.avs.TextCodecType
	115, // 240: ddex.pie.v10.TextWithoutTerritory.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	121, // 241: ddex.pie.v10.TextWithoutTerritory.format:type_name -> ddex.avs.TextCodecType
	92,  // 242: ddex.pie.v10.TitleText.pronunciation:type_name -> ddex.pie.v10.Pronunciation
	106, // 243: ddex.pie.v10.TitleWithPronunciation.title_text:type_name -> ddex.pie.v10.TitleText
	106, // 244: ddex.pie.v10.TitleWithPronunciation.sub_title:type_name -> ddex.pie.v10.TitleText
	126, // 245: ddex.pie.v10.TitleWithPronunciation.title_type:type_name -> ddex.avs.TitleType
	103, // 246: ddex.pie.v10.TitleWithUDV.sub_title:type_name -> ddex.pie.v10.SubTitle
	126, // 247: ddex.pie.v10.TitleWithUDV.title_type:type_name -> ddex.avs.TitleType
	70,  // 248: ddex.pie.v10.ValidityPeriod.start_date:type_name -> ddex.pie.v10.EventDate
	70,  // 249: ddex.pie.v10.ValidityPeriod.end_date:type_name -> ddex.pie.v10.EventDate
	81,  // 250: ddex.pie.v10.VocalRegister.metadata_source_reference:type_name -> ddex.pie.v10.MetadataSourceReference
	111, // 251: ddex.pie.v10.VocalRegister.value:type_name -> ddex.pie.v10.VocalRegisterValue
	114, // 252: ddex.pie.v10.Work.work_title:type_name -> ddex.pie.v10.WorkTitle
	87,  // 253: ddex.pie.v10.Work.writer:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	83,  // 254: ddex.pie.v10.WorkSummary.musical_work_id:type_name -> ddex.pie.v10.MusicalWorkIdWithoutFlag
	107, // 255: ddex.pie.v10.WorkSummary.work_title:type_name -> ddex.pie.v10.TitleWithPronunciation
	87,  // 256: ddex.pie.v10.WorkSummary.writer:type_name -> ddex.pie.v10.PartyDescriptorWithPronunciation
	257, // [257:257] is the sub-list for method output_type
	257, // [257:257] is the sub-list for method input_type
	257, // [257:257] is the sub-list for extension type_name
	257, // [257:257] is the sub-list for extension extendee
	0,   // [0:257] is the sub-list for field type_name
}

func init() { file_ddex_pie_v10_v10_proto_init() }
func file_ddex_pie_v10_v10_proto_init() {
	if File_ddex_pie_v10_v10_proto != nil {
		return
	}
	file_ddex_pie_v10_v10_proto_msgTypes[2].OneofWrappers = []any{
		(*Feed_Author)(nil),
		(*Feed_Category)(nil),
		(*Feed_Contributor)(nil),
		(*Feed_Generator)(nil),
		(*Feed_Icon)(nil),
		(*Feed_Id)(nil),
		(*Feed_Link)(nil),
		(*Feed_Logo)(nil),
		(*Feed_Rights)(nil),
		(*Feed_Subtitle)(nil),
		(*Feed_Title)(nil),
		(*Feed_Updated)(nil),
		(*Feed_Entry)(nil),
	}
	file_ddex_pie_v10_v10_proto_msgTypes[6].OneofWrappers = []any{
		(*Entry_Author)(nil),
		(*Entry_Category)(nil),
		(*Entry_Content)(nil),
		(*Entry_Contributor)(nil),
		(*Entry_Id)(nil),
		(*Entry_Link)(nil),
		(*Entry_Published)(nil),
		(*Entry_Rights)(nil),
		(*Entry_Source)(nil),
		(*Entry_Summary)(nil),
		(*Entry_Title)(nil),
		(*Entry_Updated)(nil),
		(*Entry_SubscriptionId)(nil),
		(*Entry_Party)(nil),
	}
	file_ddex_pie_v10_v10_proto_msgTypes[44].OneofWrappers = []any{
		(*Person_Name)(nil),
		(*Person_Uri)(nil),
		(*Person_Email)(nil),
	}
	file_ddex_pie_v10_v10_proto_msgTypes[45].OneofWrappers = []any{
		(*Source_Author)(nil),
		(*Source_Category)(nil),
		(*Source_Contributor)(nil),
		(*Source_Generator)(nil),
		(*Source_Icon)(nil),
		(*Source_Id)(nil),
		(*Source_Link)(nil),
		(*Source_Logo)(nil),
		(*Source_Rights)(nil),
		(*Source_Subtitle)(nil),
		(*Source_Title)(nil),
		(*Source_Updated)(nil),
	}
	file_ddex_pie_v10_v10_proto_msgTypes[87].OneofWrappers = []any{
		(*PartyDescriptorWithPronunciation_PartyId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ddex_pie_v10_v10_proto_rawDesc), len(file_ddex_pie_v10_v10_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   115,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ddex_pie_v10_v10_proto_goTypes,
		DependencyIndexes: file_ddex_pie_v10_v10_proto_depIdxs,
		MessageInfos:      file_ddex_pie_v10_v10_proto_msgTypes,
	}.Build()
	File_ddex_pie_v10_v10_proto = out.File
	file_ddex_pie_v10_v10_proto_goTypes = nil
	file_ddex_pie_v10_v10_proto_depIdxs = nil
}
