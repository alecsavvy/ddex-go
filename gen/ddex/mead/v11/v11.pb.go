// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: ddex/mead/v11/v11.proto

package v11

import (
	_ "github.com/alecsavvy/ddex-go/gen/ddex/avs"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MeadMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageHeader"
	MessageHeader *MessageHeader `protobuf:"bytes,1,opt,name=message_header,json=messageHeader,proto3" json:"message_header,omitempty" xml:"MessageHeader"`
	// @gotags: xml:"SubscriptionId"
	SubscriptionId string `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty" xml:"SubscriptionId"`
	// @gotags: xml:"MetadataSourceList"
	MetadataSourceList *MetadataSourceList `protobuf:"bytes,3,opt,name=metadata_source_list,json=metadataSourceList,proto3" json:"metadata_source_list,omitempty" xml:"MetadataSourceList"`
	// @gotags: xml:"WorkInformationList"
	WorkInformationList *WorkInformationList `protobuf:"bytes,4,opt,name=work_information_list,json=workInformationList,proto3" json:"work_information_list,omitempty" xml:"WorkInformationList"`
	// @gotags: xml:"ResourceInformationList"
	ResourceInformationList *ResourceInformationList `protobuf:"bytes,5,opt,name=resource_information_list,json=resourceInformationList,proto3" json:"resource_information_list,omitempty" xml:"ResourceInformationList"`
	// @gotags: xml:"ReleaseInformationList"
	ReleaseInformationList *ReleaseInformationList `protobuf:"bytes,6,opt,name=release_information_list,json=releaseInformationList,proto3" json:"release_information_list,omitempty" xml:"ReleaseInformationList"`
	// @gotags: xml:"AvsVersionId,attr"
	AvsVersionId string `protobuf:"bytes,7,opt,name=avs_version_id,json=avsVersionId,proto3" json:"avs_version_id,omitempty" xml:"AvsVersionId,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,8,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *MeadMessage) Reset() {
	*x = MeadMessage{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeadMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeadMessage) ProtoMessage() {}

func (x *MeadMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeadMessage.ProtoReflect.Descriptor instead.
func (*MeadMessage) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{0}
}

func (x *MeadMessage) GetMessageHeader() *MessageHeader {
	if x != nil {
		return x.MessageHeader
	}
	return nil
}

func (x *MeadMessage) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *MeadMessage) GetMetadataSourceList() *MetadataSourceList {
	if x != nil {
		return x.MetadataSourceList
	}
	return nil
}

func (x *MeadMessage) GetWorkInformationList() *WorkInformationList {
	if x != nil {
		return x.WorkInformationList
	}
	return nil
}

func (x *MeadMessage) GetResourceInformationList() *ResourceInformationList {
	if x != nil {
		return x.ResourceInformationList
	}
	return nil
}

func (x *MeadMessage) GetReleaseInformationList() *ReleaseInformationList {
	if x != nil {
		return x.ReleaseInformationList
	}
	return nil
}

func (x *MeadMessage) GetAvsVersionId() string {
	if x != nil {
		return x.AvsVersionId
	}
	return ""
}

func (x *MeadMessage) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type Feed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Choice:
	//
	//	*Feed_Author
	//	*Feed_Category
	//	*Feed_Contributor
	//	*Feed_Generator
	//	*Feed_Icon
	//	*Feed_Id
	//	*Feed_Link
	//	*Feed_Logo
	//	*Feed_Rights
	//	*Feed_Subtitle
	//	*Feed_Title
	//	*Feed_Updated
	//	*Feed_Entry
	Choice        isFeed_Choice `protobuf_oneof:"choice"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Feed) Reset() {
	*x = Feed{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feed) ProtoMessage() {}

func (x *Feed) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feed.ProtoReflect.Descriptor instead.
func (*Feed) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{1}
}

func (x *Feed) GetChoice() isFeed_Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *Feed) GetAuthor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Author); ok {
			return x.Author
		}
	}
	return nil
}

func (x *Feed) GetCategory() *Category {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Category); ok {
			return x.Category
		}
	}
	return nil
}

func (x *Feed) GetContributor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Contributor); ok {
			return x.Contributor
		}
	}
	return nil
}

func (x *Feed) GetGenerator() *Generator {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Generator); ok {
			return x.Generator
		}
	}
	return nil
}

func (x *Feed) GetIcon() *Icon {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Icon); ok {
			return x.Icon
		}
	}
	return nil
}

func (x *Feed) GetId() *Id {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *Feed) GetLink() *Link {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Link); ok {
			return x.Link
		}
	}
	return nil
}

func (x *Feed) GetLogo() *Logo {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Logo); ok {
			return x.Logo
		}
	}
	return nil
}

func (x *Feed) GetRights() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Rights); ok {
			return x.Rights
		}
	}
	return nil
}

func (x *Feed) GetSubtitle() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Subtitle); ok {
			return x.Subtitle
		}
	}
	return nil
}

func (x *Feed) GetTitle() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Title); ok {
			return x.Title
		}
	}
	return nil
}

func (x *Feed) GetUpdated() *DateTime {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Updated); ok {
			return x.Updated
		}
	}
	return nil
}

func (x *Feed) GetEntry() *Entry {
	if x != nil {
		if x, ok := x.Choice.(*Feed_Entry); ok {
			return x.Entry
		}
	}
	return nil
}

type isFeed_Choice interface {
	isFeed_Choice()
}

type Feed_Author struct {
	// @gotags: xml:"author"
	Author *Person `protobuf:"bytes,1,opt,name=author,proto3,oneof" xml:"author"`
}

type Feed_Category struct {
	// @gotags: xml:"category"
	Category *Category `protobuf:"bytes,2,opt,name=category,proto3,oneof" xml:"category"`
}

type Feed_Contributor struct {
	// @gotags: xml:"contributor"
	Contributor *Person `protobuf:"bytes,3,opt,name=contributor,proto3,oneof" xml:"contributor"`
}

type Feed_Generator struct {
	// @gotags: xml:"generator"
	Generator *Generator `protobuf:"bytes,4,opt,name=generator,proto3,oneof" xml:"generator"`
}

type Feed_Icon struct {
	// @gotags: xml:"icon"
	Icon *Icon `protobuf:"bytes,5,opt,name=icon,proto3,oneof" xml:"icon"`
}

type Feed_Id struct {
	// @gotags: xml:"id"
	Id *Id `protobuf:"bytes,6,opt,name=id,proto3,oneof" xml:"id"`
}

type Feed_Link struct {
	// @gotags: xml:"link"
	Link *Link `protobuf:"bytes,7,opt,name=link,proto3,oneof" xml:"link"`
}

type Feed_Logo struct {
	// @gotags: xml:"logo"
	Logo *Logo `protobuf:"bytes,8,opt,name=logo,proto3,oneof" xml:"logo"`
}

type Feed_Rights struct {
	// @gotags: xml:"rights"
	Rights *Text `protobuf:"bytes,9,opt,name=rights,proto3,oneof" xml:"rights"`
}

type Feed_Subtitle struct {
	// @gotags: xml:"subtitle"
	Subtitle *Text `protobuf:"bytes,10,opt,name=subtitle,proto3,oneof" xml:"subtitle"`
}

type Feed_Title struct {
	// @gotags: xml:"title"
	Title *Text `protobuf:"bytes,11,opt,name=title,proto3,oneof" xml:"title"`
}

type Feed_Updated struct {
	// @gotags: xml:"updated"
	Updated *DateTime `protobuf:"bytes,12,opt,name=updated,proto3,oneof" xml:"updated"`
}

type Feed_Entry struct {
	// @gotags: xml:"entry"
	Entry *Entry `protobuf:"bytes,13,opt,name=entry,proto3,oneof" xml:"entry"`
}

func (*Feed_Author) isFeed_Choice() {}

func (*Feed_Category) isFeed_Choice() {}

func (*Feed_Contributor) isFeed_Choice() {}

func (*Feed_Generator) isFeed_Choice() {}

func (*Feed_Icon) isFeed_Choice() {}

func (*Feed_Id) isFeed_Choice() {}

func (*Feed_Link) isFeed_Choice() {}

func (*Feed_Logo) isFeed_Choice() {}

func (*Feed_Rights) isFeed_Choice() {}

func (*Feed_Subtitle) isFeed_Choice() {}

func (*Feed_Title) isFeed_Choice() {}

func (*Feed_Updated) isFeed_Choice() {}

func (*Feed_Entry) isFeed_Choice() {}

type AbsolutePitch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Modulation"
	Modulation    []*Modulation `protobuf:"bytes,3,rep,name=modulation,proto3" json:"modulation,omitempty" xml:"Modulation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AbsolutePitch) Reset() {
	*x = AbsolutePitch{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AbsolutePitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbsolutePitch) ProtoMessage() {}

func (x *AbsolutePitch) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbsolutePitch.ProtoReflect.Descriptor instead.
func (*AbsolutePitch) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{2}
}

func (x *AbsolutePitch) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *AbsolutePitch) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AbsolutePitch) GetModulation() []*Modulation {
	if x != nil {
		return x.Modulation
	}
	return nil
}

type Activity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value *ActivityValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Description"
	Description []*TextWithoutTerritory `protobuf:"bytes,3,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"LanguageAndScriptOfActivity"
	LanguageAndScriptOfActivity []string `protobuf:"bytes,4,rep,name=language_and_script_of_activity,json=languageAndScriptOfActivity,proto3" json:"language_and_script_of_activity,omitempty" xml:"LanguageAndScriptOfActivity"`
	// @gotags: xml:"TerritoryOfActivityDescription"
	TerritoryOfActivityDescription []string `protobuf:"bytes,5,rep,name=territory_of_activity_description,json=territoryOfActivityDescription,proto3" json:"territory_of_activity_description,omitempty" xml:"TerritoryOfActivityDescription"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *Activity) Reset() {
	*x = Activity{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{3}
}

func (x *Activity) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Activity) GetValue() *ActivityValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Activity) GetDescription() []*TextWithoutTerritory {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Activity) GetLanguageAndScriptOfActivity() []string {
	if x != nil {
		return x.LanguageAndScriptOfActivity
	}
	return nil
}

func (x *Activity) GetTerritoryOfActivityDescription() []string {
	if x != nil {
		return x.TerritoryOfActivityDescription
	}
	return nil
}

type ActivityValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ActivityValue) Reset() {
	*x = ActivityValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivityValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityValue) ProtoMessage() {}

func (x *ActivityValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityValue.ProtoReflect.Descriptor instead.
func (*ActivityValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{4}
}

func (x *ActivityValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ActivityValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ActivityValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type AlternativeTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"TitleText"
	TitleText *TitleText `protobuf:"bytes,2,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty" xml:"TitleText"`
	// @gotags: xml:"SubTitle"
	SubTitle *TitleText `protobuf:"bytes,3,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty" xml:"SubTitle"`
	// @gotags: xml:"LanguageAndScriptOfTitle"
	LanguageAndScriptOfTitle []string `protobuf:"bytes,4,rep,name=language_and_script_of_title,json=languageAndScriptOfTitle,proto3" json:"language_and_script_of_title,omitempty" xml:"LanguageAndScriptOfTitle"`
	// @gotags: xml:"TitleType,attr"
	TitleType string `protobuf:"bytes,5,opt,name=title_type,json=titleType,proto3" json:"title_type,omitempty" xml:"TitleType,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,7,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AlternativeTitle) Reset() {
	*x = AlternativeTitle{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlternativeTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlternativeTitle) ProtoMessage() {}

func (x *AlternativeTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlternativeTitle.ProtoReflect.Descriptor instead.
func (*AlternativeTitle) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{5}
}

func (x *AlternativeTitle) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *AlternativeTitle) GetTitleText() *TitleText {
	if x != nil {
		return x.TitleText
	}
	return nil
}

func (x *AlternativeTitle) GetSubTitle() *TitleText {
	if x != nil {
		return x.SubTitle
	}
	return nil
}

func (x *AlternativeTitle) GetLanguageAndScriptOfTitle() []string {
	if x != nil {
		return x.LanguageAndScriptOfTitle
	}
	return nil
}

func (x *AlternativeTitle) GetTitleType() string {
	if x != nil {
		return x.TitleType
	}
	return ""
}

func (x *AlternativeTitle) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AlternativeTitle) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Annotation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Text"
	Text          *TextWithFormat `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty" xml:"Text"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Annotation) Reset() {
	*x = Annotation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Annotation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Annotation) ProtoMessage() {}

func (x *Annotation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Annotation.ProtoReflect.Descriptor instead.
func (*Annotation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{6}
}

func (x *Annotation) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Annotation) GetText() *TextWithFormat {
	if x != nil {
		return x.Text
	}
	return nil
}

type ArtisticStyle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value *ArtistTypeValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"TerritoryOfArtisticStyleDescription"
	TerritoryOfArtisticStyleDescription []string `protobuf:"bytes,3,rep,name=territory_of_artistic_style_description,json=territoryOfArtisticStyleDescription,proto3" json:"territory_of_artistic_style_description,omitempty" xml:"TerritoryOfArtisticStyleDescription"`
	unknownFields                       protoimpl.UnknownFields
	sizeCache                           protoimpl.SizeCache
}

func (x *ArtisticStyle) Reset() {
	*x = ArtisticStyle{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtisticStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtisticStyle) ProtoMessage() {}

func (x *ArtisticStyle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtisticStyle.ProtoReflect.Descriptor instead.
func (*ArtisticStyle) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{7}
}

func (x *ArtisticStyle) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *ArtisticStyle) GetValue() *ArtistTypeValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ArtisticStyle) GetTerritoryOfArtisticStyleDescription() []string {
	if x != nil {
		return x.TerritoryOfArtisticStyleDescription
	}
	return nil
}

type BeatsPerMinute struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Modulation"
	Modulation    []*Modulation `protobuf:"bytes,3,rep,name=modulation,proto3" json:"modulation,omitempty" xml:"Modulation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BeatsPerMinute) Reset() {
	*x = BeatsPerMinute{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BeatsPerMinute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeatsPerMinute) ProtoMessage() {}

func (x *BeatsPerMinute) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeatsPerMinute.ProtoReflect.Descriptor instead.
func (*BeatsPerMinute) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{8}
}

func (x *BeatsPerMinute) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *BeatsPerMinute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *BeatsPerMinute) GetModulation() []*Modulation {
	if x != nil {
		return x.Modulation
	}
	return nil
}

type ChildWorkHierarchy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"IsDescribedElement"
	IsDescribedElement bool `protobuf:"varint,1,opt,name=is_described_element,json=isDescribedElement,proto3" json:"is_described_element,omitempty" xml:"IsDescribedElement"`
	// @gotags: xml:"IsComplete"
	IsComplete bool `protobuf:"varint,2,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty" xml:"IsComplete"`
	// @gotags: xml:"SequenceNumber"
	SequenceNumber int32 `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber"`
	// @gotags: xml:"WorkId"
	WorkId *MusicalWorkIdWithoutFlag `protobuf:"bytes,4,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty" xml:"WorkId"`
	// @gotags: xml:"WorkTitle"
	WorkTitle []*WorkTitle `protobuf:"bytes,5,rep,name=work_title,json=workTitle,proto3" json:"work_title,omitempty" xml:"WorkTitle"`
	// @gotags: xml:"Child"
	Child []*ChildWorkHierarchy `protobuf:"bytes,6,rep,name=child,proto3" json:"child,omitempty" xml:"Child"`
	// @gotags: xml:"Form"
	Form          *Form `protobuf:"bytes,7,opt,name=form,proto3" json:"form,omitempty" xml:"Form"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChildWorkHierarchy) Reset() {
	*x = ChildWorkHierarchy{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChildWorkHierarchy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildWorkHierarchy) ProtoMessage() {}

func (x *ChildWorkHierarchy) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildWorkHierarchy.ProtoReflect.Descriptor instead.
func (*ChildWorkHierarchy) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{9}
}

func (x *ChildWorkHierarchy) GetIsDescribedElement() bool {
	if x != nil {
		return x.IsDescribedElement
	}
	return false
}

func (x *ChildWorkHierarchy) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

func (x *ChildWorkHierarchy) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ChildWorkHierarchy) GetWorkId() *MusicalWorkIdWithoutFlag {
	if x != nil {
		return x.WorkId
	}
	return nil
}

func (x *ChildWorkHierarchy) GetWorkTitle() []*WorkTitle {
	if x != nil {
		return x.WorkTitle
	}
	return nil
}

func (x *ChildWorkHierarchy) GetChild() []*ChildWorkHierarchy {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *ChildWorkHierarchy) GetForm() *Form {
	if x != nil {
		return x.Form
	}
	return nil
}

type Contributor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Identifier"
	Identifier *DetailedPartyId `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty" xml:"Identifier"`
	// @gotags: xml:"Name"
	Name *PartyNameWithPronunciation `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" xml:"Name"`
	// @gotags: xml:"Role"
	Role          []*ResourceContributorRole `protobuf:"bytes,3,rep,name=role,proto3" json:"role,omitempty" xml:"Role"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Contributor) Reset() {
	*x = Contributor{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contributor) ProtoMessage() {}

func (x *Contributor) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contributor.ProtoReflect.Descriptor instead.
func (*Contributor) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{10}
}

func (x *Contributor) GetIdentifier() *DetailedPartyId {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *Contributor) GetName() *PartyNameWithPronunciation {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Contributor) GetRole() []*ResourceContributorRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type DanceStyle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value *DanceStyleValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Description"
	Description []*TextWithoutTerritory `protobuf:"bytes,3,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"LanguageAndScriptOfDanceStyle"
	LanguageAndScriptOfDanceStyle []string `protobuf:"bytes,4,rep,name=language_and_script_of_dance_style,json=languageAndScriptOfDanceStyle,proto3" json:"language_and_script_of_dance_style,omitempty" xml:"LanguageAndScriptOfDanceStyle"`
	// @gotags: xml:"TerritoryOfDanceStyleDescription"
	TerritoryOfDanceStyleDescription []string `protobuf:"bytes,5,rep,name=territory_of_dance_style_description,json=territoryOfDanceStyleDescription,proto3" json:"territory_of_dance_style_description,omitempty" xml:"TerritoryOfDanceStyleDescription"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *DanceStyle) Reset() {
	*x = DanceStyle{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DanceStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DanceStyle) ProtoMessage() {}

func (x *DanceStyle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DanceStyle.ProtoReflect.Descriptor instead.
func (*DanceStyle) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{11}
}

func (x *DanceStyle) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *DanceStyle) GetValue() *DanceStyleValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *DanceStyle) GetDescription() []*TextWithoutTerritory {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *DanceStyle) GetLanguageAndScriptOfDanceStyle() []string {
	if x != nil {
		return x.LanguageAndScriptOfDanceStyle
	}
	return nil
}

func (x *DanceStyle) GetTerritoryOfDanceStyleDescription() []string {
	if x != nil {
		return x.TerritoryOfDanceStyleDescription
	}
	return nil
}

type DanceStyleValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DanceStyleValue) Reset() {
	*x = DanceStyleValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DanceStyleValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DanceStyleValue) ProtoMessage() {}

func (x *DanceStyleValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DanceStyleValue.ProtoReflect.Descriptor instead.
func (*DanceStyleValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{12}
}

func (x *DanceStyleValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DanceStyleValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DanceStyleValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type DerivedRecording struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"ResourceId"
	ResourceId *ResourceIdWithoutFlag `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"RelatedResourceType"
	RelatedResourceType *RelatedResourceType `protobuf:"bytes,3,opt,name=related_resource_type,json=relatedResourceType,proto3" json:"related_resource_type,omitempty" xml:"RelatedResourceType"`
	// @gotags: xml:"Title"
	Title []*TitleWithPronunciation `protobuf:"bytes,4,rep,name=title,proto3" json:"title,omitempty" xml:"Title"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName *DisplayArtistNameWithPronunciation `protobuf:"bytes,5,opt,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,6,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DerivedRecording) Reset() {
	*x = DerivedRecording{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DerivedRecording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivedRecording) ProtoMessage() {}

func (x *DerivedRecording) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivedRecording.ProtoReflect.Descriptor instead.
func (*DerivedRecording) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{13}
}

func (x *DerivedRecording) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *DerivedRecording) GetResourceId() *ResourceIdWithoutFlag {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *DerivedRecording) GetRelatedResourceType() *RelatedResourceType {
	if x != nil {
		return x.RelatedResourceType
	}
	return nil
}

func (x *DerivedRecording) GetTitle() []*TitleWithPronunciation {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *DerivedRecording) GetDisplayArtistName() *DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *DerivedRecording) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type DisplaySubTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Title"
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty" xml:"Title"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*Pronunciation `protobuf:"bytes,2,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	// @gotags: xml:"IsDisplayedInTitle,attr"
	IsDisplayedInTitle bool `protobuf:"varint,4,opt,name=is_displayed_in_title,json=isDisplayedInTitle,proto3" json:"is_displayed_in_title,omitempty" xml:"IsDisplayedInTitle,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,6,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	// @gotags: xml:"SubTitleType,attr"
	SubTitleType  string `protobuf:"bytes,7,opt,name=sub_title_type,json=subTitleType,proto3" json:"sub_title_type,omitempty" xml:"SubTitleType,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplaySubTitle) Reset() {
	*x = DisplaySubTitle{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplaySubTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplaySubTitle) ProtoMessage() {}

func (x *DisplaySubTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplaySubTitle.ProtoReflect.Descriptor instead.
func (*DisplaySubTitle) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{14}
}

func (x *DisplaySubTitle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DisplaySubTitle) GetPronunciation() []*Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

func (x *DisplaySubTitle) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *DisplaySubTitle) GetIsDisplayedInTitle() bool {
	if x != nil {
		return x.IsDisplayedInTitle
	}
	return false
}

func (x *DisplaySubTitle) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DisplaySubTitle) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

func (x *DisplaySubTitle) GetSubTitleType() string {
	if x != nil {
		return x.SubTitleType
	}
	return ""
}

type DisplayTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TitleText"
	TitleText *TitleText `protobuf:"bytes,1,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty" xml:"TitleText"`
	// @gotags: xml:"SubTitle"
	SubTitle []*DisplaySubTitle `protobuf:"bytes,2,rep,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty" xml:"SubTitle"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,3,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode string `protobuf:"bytes,4,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayTitle) Reset() {
	*x = DisplayTitle{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayTitle) ProtoMessage() {}

func (x *DisplayTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayTitle.ProtoReflect.Descriptor instead.
func (*DisplayTitle) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{15}
}

func (x *DisplayTitle) GetTitleText() *TitleText {
	if x != nil {
		return x.TitleText
	}
	return nil
}

func (x *DisplayTitle) GetSubTitle() []*DisplaySubTitle {
	if x != nil {
		return x.SubTitle
	}
	return nil
}

func (x *DisplayTitle) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DisplayTitle) GetApplicableTerritoryCode() string {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return ""
}

func (x *DisplayTitle) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type Entry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Choice:
	//
	//	*Entry_Author
	//	*Entry_Category
	//	*Entry_Content
	//	*Entry_Contributor
	//	*Entry_Id
	//	*Entry_Link
	//	*Entry_Published
	//	*Entry_Rights
	//	*Entry_Source
	//	*Entry_Summary
	//	*Entry_Title
	//	*Entry_Updated
	//	*Entry_SubscriptionId
	Choice isEntry_Choice `protobuf_oneof:"choice"`
	// @gotags: xml:"AvsVersionId,attr"
	AvsVersionId  string `protobuf:"bytes,14,opt,name=avs_version_id,json=avsVersionId,proto3" json:"avs_version_id,omitempty" xml:"AvsVersionId,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entry) Reset() {
	*x = Entry{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{16}
}

func (x *Entry) GetChoice() isEntry_Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *Entry) GetAuthor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Author); ok {
			return x.Author
		}
	}
	return nil
}

func (x *Entry) GetCategory() *Category {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Category); ok {
			return x.Category
		}
	}
	return nil
}

func (x *Entry) GetContent() *Content {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Content); ok {
			return x.Content
		}
	}
	return nil
}

func (x *Entry) GetContributor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Contributor); ok {
			return x.Contributor
		}
	}
	return nil
}

func (x *Entry) GetId() *Id {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *Entry) GetLink() *Link {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Link); ok {
			return x.Link
		}
	}
	return nil
}

func (x *Entry) GetPublished() *DateTime {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Published); ok {
			return x.Published
		}
	}
	return nil
}

func (x *Entry) GetRights() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Rights); ok {
			return x.Rights
		}
	}
	return nil
}

func (x *Entry) GetSource() *Source {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Source); ok {
			return x.Source
		}
	}
	return nil
}

func (x *Entry) GetSummary() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Summary); ok {
			return x.Summary
		}
	}
	return nil
}

func (x *Entry) GetTitle() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Title); ok {
			return x.Title
		}
	}
	return nil
}

func (x *Entry) GetUpdated() *DateTime {
	if x != nil {
		if x, ok := x.Choice.(*Entry_Updated); ok {
			return x.Updated
		}
	}
	return nil
}

func (x *Entry) GetSubscriptionId() string {
	if x != nil {
		if x, ok := x.Choice.(*Entry_SubscriptionId); ok {
			return x.SubscriptionId
		}
	}
	return ""
}

func (x *Entry) GetAvsVersionId() string {
	if x != nil {
		return x.AvsVersionId
	}
	return ""
}

type isEntry_Choice interface {
	isEntry_Choice()
}

type Entry_Author struct {
	// @gotags: xml:"author"
	Author *Person `protobuf:"bytes,1,opt,name=author,proto3,oneof" xml:"author"`
}

type Entry_Category struct {
	// @gotags: xml:"category"
	Category *Category `protobuf:"bytes,2,opt,name=category,proto3,oneof" xml:"category"`
}

type Entry_Content struct {
	// @gotags: xml:"content"
	Content *Content `protobuf:"bytes,3,opt,name=content,proto3,oneof" xml:"content"`
}

type Entry_Contributor struct {
	// @gotags: xml:"contributor"
	Contributor *Person `protobuf:"bytes,4,opt,name=contributor,proto3,oneof" xml:"contributor"`
}

type Entry_Id struct {
	// @gotags: xml:"id"
	Id *Id `protobuf:"bytes,5,opt,name=id,proto3,oneof" xml:"id"`
}

type Entry_Link struct {
	// @gotags: xml:"link"
	Link *Link `protobuf:"bytes,6,opt,name=link,proto3,oneof" xml:"link"`
}

type Entry_Published struct {
	// @gotags: xml:"published"
	Published *DateTime `protobuf:"bytes,7,opt,name=published,proto3,oneof" xml:"published"`
}

type Entry_Rights struct {
	// @gotags: xml:"rights"
	Rights *Text `protobuf:"bytes,8,opt,name=rights,proto3,oneof" xml:"rights"`
}

type Entry_Source struct {
	// @gotags: xml:"source"
	Source *Source `protobuf:"bytes,9,opt,name=source,proto3,oneof" xml:"source"`
}

type Entry_Summary struct {
	// @gotags: xml:"summary"
	Summary *Text `protobuf:"bytes,10,opt,name=summary,proto3,oneof" xml:"summary"`
}

type Entry_Title struct {
	// @gotags: xml:"title"
	Title *Text `protobuf:"bytes,11,opt,name=title,proto3,oneof" xml:"title"`
}

type Entry_Updated struct {
	// @gotags: xml:"updated"
	Updated *DateTime `protobuf:"bytes,12,opt,name=updated,proto3,oneof" xml:"updated"`
}

type Entry_SubscriptionId struct {
	// @gotags: xml:"SubscriptionId"
	SubscriptionId string `protobuf:"bytes,13,opt,name=subscription_id,json=subscriptionId,proto3,oneof" xml:"SubscriptionId"`
}

func (*Entry_Author) isEntry_Choice() {}

func (*Entry_Category) isEntry_Choice() {}

func (*Entry_Content) isEntry_Choice() {}

func (*Entry_Contributor) isEntry_Choice() {}

func (*Entry_Id) isEntry_Choice() {}

func (*Entry_Link) isEntry_Choice() {}

func (*Entry_Published) isEntry_Choice() {}

func (*Entry_Rights) isEntry_Choice() {}

func (*Entry_Source) isEntry_Choice() {}

func (*Entry_Summary) isEntry_Choice() {}

func (*Entry_Title) isEntry_Choice() {}

func (*Entry_Updated) isEntry_Choice() {}

func (*Entry_SubscriptionId) isEntry_Choice() {}

type Flag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value         bool `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Flag) Reset() {
	*x = Flag{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Flag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flag) ProtoMessage() {}

func (x *Flag) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flag.ProtoReflect.Descriptor instead.
func (*Flag) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{17}
}

func (x *Flag) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Flag) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type Form struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value         *FormValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Form) Reset() {
	*x = Form{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Form) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Form) ProtoMessage() {}

func (x *Form) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Form.ProtoReflect.Descriptor instead.
func (*Form) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{18}
}

func (x *Form) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Form) GetValue() *FormValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type FormValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FormValue) Reset() {
	*x = FormValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormValue) ProtoMessage() {}

func (x *FormValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormValue.ProtoReflect.Descriptor instead.
func (*FormValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{19}
}

func (x *FormValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FormValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FormValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type GenreCategory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"TerritoryOfGenreCategoryDescription"
	TerritoryOfGenreCategoryDescription []string `protobuf:"bytes,2,rep,name=territory_of_genre_category_description,json=territoryOfGenreCategoryDescription,proto3" json:"territory_of_genre_category_description,omitempty" xml:"TerritoryOfGenreCategoryDescription"`
	// @gotags: xml:"Value"
	Value *GenreCategoryValue `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Description"
	Description   []*TextWithoutTerritory `protobuf:"bytes,4,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenreCategory) Reset() {
	*x = GenreCategory{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenreCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenreCategory) ProtoMessage() {}

func (x *GenreCategory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenreCategory.ProtoReflect.Descriptor instead.
func (*GenreCategory) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{20}
}

func (x *GenreCategory) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *GenreCategory) GetTerritoryOfGenreCategoryDescription() []string {
	if x != nil {
		return x.TerritoryOfGenreCategoryDescription
	}
	return nil
}

func (x *GenreCategory) GetValue() *GenreCategoryValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GenreCategory) GetDescription() []*TextWithoutTerritory {
	if x != nil {
		return x.Description
	}
	return nil
}

type Harmony struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"RootChordNote"
	RootChordNote *RootChordNote `protobuf:"bytes,2,opt,name=root_chord_note,json=rootChordNote,proto3" json:"root_chord_note,omitempty" xml:"RootChordNote"`
	// @gotags: xml:"RootChordQuality"
	RootChordQuality *RootChordQuality `protobuf:"bytes,3,opt,name=root_chord_quality,json=rootChordQuality,proto3" json:"root_chord_quality,omitempty" xml:"RootChordQuality"`
	// @gotags: xml:"Mode"
	Mode *Mode `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty" xml:"Mode"`
	// @gotags: xml:"Modulation"
	Modulation    []*HarmonyModulation `protobuf:"bytes,5,rep,name=modulation,proto3" json:"modulation,omitempty" xml:"Modulation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Harmony) Reset() {
	*x = Harmony{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Harmony) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Harmony) ProtoMessage() {}

func (x *Harmony) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Harmony.ProtoReflect.Descriptor instead.
func (*Harmony) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{21}
}

func (x *Harmony) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Harmony) GetRootChordNote() *RootChordNote {
	if x != nil {
		return x.RootChordNote
	}
	return nil
}

func (x *Harmony) GetRootChordQuality() *RootChordQuality {
	if x != nil {
		return x.RootChordQuality
	}
	return nil
}

func (x *Harmony) GetMode() *Mode {
	if x != nil {
		return x.Mode
	}
	return nil
}

func (x *Harmony) GetModulation() []*HarmonyModulation {
	if x != nil {
		return x.Modulation
	}
	return nil
}

type HarmonyModulation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"RootChordNote"
	RootChordNote *RootChordNote `protobuf:"bytes,1,opt,name=root_chord_note,json=rootChordNote,proto3" json:"root_chord_note,omitempty" xml:"RootChordNote"`
	// @gotags: xml:"RootChordQuality"
	RootChordQuality *RootChordQuality `protobuf:"bytes,2,opt,name=root_chord_quality,json=rootChordQuality,proto3" json:"root_chord_quality,omitempty" xml:"RootChordQuality"`
	// @gotags: xml:"Mode"
	Mode          *Mode `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty" xml:"Mode"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HarmonyModulation) Reset() {
	*x = HarmonyModulation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HarmonyModulation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HarmonyModulation) ProtoMessage() {}

func (x *HarmonyModulation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HarmonyModulation.ProtoReflect.Descriptor instead.
func (*HarmonyModulation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{22}
}

func (x *HarmonyModulation) GetRootChordNote() *RootChordNote {
	if x != nil {
		return x.RootChordNote
	}
	return nil
}

func (x *HarmonyModulation) GetRootChordQuality() *RootChordQuality {
	if x != nil {
		return x.RootChordQuality
	}
	return nil
}

func (x *HarmonyModulation) GetMode() *Mode {
	if x != nil {
		return x.Mode
	}
	return nil
}

type ImpactDate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Date"
	Date string `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty" xml:"Date"`
	// @gotags: xml:"TerritoryCode"
	TerritoryCode []*CurrentTerritoryCode `protobuf:"bytes,2,rep,name=territory_code,json=territoryCode,proto3" json:"territory_code,omitempty" xml:"TerritoryCode"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImpactDate) Reset() {
	*x = ImpactDate{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImpactDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImpactDate) ProtoMessage() {}

func (x *ImpactDate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImpactDate.ProtoReflect.Descriptor instead.
func (*ImpactDate) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{23}
}

func (x *ImpactDate) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ImpactDate) GetTerritoryCode() []*CurrentTerritoryCode {
	if x != nil {
		return x.TerritoryCode
	}
	return nil
}

type Instrument struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value         *InstrumentValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Instrument) Reset() {
	*x = Instrument{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instrument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instrument) ProtoMessage() {}

func (x *Instrument) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instrument.ProtoReflect.Descriptor instead.
func (*Instrument) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{24}
}

func (x *Instrument) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Instrument) GetValue() *InstrumentValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type InstrumentUsed struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value *InstrumentValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"IsFeatured,attr"
	IsFeatured    bool `protobuf:"varint,3,opt,name=is_featured,json=isFeatured,proto3" json:"is_featured,omitempty" xml:"IsFeatured,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstrumentUsed) Reset() {
	*x = InstrumentUsed{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstrumentUsed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentUsed) ProtoMessage() {}

func (x *InstrumentUsed) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentUsed.ProtoReflect.Descriptor instead.
func (*InstrumentUsed) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{25}
}

func (x *InstrumentUsed) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *InstrumentUsed) GetValue() *InstrumentValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *InstrumentUsed) GetIsFeatured() bool {
	if x != nil {
		return x.IsFeatured
	}
	return false
}

type InstrumentValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InstrumentValue) Reset() {
	*x = InstrumentValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstrumentValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentValue) ProtoMessage() {}

func (x *InstrumentValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentValue.ProtoReflect.Descriptor instead.
func (*InstrumentValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{26}
}

func (x *InstrumentValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *InstrumentValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *InstrumentValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Intensity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value         *IntensityValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Intensity) Reset() {
	*x = Intensity{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Intensity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Intensity) ProtoMessage() {}

func (x *Intensity) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Intensity.ProtoReflect.Descriptor instead.
func (*Intensity) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{27}
}

func (x *Intensity) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Intensity) GetValue() *IntensityValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type IntensityValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IntensityValue) Reset() {
	*x = IntensityValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntensityValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntensityValue) ProtoMessage() {}

func (x *IntensityValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntensityValue.ProtoReflect.Descriptor instead.
func (*IntensityValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{28}
}

func (x *IntensityValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *IntensityValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *IntensityValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type LocationAndDateOfSession struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"SessionType"
	SessionType []*SessionType `protobuf:"bytes,2,rep,name=session_type,json=sessionType,proto3" json:"session_type,omitempty" xml:"SessionType"`
	// @gotags: xml:"Period"
	Period *Period `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty" xml:"Period"`
	// @gotags: xml:"Venue"
	Venue []*Venue `protobuf:"bytes,4,rep,name=venue,proto3" json:"venue,omitempty" xml:"Venue"`
	// @gotags: xml:"Comment"
	Comment *TextWithFormat `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty" xml:"Comment"`
	// @gotags: xml:"Contributor"
	Contributor   []*Contributor `protobuf:"bytes,6,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationAndDateOfSession) Reset() {
	*x = LocationAndDateOfSession{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationAndDateOfSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationAndDateOfSession) ProtoMessage() {}

func (x *LocationAndDateOfSession) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationAndDateOfSession.ProtoReflect.Descriptor instead.
func (*LocationAndDateOfSession) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{29}
}

func (x *LocationAndDateOfSession) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *LocationAndDateOfSession) GetSessionType() []*SessionType {
	if x != nil {
		return x.SessionType
	}
	return nil
}

func (x *LocationAndDateOfSession) GetPeriod() *Period {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *LocationAndDateOfSession) GetVenue() []*Venue {
	if x != nil {
		return x.Venue
	}
	return nil
}

func (x *LocationAndDateOfSession) GetComment() *TextWithFormat {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *LocationAndDateOfSession) GetContributor() []*Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

type Lyrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Text"
	Text *LyricsText `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty" xml:"Text"`
	// @gotags: xml:"LanguageAndScriptOfLyrics"
	LanguageAndScriptOfLyrics []string `protobuf:"bytes,3,rep,name=language_and_script_of_lyrics,json=languageAndScriptOfLyrics,proto3" json:"language_and_script_of_lyrics,omitempty" xml:"LanguageAndScriptOfLyrics"`
	// @gotags: xml:"TerritoryOfLyricsDescription"
	TerritoryOfLyricsDescription []string `protobuf:"bytes,4,rep,name=territory_of_lyrics_description,json=territoryOfLyricsDescription,proto3" json:"territory_of_lyrics_description,omitempty" xml:"TerritoryOfLyricsDescription"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*Pronunciation `protobuf:"bytes,5,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	// @gotags: xml:"LyricsType,attr"
	LyricsType string `protobuf:"bytes,7,opt,name=lyrics_type,json=lyricsType,proto3" json:"lyrics_type,omitempty" xml:"LyricsType,attr"`
	// @gotags: xml:"LyricsTypeNamespace,attr"
	LyricsTypeNamespace string `protobuf:"bytes,8,opt,name=lyrics_type_namespace,json=lyricsTypeNamespace,proto3" json:"lyrics_type_namespace,omitempty" xml:"LyricsTypeNamespace,attr"`
	// @gotags: xml:"LyricsTypeUserDefinedValue,attr"
	LyricsTypeUserDefinedValue string `protobuf:"bytes,9,opt,name=lyrics_type_user_defined_value,json=lyricsTypeUserDefinedValue,proto3" json:"lyrics_type_user_defined_value,omitempty" xml:"LyricsTypeUserDefinedValue,attr"`
	// @gotags: xml:"IsMisquoted,attr"
	IsMisquoted   bool `protobuf:"varint,10,opt,name=is_misquoted,json=isMisquoted,proto3" json:"is_misquoted,omitempty" xml:"IsMisquoted,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Lyrics) Reset() {
	*x = Lyrics{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lyrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lyrics) ProtoMessage() {}

func (x *Lyrics) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lyrics.ProtoReflect.Descriptor instead.
func (*Lyrics) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{30}
}

func (x *Lyrics) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Lyrics) GetText() *LyricsText {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *Lyrics) GetLanguageAndScriptOfLyrics() []string {
	if x != nil {
		return x.LanguageAndScriptOfLyrics
	}
	return nil
}

func (x *Lyrics) GetTerritoryOfLyricsDescription() []string {
	if x != nil {
		return x.TerritoryOfLyricsDescription
	}
	return nil
}

func (x *Lyrics) GetPronunciation() []*Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

func (x *Lyrics) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *Lyrics) GetLyricsType() string {
	if x != nil {
		return x.LyricsType
	}
	return ""
}

func (x *Lyrics) GetLyricsTypeNamespace() string {
	if x != nil {
		return x.LyricsTypeNamespace
	}
	return ""
}

func (x *Lyrics) GetLyricsTypeUserDefinedValue() string {
	if x != nil {
		return x.LyricsTypeUserDefinedValue
	}
	return ""
}

func (x *Lyrics) GetIsMisquoted() bool {
	if x != nil {
		return x.IsMisquoted
	}
	return false
}

type LyricsText struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Format,attr"
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty" xml:"Format,attr"`
	// @gotags: xml:"FormatNamespace,attr"
	FormatNamespace string `protobuf:"bytes,3,opt,name=format_namespace,json=formatNamespace,proto3" json:"format_namespace,omitempty" xml:"FormatNamespace,attr"`
	// @gotags: xml:"FormatUserDefinedValue,attr"
	FormatUserDefinedValue string `protobuf:"bytes,4,opt,name=format_user_defined_value,json=formatUserDefinedValue,proto3" json:"format_user_defined_value,omitempty" xml:"FormatUserDefinedValue,attr"`
	// @gotags: xml:"IsComplete,attr"
	IsComplete    bool `protobuf:"varint,5,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty" xml:"IsComplete,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LyricsText) Reset() {
	*x = LyricsText{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LyricsText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LyricsText) ProtoMessage() {}

func (x *LyricsText) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LyricsText.ProtoReflect.Descriptor instead.
func (*LyricsText) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{31}
}

func (x *LyricsText) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LyricsText) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *LyricsText) GetFormatNamespace() string {
	if x != nil {
		return x.FormatNamespace
	}
	return ""
}

func (x *LyricsText) GetFormatUserDefinedValue() string {
	if x != nil {
		return x.FormatUserDefinedValue
	}
	return ""
}

func (x *LyricsText) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

type Meter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"NumberOfBeatsInBar"
	NumberOfBeatsInBar int32 `protobuf:"varint,1,opt,name=number_of_beats_in_bar,json=numberOfBeatsInBar,proto3" json:"number_of_beats_in_bar,omitempty" xml:"NumberOfBeatsInBar"`
	// @gotags: xml:"NoteEquivalentToBeat"
	NoteEquivalentToBeat int32 `protobuf:"varint,2,opt,name=note_equivalent_to_beat,json=noteEquivalentToBeat,proto3" json:"note_equivalent_to_beat,omitempty" xml:"NoteEquivalentToBeat"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Meter) Reset() {
	*x = Meter{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Meter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meter) ProtoMessage() {}

func (x *Meter) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meter.ProtoReflect.Descriptor instead.
func (*Meter) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{32}
}

func (x *Meter) GetNumberOfBeatsInBar() int32 {
	if x != nil {
		return x.NumberOfBeatsInBar
	}
	return 0
}

func (x *Meter) GetNoteEquivalentToBeat() int32 {
	if x != nil {
		return x.NoteEquivalentToBeat
	}
	return 0
}

type Mode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Mode) Reset() {
	*x = Mode{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mode) ProtoMessage() {}

func (x *Mode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mode.ProtoReflect.Descriptor instead.
func (*Mode) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{33}
}

func (x *Mode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Mode) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Mode) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Modulation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Value"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Modulation) Reset() {
	*x = Modulation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Modulation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Modulation) ProtoMessage() {}

func (x *Modulation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Modulation.ProtoReflect.Descriptor instead.
func (*Modulation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{34}
}

func (x *Modulation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Mood struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value *MoodValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Description"
	Description []*TextWithoutTerritory `protobuf:"bytes,3,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"LanguageAndScriptOfMood"
	LanguageAndScriptOfMood []string `protobuf:"bytes,4,rep,name=language_and_script_of_mood,json=languageAndScriptOfMood,proto3" json:"language_and_script_of_mood,omitempty" xml:"LanguageAndScriptOfMood"`
	// @gotags: xml:"TerritoryOfMoodDescription"
	TerritoryOfMoodDescription []string `protobuf:"bytes,5,rep,name=territory_of_mood_description,json=territoryOfMoodDescription,proto3" json:"territory_of_mood_description,omitempty" xml:"TerritoryOfMoodDescription"`
	// @gotags: xml:"MoodType,attr"
	MoodType      string `protobuf:"bytes,6,opt,name=mood_type,json=moodType,proto3" json:"mood_type,omitempty" xml:"MoodType,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mood) Reset() {
	*x = Mood{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mood) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mood) ProtoMessage() {}

func (x *Mood) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mood.ProtoReflect.Descriptor instead.
func (*Mood) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{35}
}

func (x *Mood) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Mood) GetValue() *MoodValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Mood) GetDescription() []*TextWithoutTerritory {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Mood) GetLanguageAndScriptOfMood() []string {
	if x != nil {
		return x.LanguageAndScriptOfMood
	}
	return nil
}

func (x *Mood) GetTerritoryOfMoodDescription() []string {
	if x != nil {
		return x.TerritoryOfMoodDescription
	}
	return nil
}

func (x *Mood) GetMoodType() string {
	if x != nil {
		return x.MoodType
	}
	return ""
}

type MoodValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	// @gotags: xml:"AppliesToComposition,attr"
	AppliesToComposition bool `protobuf:"varint,4,opt,name=applies_to_composition,json=appliesToComposition,proto3" json:"applies_to_composition,omitempty" xml:"AppliesToComposition,attr"`
	// @gotags: xml:"AppliesToLyrics,attr"
	AppliesToLyrics bool `protobuf:"varint,5,opt,name=applies_to_lyrics,json=appliesToLyrics,proto3" json:"applies_to_lyrics,omitempty" xml:"AppliesToLyrics,attr"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MoodValue) Reset() {
	*x = MoodValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoodValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoodValue) ProtoMessage() {}

func (x *MoodValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoodValue.ProtoReflect.Descriptor instead.
func (*MoodValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{36}
}

func (x *MoodValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MoodValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *MoodValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

func (x *MoodValue) GetAppliesToComposition() bool {
	if x != nil {
		return x.AppliesToComposition
	}
	return false
}

func (x *MoodValue) GetAppliesToLyrics() bool {
	if x != nil {
		return x.AppliesToLyrics
	}
	return false
}

type Party struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISNI"
	ISNI string `protobuf:"bytes,1,opt,name=i_s_n_i,json=iSNI,proto3" json:"i_s_n_i,omitempty" xml:"ISNI"`
	// @gotags: xml:"DPID"
	DPID string `protobuf:"bytes,2,opt,name=d_p_i_d,json=dPID,proto3" json:"d_p_i_d,omitempty" xml:"DPID"`
	// @gotags: xml:"IpiNameNumber"
	IpiNameNumber string `protobuf:"bytes,3,opt,name=ipi_name_number,json=ipiNameNumber,proto3" json:"ipi_name_number,omitempty" xml:"IpiNameNumber"`
	// @gotags: xml:"IPN"
	IPN string `protobuf:"bytes,4,opt,name=i_p_n,json=iPN,proto3" json:"i_p_n,omitempty" xml:"IPN"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,5,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"PartyName"
	PartyName     string `protobuf:"bytes,6,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty" xml:"PartyName"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Party) Reset() {
	*x = Party{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Party) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Party) ProtoMessage() {}

func (x *Party) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Party.ProtoReflect.Descriptor instead.
func (*Party) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{37}
}

func (x *Party) GetISNI() string {
	if x != nil {
		return x.ISNI
	}
	return ""
}

func (x *Party) GetDPID() string {
	if x != nil {
		return x.DPID
	}
	return ""
}

func (x *Party) GetIpiNameNumber() string {
	if x != nil {
		return x.IpiNameNumber
	}
	return ""
}

func (x *Party) GetIPN() string {
	if x != nil {
		return x.IPN
	}
	return ""
}

func (x *Party) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *Party) GetPartyName() string {
	if x != nil {
		return x.PartyName
	}
	return ""
}

type RecordingPart struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Unit"
	Unit string `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty" xml:"Unit"`
	// @gotags: xml:"StartPoint"
	StartPoint string `protobuf:"bytes,3,opt,name=start_point,json=startPoint,proto3" json:"start_point,omitempty" xml:"StartPoint"`
	// @gotags: xml:"EndPoint"
	EndPoint string `protobuf:"bytes,4,opt,name=end_point,json=endPoint,proto3" json:"end_point,omitempty" xml:"EndPoint"`
	// @gotags: xml:"RecordingPartType"
	RecordingPartType *RecordingPartType `protobuf:"bytes,5,opt,name=recording_part_type,json=recordingPartType,proto3" json:"recording_part_type,omitempty" xml:"RecordingPartType"`
	// @gotags: xml:"Comment"
	Comment []*Annotation `protobuf:"bytes,6,rep,name=comment,proto3" json:"comment,omitempty" xml:"Comment"`
	// @gotags: xml:"UsageInformation"
	UsageInformation []*TextWithFormat `protobuf:"bytes,7,rep,name=usage_information,json=usageInformation,proto3" json:"usage_information,omitempty" xml:"UsageInformation"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,8,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RecordingPart) Reset() {
	*x = RecordingPart{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingPart) ProtoMessage() {}

func (x *RecordingPart) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingPart.ProtoReflect.Descriptor instead.
func (*RecordingPart) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{38}
}

func (x *RecordingPart) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *RecordingPart) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *RecordingPart) GetStartPoint() string {
	if x != nil {
		return x.StartPoint
	}
	return ""
}

func (x *RecordingPart) GetEndPoint() string {
	if x != nil {
		return x.EndPoint
	}
	return ""
}

func (x *RecordingPart) GetRecordingPartType() *RecordingPartType {
	if x != nil {
		return x.RecordingPartType
	}
	return nil
}

func (x *RecordingPart) GetComment() []*Annotation {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *RecordingPart) GetUsageInformation() []*TextWithFormat {
	if x != nil {
		return x.UsageInformation
	}
	return nil
}

func (x *RecordingPart) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type RelatedWork struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"WorkId"
	WorkId *MusicalWorkIdWithoutFlag `protobuf:"bytes,2,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty" xml:"WorkId"`
	// @gotags: xml:"WorkTitle"
	WorkTitle []*WorkTitle `protobuf:"bytes,3,rep,name=work_title,json=workTitle,proto3" json:"work_title,omitempty" xml:"WorkTitle"`
	// @gotags: xml:"WorkRelationshipType"
	WorkRelationshipType *WorkRelationshipType `protobuf:"bytes,4,opt,name=work_relationship_type,json=workRelationshipType,proto3" json:"work_relationship_type,omitempty" xml:"WorkRelationshipType"`
	// @gotags: xml:"Writer"
	Writer        []*PartyDescriptorWithPronunciation `protobuf:"bytes,5,rep,name=writer,proto3" json:"writer,omitempty" xml:"Writer"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelatedWork) Reset() {
	*x = RelatedWork{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelatedWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedWork) ProtoMessage() {}

func (x *RelatedWork) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedWork.ProtoReflect.Descriptor instead.
func (*RelatedWork) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{39}
}

func (x *RelatedWork) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *RelatedWork) GetWorkId() *MusicalWorkIdWithoutFlag {
	if x != nil {
		return x.WorkId
	}
	return nil
}

func (x *RelatedWork) GetWorkTitle() []*WorkTitle {
	if x != nil {
		return x.WorkTitle
	}
	return nil
}

func (x *RelatedWork) GetWorkRelationshipType() *WorkRelationshipType {
	if x != nil {
		return x.WorkRelationshipType
	}
	return nil
}

func (x *RelatedWork) GetWriter() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Writer
	}
	return nil
}

type ReleaseInformation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseSummary"
	ReleaseSummary *ReleaseSummary `protobuf:"bytes,1,opt,name=release_summary,json=releaseSummary,proto3" json:"release_summary,omitempty" xml:"ReleaseSummary"`
	// @gotags: xml:"GenreCategory"
	GenreCategory []*GenreCategory `protobuf:"bytes,2,rep,name=genre_category,json=genreCategory,proto3" json:"genre_category,omitempty" xml:"GenreCategory"`
	// @gotags: xml:"SubGenreCategory"
	SubGenreCategory []*SubGenreCategory `protobuf:"bytes,3,rep,name=sub_genre_category,json=subGenreCategory,proto3" json:"sub_genre_category,omitempty" xml:"SubGenreCategory"`
	// @gotags: xml:"Focus"
	Focus []*Focus `protobuf:"bytes,4,rep,name=focus,proto3" json:"focus,omitempty" xml:"Focus"`
	// @gotags: xml:"Mood"
	Mood []*Mood `protobuf:"bytes,5,rep,name=mood,proto3" json:"mood,omitempty" xml:"Mood"`
	// @gotags: xml:"ArtisticStyle"
	ArtisticStyle []*ArtisticStyle `protobuf:"bytes,6,rep,name=artistic_style,json=artisticStyle,proto3" json:"artistic_style,omitempty" xml:"ArtisticStyle"`
	// @gotags: xml:"Theme"
	Theme []*Theme `protobuf:"bytes,7,rep,name=theme,proto3" json:"theme,omitempty" xml:"Theme"`
	// @gotags: xml:"Activity"
	Activity []*Activity `protobuf:"bytes,8,rep,name=activity,proto3" json:"activity,omitempty" xml:"Activity"`
	// @gotags: xml:"CommentaryNote"
	CommentaryNote []*CommentaryNote `protobuf:"bytes,9,rep,name=commentary_note,json=commentaryNote,proto3" json:"commentary_note,omitempty" xml:"CommentaryNote"`
	// @gotags: xml:"Epoch"
	Epoch []*Epoch `protobuf:"bytes,10,rep,name=epoch,proto3" json:"epoch,omitempty" xml:"Epoch"`
	// @gotags: xml:"ArtisticInfluence"
	ArtisticInfluence []*ArtisticInfluence `protobuf:"bytes,11,rep,name=artistic_influence,json=artisticInfluence,proto3" json:"artistic_influence,omitempty" xml:"ArtisticInfluence"`
	// @gotags: xml:"IsSimilar"
	IsSimilar []*SimilarRelease `protobuf:"bytes,12,rep,name=is_similar,json=isSimilar,proto3" json:"is_similar,omitempty" xml:"IsSimilar"`
	// @gotags: xml:"HistoricChartingInformation"
	HistoricChartingInformation []*HistoricChartingInformation `protobuf:"bytes,13,rep,name=historic_charting_information,json=historicChartingInformation,proto3" json:"historic_charting_information,omitempty" xml:"HistoricChartingInformation"`
	// @gotags: xml:"Award"
	Award []*Award `protobuf:"bytes,14,rep,name=award,proto3" json:"award,omitempty" xml:"Award"`
	// @gotags: xml:"AlternativeTitle"
	AlternativeTitle []*AlternativeTitle `protobuf:"bytes,15,rep,name=alternative_title,json=alternativeTitle,proto3" json:"alternative_title,omitempty" xml:"AlternativeTitle"`
	// @gotags: xml:"Image"
	Image []*Image `protobuf:"bytes,16,rep,name=image,proto3" json:"image,omitempty" xml:"Image"`
	// @gotags: xml:"PriorityPeriodStartDate,attr"
	PriorityPeriodStartDate string `protobuf:"bytes,17,opt,name=priority_period_start_date,json=priorityPeriodStartDate,proto3" json:"priority_period_start_date,omitempty" xml:"PriorityPeriodStartDate,attr"`
	// @gotags: xml:"PriorityPeriodEndDate,attr"
	PriorityPeriodEndDate string `protobuf:"bytes,18,opt,name=priority_period_end_date,json=priorityPeriodEndDate,proto3" json:"priority_period_end_date,omitempty" xml:"PriorityPeriodEndDate,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode string `protobuf:"bytes,19,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ReleaseInformation) Reset() {
	*x = ReleaseInformation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseInformation) ProtoMessage() {}

func (x *ReleaseInformation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseInformation.ProtoReflect.Descriptor instead.
func (*ReleaseInformation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{40}
}

func (x *ReleaseInformation) GetReleaseSummary() *ReleaseSummary {
	if x != nil {
		return x.ReleaseSummary
	}
	return nil
}

func (x *ReleaseInformation) GetGenreCategory() []*GenreCategory {
	if x != nil {
		return x.GenreCategory
	}
	return nil
}

func (x *ReleaseInformation) GetSubGenreCategory() []*SubGenreCategory {
	if x != nil {
		return x.SubGenreCategory
	}
	return nil
}

func (x *ReleaseInformation) GetFocus() []*Focus {
	if x != nil {
		return x.Focus
	}
	return nil
}

func (x *ReleaseInformation) GetMood() []*Mood {
	if x != nil {
		return x.Mood
	}
	return nil
}

func (x *ReleaseInformation) GetArtisticStyle() []*ArtisticStyle {
	if x != nil {
		return x.ArtisticStyle
	}
	return nil
}

func (x *ReleaseInformation) GetTheme() []*Theme {
	if x != nil {
		return x.Theme
	}
	return nil
}

func (x *ReleaseInformation) GetActivity() []*Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *ReleaseInformation) GetCommentaryNote() []*CommentaryNote {
	if x != nil {
		return x.CommentaryNote
	}
	return nil
}

func (x *ReleaseInformation) GetEpoch() []*Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *ReleaseInformation) GetArtisticInfluence() []*ArtisticInfluence {
	if x != nil {
		return x.ArtisticInfluence
	}
	return nil
}

func (x *ReleaseInformation) GetIsSimilar() []*SimilarRelease {
	if x != nil {
		return x.IsSimilar
	}
	return nil
}

func (x *ReleaseInformation) GetHistoricChartingInformation() []*HistoricChartingInformation {
	if x != nil {
		return x.HistoricChartingInformation
	}
	return nil
}

func (x *ReleaseInformation) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

func (x *ReleaseInformation) GetAlternativeTitle() []*AlternativeTitle {
	if x != nil {
		return x.AlternativeTitle
	}
	return nil
}

func (x *ReleaseInformation) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ReleaseInformation) GetPriorityPeriodStartDate() string {
	if x != nil {
		return x.PriorityPeriodStartDate
	}
	return ""
}

func (x *ReleaseInformation) GetPriorityPeriodEndDate() string {
	if x != nil {
		return x.PriorityPeriodEndDate
	}
	return ""
}

func (x *ReleaseInformation) GetApplicableTerritoryCode() string {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return ""
}

type ReleaseInformationList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseInformation"
	ReleaseInformation []*ReleaseInformation `protobuf:"bytes,1,rep,name=release_information,json=releaseInformation,proto3" json:"release_information,omitempty" xml:"ReleaseInformation"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ReleaseInformationList) Reset() {
	*x = ReleaseInformationList{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseInformationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseInformationList) ProtoMessage() {}

func (x *ReleaseInformationList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseInformationList.ProtoReflect.Descriptor instead.
func (*ReleaseInformationList) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{41}
}

func (x *ReleaseInformationList) GetReleaseInformation() []*ReleaseInformation {
	if x != nil {
		return x.ReleaseInformation
	}
	return nil
}

type ReleaseSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseId"
	ReleaseId *ReleaseId `protobuf:"bytes,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty" xml:"ReleaseId"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,2,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithPronunciation `protobuf:"bytes,3,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,4,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseSummary) Reset() {
	*x = ReleaseSummary{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSummary) ProtoMessage() {}

func (x *ReleaseSummary) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSummary.ProtoReflect.Descriptor instead.
func (*ReleaseSummary) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{42}
}

func (x *ReleaseSummary) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *ReleaseSummary) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *ReleaseSummary) GetDisplayArtistName() []*DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *ReleaseSummary) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type RelevantResource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceId"
	ResourceId *ResourceIdWithoutFlag `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"ResourceRelationshipType"
	ResourceRelationshipType *ResourceRelationshipType `protobuf:"bytes,2,opt,name=resource_relationship_type,json=resourceRelationshipType,proto3" json:"resource_relationship_type,omitempty" xml:"ResourceRelationshipType"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *RelevantResource) Reset() {
	*x = RelevantResource{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelevantResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelevantResource) ProtoMessage() {}

func (x *RelevantResource) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelevantResource.ProtoReflect.Descriptor instead.
func (*RelevantResource) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{43}
}

func (x *RelevantResource) GetResourceId() *ResourceIdWithoutFlag {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *RelevantResource) GetResourceRelationshipType() *ResourceRelationshipType {
	if x != nil {
		return x.ResourceRelationshipType
	}
	return nil
}

type ResourceInformation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceSummary"
	ResourceSummary *ResourceSummary `protobuf:"bytes,1,opt,name=resource_summary,json=resourceSummary,proto3" json:"resource_summary,omitempty" xml:"ResourceSummary"`
	// @gotags: xml:"GenreCategory"
	GenreCategory []*GenreCategory `protobuf:"bytes,2,rep,name=genre_category,json=genreCategory,proto3" json:"genre_category,omitempty" xml:"GenreCategory"`
	// @gotags: xml:"SubGenreCategory"
	SubGenreCategory []*SubGenreCategory `protobuf:"bytes,3,rep,name=sub_genre_category,json=subGenreCategory,proto3" json:"sub_genre_category,omitempty" xml:"SubGenreCategory"`
	// @gotags: xml:"Form"
	Form *Form `protobuf:"bytes,4,opt,name=form,proto3" json:"form,omitempty" xml:"Form"`
	// @gotags: xml:"VocalRegister"
	VocalRegister []*VocalRegister `protobuf:"bytes,5,rep,name=vocal_register,json=vocalRegister,proto3" json:"vocal_register,omitempty" xml:"VocalRegister"`
	// @gotags: xml:"Focus"
	Focus []*Focus `protobuf:"bytes,6,rep,name=focus,proto3" json:"focus,omitempty" xml:"Focus"`
	// @gotags: xml:"AbsolutePitch"
	AbsolutePitch []*AbsolutePitch `protobuf:"bytes,7,rep,name=absolute_pitch,json=absolutePitch,proto3" json:"absolute_pitch,omitempty" xml:"AbsolutePitch"`
	// @gotags: xml:"TimeSignature"
	TimeSignature []*TimeSignature `protobuf:"bytes,8,rep,name=time_signature,json=timeSignature,proto3" json:"time_signature,omitempty" xml:"TimeSignature"`
	// @gotags: xml:"Tempo"
	Tempo []*TempoValue `protobuf:"bytes,9,rep,name=tempo,proto3" json:"tempo,omitempty" xml:"Tempo"`
	// @gotags: xml:"BeatsPerMinute"
	BeatsPerMinute []*BeatsPerMinute `protobuf:"bytes,10,rep,name=beats_per_minute,json=beatsPerMinute,proto3" json:"beats_per_minute,omitempty" xml:"BeatsPerMinute"`
	// @gotags: xml:"Intensity"
	Intensity []*Intensity `protobuf:"bytes,11,rep,name=intensity,proto3" json:"intensity,omitempty" xml:"Intensity"`
	// @gotags: xml:"InstrumentUsed"
	InstrumentUsed []*InstrumentUsed `protobuf:"bytes,12,rep,name=instrument_used,json=instrumentUsed,proto3" json:"instrument_used,omitempty" xml:"InstrumentUsed"`
	// @gotags: xml:"Harmony"
	Harmony []*Harmony `protobuf:"bytes,13,rep,name=harmony,proto3" json:"harmony,omitempty" xml:"Harmony"`
	// @gotags: xml:"Mood"
	Mood []*Mood `protobuf:"bytes,14,rep,name=mood,proto3" json:"mood,omitempty" xml:"Mood"`
	// @gotags: xml:"DanceStyle"
	DanceStyle []*DanceStyle `protobuf:"bytes,15,rep,name=dance_style,json=danceStyle,proto3" json:"dance_style,omitempty" xml:"DanceStyle"`
	// @gotags: xml:"RhythmStyle"
	RhythmStyle []*RhythmStyle `protobuf:"bytes,16,rep,name=rhythm_style,json=rhythmStyle,proto3" json:"rhythm_style,omitempty" xml:"RhythmStyle"`
	// @gotags: xml:"ArtisticStyle"
	ArtisticStyle []*ArtisticStyle `protobuf:"bytes,17,rep,name=artistic_style,json=artisticStyle,proto3" json:"artistic_style,omitempty" xml:"ArtisticStyle"`
	// @gotags: xml:"Theme"
	Theme []*Theme `protobuf:"bytes,18,rep,name=theme,proto3" json:"theme,omitempty" xml:"Theme"`
	// @gotags: xml:"Activity"
	Activity []*Activity `protobuf:"bytes,19,rep,name=activity,proto3" json:"activity,omitempty" xml:"Activity"`
	// @gotags: xml:"UsedMusicalWork"
	UsedMusicalWork []*UsedMusicalWork `protobuf:"bytes,20,rep,name=used_musical_work,json=usedMusicalWork,proto3" json:"used_musical_work,omitempty" xml:"UsedMusicalWork"`
	// @gotags: xml:"RelatedResource"
	RelatedResource []*ResourceRelationship `protobuf:"bytes,21,rep,name=related_resource,json=relatedResource,proto3" json:"related_resource,omitempty" xml:"RelatedResource"`
	// @gotags: xml:"Lyrics"
	Lyrics []*Lyrics `protobuf:"bytes,22,rep,name=lyrics,proto3" json:"lyrics,omitempty" xml:"Lyrics"`
	// @gotags: xml:"CommentaryNote"
	CommentaryNote []*CommentaryNote `protobuf:"bytes,23,rep,name=commentary_note,json=commentaryNote,proto3" json:"commentary_note,omitempty" xml:"CommentaryNote"`
	// @gotags: xml:"Sample"
	Sample []*Sample `protobuf:"bytes,24,rep,name=sample,proto3" json:"sample,omitempty" xml:"Sample"`
	// @gotags: xml:"RecordingPart"
	RecordingPart []*RecordingPart `protobuf:"bytes,25,rep,name=recording_part,json=recordingPart,proto3" json:"recording_part,omitempty" xml:"RecordingPart"`
	// @gotags: xml:"Usage"
	Usage []*Usage `protobuf:"bytes,26,rep,name=usage,proto3" json:"usage,omitempty" xml:"Usage"`
	// @gotags: xml:"ImpactDate"
	ImpactDate []*ImpactDate `protobuf:"bytes,27,rep,name=impact_date,json=impactDate,proto3" json:"impact_date,omitempty" xml:"ImpactDate"`
	// @gotags: xml:"ClassicalPeriod"
	ClassicalPeriod *ClassicalPeriod `protobuf:"bytes,28,opt,name=classical_period,json=classicalPeriod,proto3" json:"classical_period,omitempty" xml:"ClassicalPeriod"`
	// @gotags: xml:"Epoch"
	Epoch []*Epoch `protobuf:"bytes,29,rep,name=epoch,proto3" json:"epoch,omitempty" xml:"Epoch"`
	// @gotags: xml:"ArtisticInfluence"
	ArtisticInfluence []*ArtisticInfluence `protobuf:"bytes,30,rep,name=artistic_influence,json=artisticInfluence,proto3" json:"artistic_influence,omitempty" xml:"ArtisticInfluence"`
	// @gotags: xml:"IsSimilar"
	IsSimilar []*SimilarResource `protobuf:"bytes,31,rep,name=is_similar,json=isSimilar,proto3" json:"is_similar,omitempty" xml:"IsSimilar"`
	// @gotags: xml:"HistoricChartingInformation"
	HistoricChartingInformation []*HistoricChartingInformation `protobuf:"bytes,32,rep,name=historic_charting_information,json=historicChartingInformation,proto3" json:"historic_charting_information,omitempty" xml:"HistoricChartingInformation"`
	// @gotags: xml:"Award"
	Award []*Award `protobuf:"bytes,33,rep,name=award,proto3" json:"award,omitempty" xml:"Award"`
	// @gotags: xml:"LocationAndDateOfSession"
	LocationAndDateOfSession []*LocationAndDateOfSession `protobuf:"bytes,34,rep,name=location_and_date_of_session,json=locationAndDateOfSession,proto3" json:"location_and_date_of_session,omitempty" xml:"LocationAndDateOfSession"`
	// @gotags: xml:"AlternativeTitle"
	AlternativeTitle []*AlternativeTitle `protobuf:"bytes,35,rep,name=alternative_title,json=alternativeTitle,proto3" json:"alternative_title,omitempty" xml:"AlternativeTitle"`
	// @gotags: xml:"Image"
	Image []*Image `protobuf:"bytes,36,rep,name=image,proto3" json:"image,omitempty" xml:"Image"`
	// @gotags: xml:"PriorityPeriodStartDate,attr"
	PriorityPeriodStartDate string `protobuf:"bytes,37,opt,name=priority_period_start_date,json=priorityPeriodStartDate,proto3" json:"priority_period_start_date,omitempty" xml:"PriorityPeriodStartDate,attr"`
	// @gotags: xml:"PriorityPeriodEndDate,attr"
	PriorityPeriodEndDate string `protobuf:"bytes,38,opt,name=priority_period_end_date,json=priorityPeriodEndDate,proto3" json:"priority_period_end_date,omitempty" xml:"PriorityPeriodEndDate,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode string `protobuf:"bytes,39,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ResourceInformation) Reset() {
	*x = ResourceInformation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInformation) ProtoMessage() {}

func (x *ResourceInformation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInformation.ProtoReflect.Descriptor instead.
func (*ResourceInformation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{44}
}

func (x *ResourceInformation) GetResourceSummary() *ResourceSummary {
	if x != nil {
		return x.ResourceSummary
	}
	return nil
}

func (x *ResourceInformation) GetGenreCategory() []*GenreCategory {
	if x != nil {
		return x.GenreCategory
	}
	return nil
}

func (x *ResourceInformation) GetSubGenreCategory() []*SubGenreCategory {
	if x != nil {
		return x.SubGenreCategory
	}
	return nil
}

func (x *ResourceInformation) GetForm() *Form {
	if x != nil {
		return x.Form
	}
	return nil
}

func (x *ResourceInformation) GetVocalRegister() []*VocalRegister {
	if x != nil {
		return x.VocalRegister
	}
	return nil
}

func (x *ResourceInformation) GetFocus() []*Focus {
	if x != nil {
		return x.Focus
	}
	return nil
}

func (x *ResourceInformation) GetAbsolutePitch() []*AbsolutePitch {
	if x != nil {
		return x.AbsolutePitch
	}
	return nil
}

func (x *ResourceInformation) GetTimeSignature() []*TimeSignature {
	if x != nil {
		return x.TimeSignature
	}
	return nil
}

func (x *ResourceInformation) GetTempo() []*TempoValue {
	if x != nil {
		return x.Tempo
	}
	return nil
}

func (x *ResourceInformation) GetBeatsPerMinute() []*BeatsPerMinute {
	if x != nil {
		return x.BeatsPerMinute
	}
	return nil
}

func (x *ResourceInformation) GetIntensity() []*Intensity {
	if x != nil {
		return x.Intensity
	}
	return nil
}

func (x *ResourceInformation) GetInstrumentUsed() []*InstrumentUsed {
	if x != nil {
		return x.InstrumentUsed
	}
	return nil
}

func (x *ResourceInformation) GetHarmony() []*Harmony {
	if x != nil {
		return x.Harmony
	}
	return nil
}

func (x *ResourceInformation) GetMood() []*Mood {
	if x != nil {
		return x.Mood
	}
	return nil
}

func (x *ResourceInformation) GetDanceStyle() []*DanceStyle {
	if x != nil {
		return x.DanceStyle
	}
	return nil
}

func (x *ResourceInformation) GetRhythmStyle() []*RhythmStyle {
	if x != nil {
		return x.RhythmStyle
	}
	return nil
}

func (x *ResourceInformation) GetArtisticStyle() []*ArtisticStyle {
	if x != nil {
		return x.ArtisticStyle
	}
	return nil
}

func (x *ResourceInformation) GetTheme() []*Theme {
	if x != nil {
		return x.Theme
	}
	return nil
}

func (x *ResourceInformation) GetActivity() []*Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *ResourceInformation) GetUsedMusicalWork() []*UsedMusicalWork {
	if x != nil {
		return x.UsedMusicalWork
	}
	return nil
}

func (x *ResourceInformation) GetRelatedResource() []*ResourceRelationship {
	if x != nil {
		return x.RelatedResource
	}
	return nil
}

func (x *ResourceInformation) GetLyrics() []*Lyrics {
	if x != nil {
		return x.Lyrics
	}
	return nil
}

func (x *ResourceInformation) GetCommentaryNote() []*CommentaryNote {
	if x != nil {
		return x.CommentaryNote
	}
	return nil
}

func (x *ResourceInformation) GetSample() []*Sample {
	if x != nil {
		return x.Sample
	}
	return nil
}

func (x *ResourceInformation) GetRecordingPart() []*RecordingPart {
	if x != nil {
		return x.RecordingPart
	}
	return nil
}

func (x *ResourceInformation) GetUsage() []*Usage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *ResourceInformation) GetImpactDate() []*ImpactDate {
	if x != nil {
		return x.ImpactDate
	}
	return nil
}

func (x *ResourceInformation) GetClassicalPeriod() *ClassicalPeriod {
	if x != nil {
		return x.ClassicalPeriod
	}
	return nil
}

func (x *ResourceInformation) GetEpoch() []*Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *ResourceInformation) GetArtisticInfluence() []*ArtisticInfluence {
	if x != nil {
		return x.ArtisticInfluence
	}
	return nil
}

func (x *ResourceInformation) GetIsSimilar() []*SimilarResource {
	if x != nil {
		return x.IsSimilar
	}
	return nil
}

func (x *ResourceInformation) GetHistoricChartingInformation() []*HistoricChartingInformation {
	if x != nil {
		return x.HistoricChartingInformation
	}
	return nil
}

func (x *ResourceInformation) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

func (x *ResourceInformation) GetLocationAndDateOfSession() []*LocationAndDateOfSession {
	if x != nil {
		return x.LocationAndDateOfSession
	}
	return nil
}

func (x *ResourceInformation) GetAlternativeTitle() []*AlternativeTitle {
	if x != nil {
		return x.AlternativeTitle
	}
	return nil
}

func (x *ResourceInformation) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ResourceInformation) GetPriorityPeriodStartDate() string {
	if x != nil {
		return x.PriorityPeriodStartDate
	}
	return ""
}

func (x *ResourceInformation) GetPriorityPeriodEndDate() string {
	if x != nil {
		return x.PriorityPeriodEndDate
	}
	return ""
}

func (x *ResourceInformation) GetApplicableTerritoryCode() string {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return ""
}

type ResourceInformationList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceInformation"
	ResourceInformation []*ResourceInformation `protobuf:"bytes,1,rep,name=resource_information,json=resourceInformation,proto3" json:"resource_information,omitempty" xml:"ResourceInformation"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ResourceInformationList) Reset() {
	*x = ResourceInformationList{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceInformationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceInformationList) ProtoMessage() {}

func (x *ResourceInformationList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceInformationList.ProtoReflect.Descriptor instead.
func (*ResourceInformationList) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{45}
}

func (x *ResourceInformationList) GetResourceInformation() []*ResourceInformation {
	if x != nil {
		return x.ResourceInformation
	}
	return nil
}

type ResourceRelationship struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"ResourceId"
	ResourceId *ResourceIdWithoutFlag `protobuf:"bytes,2,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"RelatedResourceType"
	RelatedResourceType *RelatedResourceType `protobuf:"bytes,3,opt,name=related_resource_type,json=relatedResourceType,proto3" json:"related_resource_type,omitempty" xml:"RelatedResourceType"`
	// @gotags: xml:"Title"
	Title []*TitleWithPronunciation `protobuf:"bytes,4,rep,name=title,proto3" json:"title,omitempty" xml:"Title"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName *DisplayArtistNameWithPronunciation `protobuf:"bytes,5,opt,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,6,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceRelationship) Reset() {
	*x = ResourceRelationship{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceRelationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRelationship) ProtoMessage() {}

func (x *ResourceRelationship) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRelationship.ProtoReflect.Descriptor instead.
func (*ResourceRelationship) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{46}
}

func (x *ResourceRelationship) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *ResourceRelationship) GetResourceId() *ResourceIdWithoutFlag {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *ResourceRelationship) GetRelatedResourceType() *RelatedResourceType {
	if x != nil {
		return x.RelatedResourceType
	}
	return nil
}

func (x *ResourceRelationship) GetTitle() []*TitleWithPronunciation {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *ResourceRelationship) GetDisplayArtistName() *DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *ResourceRelationship) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type ResourceSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceId"
	ResourceId *ResourceIdWithoutFlag `protobuf:"bytes,1,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,2,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithPronunciation `protobuf:"bytes,3,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,4,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceSummary) Reset() {
	*x = ResourceSummary{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSummary) ProtoMessage() {}

func (x *ResourceSummary) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSummary.ProtoReflect.Descriptor instead.
func (*ResourceSummary) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{47}
}

func (x *ResourceSummary) GetResourceId() *ResourceIdWithoutFlag {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *ResourceSummary) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *ResourceSummary) GetDisplayArtistName() []*DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *ResourceSummary) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type RhythmStyle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value *RhythmStyleValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Description"
	Description []*TextWithoutTerritory `protobuf:"bytes,3,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"LanguageAndScriptOfRhythmStyle"
	LanguageAndScriptOfRhythmStyle []string `protobuf:"bytes,4,rep,name=language_and_script_of_rhythm_style,json=languageAndScriptOfRhythmStyle,proto3" json:"language_and_script_of_rhythm_style,omitempty" xml:"LanguageAndScriptOfRhythmStyle"`
	// @gotags: xml:"TerritoryOfRhythmStyleDescription"
	TerritoryOfRhythmStyleDescription []string `protobuf:"bytes,5,rep,name=territory_of_rhythm_style_description,json=territoryOfRhythmStyleDescription,proto3" json:"territory_of_rhythm_style_description,omitempty" xml:"TerritoryOfRhythmStyleDescription"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *RhythmStyle) Reset() {
	*x = RhythmStyle{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RhythmStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RhythmStyle) ProtoMessage() {}

func (x *RhythmStyle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RhythmStyle.ProtoReflect.Descriptor instead.
func (*RhythmStyle) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{48}
}

func (x *RhythmStyle) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *RhythmStyle) GetValue() *RhythmStyleValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *RhythmStyle) GetDescription() []*TextWithoutTerritory {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *RhythmStyle) GetLanguageAndScriptOfRhythmStyle() []string {
	if x != nil {
		return x.LanguageAndScriptOfRhythmStyle
	}
	return nil
}

func (x *RhythmStyle) GetTerritoryOfRhythmStyleDescription() []string {
	if x != nil {
		return x.TerritoryOfRhythmStyleDescription
	}
	return nil
}

type RhythmStyleValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RhythmStyleValue) Reset() {
	*x = RhythmStyleValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RhythmStyleValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RhythmStyleValue) ProtoMessage() {}

func (x *RhythmStyleValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RhythmStyleValue.ProtoReflect.Descriptor instead.
func (*RhythmStyleValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{49}
}

func (x *RhythmStyleValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RhythmStyleValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RhythmStyleValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type RootChordNote struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RootChordNote) Reset() {
	*x = RootChordNote{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RootChordNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootChordNote) ProtoMessage() {}

func (x *RootChordNote) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootChordNote.ProtoReflect.Descriptor instead.
func (*RootChordNote) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{50}
}

func (x *RootChordNote) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RootChordNote) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RootChordNote) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type RootChordQuality struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RootChordQuality) Reset() {
	*x = RootChordQuality{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RootChordQuality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootChordQuality) ProtoMessage() {}

func (x *RootChordQuality) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootChordQuality.ProtoReflect.Descriptor instead.
func (*RootChordQuality) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{51}
}

func (x *RootChordQuality) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RootChordQuality) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RootChordQuality) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Sample struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"RelatedResource"
	RelatedResource *ResourceSummary `protobuf:"bytes,2,opt,name=related_resource,json=relatedResource,proto3" json:"related_resource,omitempty" xml:"RelatedResource"`
	// @gotags: xml:"SampleFeature"
	SampleFeature []*SampleFeature `protobuf:"bytes,3,rep,name=sample_feature,json=sampleFeature,proto3" json:"sample_feature,omitempty" xml:"SampleFeature"`
	// @gotags: xml:"Description"
	Description   []*TextWithFormat `protobuf:"bytes,4,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sample) Reset() {
	*x = Sample{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sample) ProtoMessage() {}

func (x *Sample) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sample.ProtoReflect.Descriptor instead.
func (*Sample) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{52}
}

func (x *Sample) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Sample) GetRelatedResource() *ResourceSummary {
	if x != nil {
		return x.RelatedResource
	}
	return nil
}

func (x *Sample) GetSampleFeature() []*SampleFeature {
	if x != nil {
		return x.SampleFeature
	}
	return nil
}

func (x *Sample) GetDescription() []*TextWithFormat {
	if x != nil {
		return x.Description
	}
	return nil
}

type SampleFeature struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SampleFeature) Reset() {
	*x = SampleFeature{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SampleFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleFeature) ProtoMessage() {}

func (x *SampleFeature) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleFeature.ProtoReflect.Descriptor instead.
func (*SampleFeature) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{53}
}

func (x *SampleFeature) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SampleFeature) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type SimilarRelease struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Release"
	Release *Release `protobuf:"bytes,2,opt,name=release,proto3" json:"release,omitempty" xml:"Release"`
	// @gotags: xml:"Description"
	Description   []*Annotation `protobuf:"bytes,3,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimilarRelease) Reset() {
	*x = SimilarRelease{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimilarRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimilarRelease) ProtoMessage() {}

func (x *SimilarRelease) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimilarRelease.ProtoReflect.Descriptor instead.
func (*SimilarRelease) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{54}
}

func (x *SimilarRelease) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *SimilarRelease) GetRelease() *Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *SimilarRelease) GetDescription() []*Annotation {
	if x != nil {
		return x.Description
	}
	return nil
}

type SimilarResource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Resource"
	Resource *Resource `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty" xml:"Resource"`
	// @gotags: xml:"Description"
	Description   []*Annotation `protobuf:"bytes,3,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimilarResource) Reset() {
	*x = SimilarResource{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimilarResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimilarResource) ProtoMessage() {}

func (x *SimilarResource) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimilarResource.ProtoReflect.Descriptor instead.
func (*SimilarResource) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{55}
}

func (x *SimilarResource) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *SimilarResource) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *SimilarResource) GetDescription() []*Annotation {
	if x != nil {
		return x.Description
	}
	return nil
}

type SimilarWork struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Work"
	Work *Work `protobuf:"bytes,2,opt,name=work,proto3" json:"work,omitempty" xml:"Work"`
	// @gotags: xml:"Description"
	Description   []*Annotation `protobuf:"bytes,3,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimilarWork) Reset() {
	*x = SimilarWork{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimilarWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimilarWork) ProtoMessage() {}

func (x *SimilarWork) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimilarWork.ProtoReflect.Descriptor instead.
func (*SimilarWork) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{56}
}

func (x *SimilarWork) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *SimilarWork) GetWork() *Work {
	if x != nil {
		return x.Work
	}
	return nil
}

func (x *SimilarWork) GetDescription() []*Annotation {
	if x != nil {
		return x.Description
	}
	return nil
}

type SubGenreCategory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value         []*SubGenreCategoryValue `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubGenreCategory) Reset() {
	*x = SubGenreCategory{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubGenreCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubGenreCategory) ProtoMessage() {}

func (x *SubGenreCategory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubGenreCategory.ProtoReflect.Descriptor instead.
func (*SubGenreCategory) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{57}
}

func (x *SubGenreCategory) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *SubGenreCategory) GetValue() []*SubGenreCategoryValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type TempoValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TempoValue) Reset() {
	*x = TempoValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TempoValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempoValue) ProtoMessage() {}

func (x *TempoValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempoValue.ProtoReflect.Descriptor instead.
func (*TempoValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{58}
}

func (x *TempoValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TempoValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TempoValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Theme struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value *ThemeValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Description"
	Description []*TextWithoutTerritory `protobuf:"bytes,3,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"LanguageAndScriptOfTheme"
	LanguageAndScriptOfTheme []string `protobuf:"bytes,4,rep,name=language_and_script_of_theme,json=languageAndScriptOfTheme,proto3" json:"language_and_script_of_theme,omitempty" xml:"LanguageAndScriptOfTheme"`
	// @gotags: xml:"TerritoryOfThemeDescription"
	TerritoryOfThemeDescription []string `protobuf:"bytes,5,rep,name=territory_of_theme_description,json=territoryOfThemeDescription,proto3" json:"territory_of_theme_description,omitempty" xml:"TerritoryOfThemeDescription"`
	// @gotags: xml:"ThemeType,attr"
	ThemeType     string `protobuf:"bytes,6,opt,name=theme_type,json=themeType,proto3" json:"theme_type,omitempty" xml:"ThemeType,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Theme) Reset() {
	*x = Theme{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Theme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Theme) ProtoMessage() {}

func (x *Theme) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Theme.ProtoReflect.Descriptor instead.
func (*Theme) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{59}
}

func (x *Theme) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Theme) GetValue() *ThemeValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Theme) GetDescription() []*TextWithoutTerritory {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Theme) GetLanguageAndScriptOfTheme() []string {
	if x != nil {
		return x.LanguageAndScriptOfTheme
	}
	return nil
}

func (x *Theme) GetTerritoryOfThemeDescription() []string {
	if x != nil {
		return x.TerritoryOfThemeDescription
	}
	return nil
}

func (x *Theme) GetThemeType() string {
	if x != nil {
		return x.ThemeType
	}
	return ""
}

type ThemeValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ThemeValue) Reset() {
	*x = ThemeValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ThemeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThemeValue) ProtoMessage() {}

func (x *ThemeValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThemeValue.ProtoReflect.Descriptor instead.
func (*ThemeValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{60}
}

func (x *ThemeValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ThemeValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ThemeValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TimeSignature struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Modulation"
	Modulation    []*TimeSignatureModulation `protobuf:"bytes,2,rep,name=modulation,proto3" json:"modulation,omitempty" xml:"Modulation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSignature) Reset() {
	*x = TimeSignature{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSignature) ProtoMessage() {}

func (x *TimeSignature) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSignature.ProtoReflect.Descriptor instead.
func (*TimeSignature) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{61}
}

func (x *TimeSignature) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *TimeSignature) GetModulation() []*TimeSignatureModulation {
	if x != nil {
		return x.Modulation
	}
	return nil
}

type TimeSignatureModulation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Value"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSignatureModulation) Reset() {
	*x = TimeSignatureModulation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSignatureModulation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSignatureModulation) ProtoMessage() {}

func (x *TimeSignatureModulation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSignatureModulation.ProtoReflect.Descriptor instead.
func (*TimeSignatureModulation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{62}
}

func (x *TimeSignatureModulation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Usage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Description"
	Description []*TextWithFormat `protobuf:"bytes,2,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"TerritoryOfUsageDescription"
	TerritoryOfUsageDescription []string `protobuf:"bytes,3,rep,name=territory_of_usage_description,json=territoryOfUsageDescription,proto3" json:"territory_of_usage_description,omitempty" xml:"TerritoryOfUsageDescription"`
	// @gotags: xml:"SequenceNumber"
	SequenceNumber int32 `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber"`
	// @gotags: xml:"RelevantResource"
	RelevantResource []*RelevantResource `protobuf:"bytes,5,rep,name=relevant_resource,json=relevantResource,proto3" json:"relevant_resource,omitempty" xml:"RelevantResource"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Usage) Reset() {
	*x = Usage{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Usage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Usage) ProtoMessage() {}

func (x *Usage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Usage.ProtoReflect.Descriptor instead.
func (*Usage) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{63}
}

func (x *Usage) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Usage) GetDescription() []*TextWithFormat {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Usage) GetTerritoryOfUsageDescription() []string {
	if x != nil {
		return x.TerritoryOfUsageDescription
	}
	return nil
}

func (x *Usage) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *Usage) GetRelevantResource() []*RelevantResource {
	if x != nil {
		return x.RelevantResource
	}
	return nil
}

type UsagePeriod struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"StartDate"
	StartDate *EventDateWithoutFlags `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" xml:"StartDate"`
	// @gotags: xml:"EndDate"
	EndDate       *EventDateWithoutFlags `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty" xml:"EndDate"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UsagePeriod) Reset() {
	*x = UsagePeriod{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsagePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsagePeriod) ProtoMessage() {}

func (x *UsagePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsagePeriod.ProtoReflect.Descriptor instead.
func (*UsagePeriod) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{64}
}

func (x *UsagePeriod) GetStartDate() *EventDateWithoutFlags {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UsagePeriod) GetEndDate() *EventDateWithoutFlags {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type UsedMusicalWork struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"ResourceMusicalWorkReference"
	ResourceMusicalWorkReference []string `protobuf:"bytes,2,rep,name=resource_musical_work_reference,json=resourceMusicalWorkReference,proto3" json:"resource_musical_work_reference,omitempty" xml:"ResourceMusicalWorkReference"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *UsedMusicalWork) Reset() {
	*x = UsedMusicalWork{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UsedMusicalWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsedMusicalWork) ProtoMessage() {}

func (x *UsedMusicalWork) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsedMusicalWork.ProtoReflect.Descriptor instead.
func (*UsedMusicalWork) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{65}
}

func (x *UsedMusicalWork) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *UsedMusicalWork) GetResourceMusicalWorkReference() []string {
	if x != nil {
		return x.ResourceMusicalWorkReference
	}
	return nil
}

type WorkHierarchy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"IsDescribedElement"
	IsDescribedElement bool `protobuf:"varint,2,opt,name=is_described_element,json=isDescribedElement,proto3" json:"is_described_element,omitempty" xml:"IsDescribedElement"`
	// @gotags: xml:"IsComplete"
	IsComplete bool `protobuf:"varint,3,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty" xml:"IsComplete"`
	// @gotags: xml:"SequenceNumber"
	SequenceNumber int32 `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber"`
	// @gotags: xml:"WorkId"
	WorkId *MusicalWorkIdWithoutFlag `protobuf:"bytes,5,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty" xml:"WorkId"`
	// @gotags: xml:"WorkTitle"
	WorkTitle []*WorkTitle `protobuf:"bytes,6,rep,name=work_title,json=workTitle,proto3" json:"work_title,omitempty" xml:"WorkTitle"`
	// @gotags: xml:"Child"
	Child []*ChildWorkHierarchy `protobuf:"bytes,7,rep,name=child,proto3" json:"child,omitempty" xml:"Child"`
	// @gotags: xml:"Form"
	Form          *Form `protobuf:"bytes,8,opt,name=form,proto3" json:"form,omitempty" xml:"Form"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkHierarchy) Reset() {
	*x = WorkHierarchy{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkHierarchy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkHierarchy) ProtoMessage() {}

func (x *WorkHierarchy) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkHierarchy.ProtoReflect.Descriptor instead.
func (*WorkHierarchy) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{66}
}

func (x *WorkHierarchy) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *WorkHierarchy) GetIsDescribedElement() bool {
	if x != nil {
		return x.IsDescribedElement
	}
	return false
}

func (x *WorkHierarchy) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

func (x *WorkHierarchy) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *WorkHierarchy) GetWorkId() *MusicalWorkIdWithoutFlag {
	if x != nil {
		return x.WorkId
	}
	return nil
}

func (x *WorkHierarchy) GetWorkTitle() []*WorkTitle {
	if x != nil {
		return x.WorkTitle
	}
	return nil
}

func (x *WorkHierarchy) GetChild() []*ChildWorkHierarchy {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *WorkHierarchy) GetForm() *Form {
	if x != nil {
		return x.Form
	}
	return nil
}

type WorkInformation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MusicalWorkReference"
	MusicalWorkReference string `protobuf:"bytes,1,opt,name=musical_work_reference,json=musicalWorkReference,proto3" json:"musical_work_reference,omitempty" xml:"MusicalWorkReference"`
	// @gotags: xml:"WorkSummary"
	WorkSummary *WorkSummary `protobuf:"bytes,2,opt,name=work_summary,json=workSummary,proto3" json:"work_summary,omitempty" xml:"WorkSummary"`
	// @gotags: xml:"GenreCategory"
	GenreCategory []*GenreCategory `protobuf:"bytes,3,rep,name=genre_category,json=genreCategory,proto3" json:"genre_category,omitempty" xml:"GenreCategory"`
	// @gotags: xml:"SubGenreCategory"
	SubGenreCategory []*SubGenreCategory `protobuf:"bytes,4,rep,name=sub_genre_category,json=subGenreCategory,proto3" json:"sub_genre_category,omitempty" xml:"SubGenreCategory"`
	// @gotags: xml:"Form"
	Form *Form `protobuf:"bytes,5,opt,name=form,proto3" json:"form,omitempty" xml:"Form"`
	// @gotags: xml:"VocalRegister"
	VocalRegister []*VocalRegister `protobuf:"bytes,6,rep,name=vocal_register,json=vocalRegister,proto3" json:"vocal_register,omitempty" xml:"VocalRegister"`
	// @gotags: xml:"Focus"
	Focus []*Focus `protobuf:"bytes,7,rep,name=focus,proto3" json:"focus,omitempty" xml:"Focus"`
	// @gotags: xml:"TimeSignature"
	TimeSignature []*TimeSignature `protobuf:"bytes,8,rep,name=time_signature,json=timeSignature,proto3" json:"time_signature,omitempty" xml:"TimeSignature"`
	// @gotags: xml:"Tempo"
	Tempo []*TempoValue `protobuf:"bytes,9,rep,name=tempo,proto3" json:"tempo,omitempty" xml:"Tempo"`
	// @gotags: xml:"TargetInstrument"
	TargetInstrument []*Instrument `protobuf:"bytes,10,rep,name=target_instrument,json=targetInstrument,proto3" json:"target_instrument,omitempty" xml:"TargetInstrument"`
	// @gotags: xml:"Harmony"
	Harmony []*Harmony `protobuf:"bytes,11,rep,name=harmony,proto3" json:"harmony,omitempty" xml:"Harmony"`
	// @gotags: xml:"Mood"
	Mood []*Mood `protobuf:"bytes,12,rep,name=mood,proto3" json:"mood,omitempty" xml:"Mood"`
	// @gotags: xml:"DanceStyle"
	DanceStyle []*DanceStyle `protobuf:"bytes,13,rep,name=dance_style,json=danceStyle,proto3" json:"dance_style,omitempty" xml:"DanceStyle"`
	// @gotags: xml:"RhythmStyle"
	RhythmStyle []*RhythmStyle `protobuf:"bytes,14,rep,name=rhythm_style,json=rhythmStyle,proto3" json:"rhythm_style,omitempty" xml:"RhythmStyle"`
	// @gotags: xml:"Theme"
	Theme []*Theme `protobuf:"bytes,15,rep,name=theme,proto3" json:"theme,omitempty" xml:"Theme"`
	// @gotags: xml:"Activity"
	Activity []*Activity `protobuf:"bytes,16,rep,name=activity,proto3" json:"activity,omitempty" xml:"Activity"`
	// @gotags: xml:"WorkHierarchy"
	WorkHierarchy []*WorkHierarchy `protobuf:"bytes,17,rep,name=work_hierarchy,json=workHierarchy,proto3" json:"work_hierarchy,omitempty" xml:"WorkHierarchy"`
	// @gotags: xml:"RelatedWork"
	RelatedWork []*RelatedWork `protobuf:"bytes,18,rep,name=related_work,json=relatedWork,proto3" json:"related_work,omitempty" xml:"RelatedWork"`
	// @gotags: xml:"DerivedRecording"
	DerivedRecording []*DerivedRecording `protobuf:"bytes,19,rep,name=derived_recording,json=derivedRecording,proto3" json:"derived_recording,omitempty" xml:"DerivedRecording"`
	// @gotags: xml:"Lyrics"
	Lyrics []*Lyrics `protobuf:"bytes,20,rep,name=lyrics,proto3" json:"lyrics,omitempty" xml:"Lyrics"`
	// @gotags: xml:"CommentaryNote"
	CommentaryNote []*CommentaryNote `protobuf:"bytes,21,rep,name=commentary_note,json=commentaryNote,proto3" json:"commentary_note,omitempty" xml:"CommentaryNote"`
	// @gotags: xml:"ClassicalPeriod"
	ClassicalPeriod *ClassicalPeriod `protobuf:"bytes,22,opt,name=classical_period,json=classicalPeriod,proto3" json:"classical_period,omitempty" xml:"ClassicalPeriod"`
	// @gotags: xml:"Epoch"
	Epoch []*Epoch `protobuf:"bytes,23,rep,name=epoch,proto3" json:"epoch,omitempty" xml:"Epoch"`
	// @gotags: xml:"ArtisticInfluence"
	ArtisticInfluence []*ArtisticInfluence `protobuf:"bytes,24,rep,name=artistic_influence,json=artisticInfluence,proto3" json:"artistic_influence,omitempty" xml:"ArtisticInfluence"`
	// @gotags: xml:"IsSimilar"
	IsSimilar []*SimilarWork `protobuf:"bytes,25,rep,name=is_similar,json=isSimilar,proto3" json:"is_similar,omitempty" xml:"IsSimilar"`
	// @gotags: xml:"Award"
	Award []*Award `protobuf:"bytes,26,rep,name=award,proto3" json:"award,omitempty" xml:"Award"`
	// @gotags: xml:"AlternativeTitle"
	AlternativeTitle []*AlternativeTitle `protobuf:"bytes,27,rep,name=alternative_title,json=alternativeTitle,proto3" json:"alternative_title,omitempty" xml:"AlternativeTitle"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WorkInformation) Reset() {
	*x = WorkInformation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkInformation) ProtoMessage() {}

func (x *WorkInformation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkInformation.ProtoReflect.Descriptor instead.
func (*WorkInformation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{67}
}

func (x *WorkInformation) GetMusicalWorkReference() string {
	if x != nil {
		return x.MusicalWorkReference
	}
	return ""
}

func (x *WorkInformation) GetWorkSummary() *WorkSummary {
	if x != nil {
		return x.WorkSummary
	}
	return nil
}

func (x *WorkInformation) GetGenreCategory() []*GenreCategory {
	if x != nil {
		return x.GenreCategory
	}
	return nil
}

func (x *WorkInformation) GetSubGenreCategory() []*SubGenreCategory {
	if x != nil {
		return x.SubGenreCategory
	}
	return nil
}

func (x *WorkInformation) GetForm() *Form {
	if x != nil {
		return x.Form
	}
	return nil
}

func (x *WorkInformation) GetVocalRegister() []*VocalRegister {
	if x != nil {
		return x.VocalRegister
	}
	return nil
}

func (x *WorkInformation) GetFocus() []*Focus {
	if x != nil {
		return x.Focus
	}
	return nil
}

func (x *WorkInformation) GetTimeSignature() []*TimeSignature {
	if x != nil {
		return x.TimeSignature
	}
	return nil
}

func (x *WorkInformation) GetTempo() []*TempoValue {
	if x != nil {
		return x.Tempo
	}
	return nil
}

func (x *WorkInformation) GetTargetInstrument() []*Instrument {
	if x != nil {
		return x.TargetInstrument
	}
	return nil
}

func (x *WorkInformation) GetHarmony() []*Harmony {
	if x != nil {
		return x.Harmony
	}
	return nil
}

func (x *WorkInformation) GetMood() []*Mood {
	if x != nil {
		return x.Mood
	}
	return nil
}

func (x *WorkInformation) GetDanceStyle() []*DanceStyle {
	if x != nil {
		return x.DanceStyle
	}
	return nil
}

func (x *WorkInformation) GetRhythmStyle() []*RhythmStyle {
	if x != nil {
		return x.RhythmStyle
	}
	return nil
}

func (x *WorkInformation) GetTheme() []*Theme {
	if x != nil {
		return x.Theme
	}
	return nil
}

func (x *WorkInformation) GetActivity() []*Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *WorkInformation) GetWorkHierarchy() []*WorkHierarchy {
	if x != nil {
		return x.WorkHierarchy
	}
	return nil
}

func (x *WorkInformation) GetRelatedWork() []*RelatedWork {
	if x != nil {
		return x.RelatedWork
	}
	return nil
}

func (x *WorkInformation) GetDerivedRecording() []*DerivedRecording {
	if x != nil {
		return x.DerivedRecording
	}
	return nil
}

func (x *WorkInformation) GetLyrics() []*Lyrics {
	if x != nil {
		return x.Lyrics
	}
	return nil
}

func (x *WorkInformation) GetCommentaryNote() []*CommentaryNote {
	if x != nil {
		return x.CommentaryNote
	}
	return nil
}

func (x *WorkInformation) GetClassicalPeriod() *ClassicalPeriod {
	if x != nil {
		return x.ClassicalPeriod
	}
	return nil
}

func (x *WorkInformation) GetEpoch() []*Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *WorkInformation) GetArtisticInfluence() []*ArtisticInfluence {
	if x != nil {
		return x.ArtisticInfluence
	}
	return nil
}

func (x *WorkInformation) GetIsSimilar() []*SimilarWork {
	if x != nil {
		return x.IsSimilar
	}
	return nil
}

func (x *WorkInformation) GetAward() []*Award {
	if x != nil {
		return x.Award
	}
	return nil
}

func (x *WorkInformation) GetAlternativeTitle() []*AlternativeTitle {
	if x != nil {
		return x.AlternativeTitle
	}
	return nil
}

type WorkInformationList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"WorkInformation"
	WorkInformation []*WorkInformation `protobuf:"bytes,1,rep,name=work_information,json=workInformation,proto3" json:"work_information,omitempty" xml:"WorkInformation"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WorkInformationList) Reset() {
	*x = WorkInformationList{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkInformationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkInformationList) ProtoMessage() {}

func (x *WorkInformationList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkInformationList.ProtoReflect.Descriptor instead.
func (*WorkInformationList) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{68}
}

func (x *WorkInformationList) GetWorkInformation() []*WorkInformation {
	if x != nil {
		return x.WorkInformation
	}
	return nil
}

type WorkSummary struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MusicalWorkId"
	MusicalWorkId *MusicalWorkIdWithoutFlag `protobuf:"bytes,1,opt,name=musical_work_id,json=musicalWorkId,proto3" json:"musical_work_id,omitempty" xml:"MusicalWorkId"`
	// @gotags: xml:"WorkTitle"
	WorkTitle []*TitleWithPronunciation `protobuf:"bytes,2,rep,name=work_title,json=workTitle,proto3" json:"work_title,omitempty" xml:"WorkTitle"`
	// @gotags: xml:"Writer"
	Writer        []*PartyDescriptorWithPronunciation `protobuf:"bytes,3,rep,name=writer,proto3" json:"writer,omitempty" xml:"Writer"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkSummary) Reset() {
	*x = WorkSummary{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkSummary) ProtoMessage() {}

func (x *WorkSummary) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkSummary.ProtoReflect.Descriptor instead.
func (*WorkSummary) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{69}
}

func (x *WorkSummary) GetMusicalWorkId() *MusicalWorkIdWithoutFlag {
	if x != nil {
		return x.MusicalWorkId
	}
	return nil
}

func (x *WorkSummary) GetWorkTitle() []*TitleWithPronunciation {
	if x != nil {
		return x.WorkTitle
	}
	return nil
}

func (x *WorkSummary) GetWriter() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Writer
	}
	return nil
}

type Category struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"term,attr"
	Term string `protobuf:"bytes,1,opt,name=term,proto3" json:"term,omitempty" xml:"term,attr"`
	// @gotags: xml:"scheme,attr"
	Scheme string `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty" xml:"scheme,attr"`
	// @gotags: xml:"label,attr"
	Label         string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty" xml:"label,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{70}
}

func (x *Category) GetTerm() string {
	if x != nil {
		return x.Term
	}
	return ""
}

func (x *Category) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *Category) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type Content struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"type,attr"
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" xml:"type,attr"`
	// @gotags: xml:"src,attr"
	Src           string `protobuf:"bytes,2,opt,name=src,proto3" json:"src,omitempty" xml:"src,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Content) Reset() {
	*x = Content{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{71}
}

func (x *Content) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Content) GetSrc() string {
	if x != nil {
		return x.Src
	}
	return ""
}

type DateTime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DateTime) Reset() {
	*x = DateTime{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateTime) ProtoMessage() {}

func (x *DateTime) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateTime.ProtoReflect.Descriptor instead.
func (*DateTime) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{72}
}

func (x *DateTime) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Generator struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"uri,attr"
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty" xml:"uri,attr"`
	// @gotags: xml:"version,attr"
	Version       string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty" xml:"version,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Generator) Reset() {
	*x = Generator{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Generator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Generator) ProtoMessage() {}

func (x *Generator) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Generator.ProtoReflect.Descriptor instead.
func (*Generator) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{73}
}

func (x *Generator) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Generator) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Generator) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type Icon struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Icon) Reset() {
	*x = Icon{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Icon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Icon) ProtoMessage() {}

func (x *Icon) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Icon.ProtoReflect.Descriptor instead.
func (*Icon) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{74}
}

func (x *Icon) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Id struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Id) Reset() {
	*x = Id{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Id) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Id) ProtoMessage() {}

func (x *Id) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Id.ProtoReflect.Descriptor instead.
func (*Id) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{75}
}

func (x *Id) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Link struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"href,attr"
	Href string `protobuf:"bytes,1,opt,name=href,proto3" json:"href,omitempty" xml:"href,attr"`
	// @gotags: xml:"rel,attr"
	Rel string `protobuf:"bytes,2,opt,name=rel,proto3" json:"rel,omitempty" xml:"rel,attr"`
	// @gotags: xml:"type,attr"
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty" xml:"type,attr"`
	// @gotags: xml:"hreflang,attr"
	Hreflang string `protobuf:"bytes,4,opt,name=hreflang,proto3" json:"hreflang,omitempty" xml:"hreflang,attr"`
	// @gotags: xml:"title,attr"
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty" xml:"title,attr"`
	// @gotags: xml:"length,attr"
	Length        int32 `protobuf:"varint,6,opt,name=length,proto3" json:"length,omitempty" xml:"length,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Link) Reset() {
	*x = Link{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{76}
}

func (x *Link) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *Link) GetRel() string {
	if x != nil {
		return x.Rel
	}
	return ""
}

func (x *Link) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Link) GetHreflang() string {
	if x != nil {
		return x.Hreflang
	}
	return ""
}

func (x *Link) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Link) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type Logo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logo) Reset() {
	*x = Logo{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logo) ProtoMessage() {}

func (x *Logo) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logo.ProtoReflect.Descriptor instead.
func (*Logo) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{77}
}

func (x *Logo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Person struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Choice:
	//
	//	*Person_Name
	//	*Person_Uri
	//	*Person_Email
	Choice        isPerson_Choice `protobuf_oneof:"choice"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Person) Reset() {
	*x = Person{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{78}
}

func (x *Person) GetChoice() isPerson_Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *Person) GetName() string {
	if x != nil {
		if x, ok := x.Choice.(*Person_Name); ok {
			return x.Name
		}
	}
	return ""
}

func (x *Person) GetUri() *URI {
	if x != nil {
		if x, ok := x.Choice.(*Person_Uri); ok {
			return x.Uri
		}
	}
	return nil
}

func (x *Person) GetEmail() string {
	if x != nil {
		if x, ok := x.Choice.(*Person_Email); ok {
			return x.Email
		}
	}
	return ""
}

type isPerson_Choice interface {
	isPerson_Choice()
}

type Person_Name struct {
	// @gotags: xml:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof" xml:"name"`
}

type Person_Uri struct {
	// @gotags: xml:"uri"
	Uri *URI `protobuf:"bytes,2,opt,name=uri,proto3,oneof" xml:"uri"`
}

type Person_Email struct {
	// @gotags: xml:"email"
	Email string `protobuf:"bytes,3,opt,name=email,proto3,oneof" xml:"email"`
}

func (*Person_Name) isPerson_Choice() {}

func (*Person_Uri) isPerson_Choice() {}

func (*Person_Email) isPerson_Choice() {}

type Source struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Choice:
	//
	//	*Source_Author
	//	*Source_Category
	//	*Source_Contributor
	//	*Source_Generator
	//	*Source_Icon
	//	*Source_Id
	//	*Source_Link
	//	*Source_Logo
	//	*Source_Rights
	//	*Source_Subtitle
	//	*Source_Title
	//	*Source_Updated
	Choice        isSource_Choice `protobuf_oneof:"choice"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Source) Reset() {
	*x = Source{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{79}
}

func (x *Source) GetChoice() isSource_Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *Source) GetAuthor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Source_Author); ok {
			return x.Author
		}
	}
	return nil
}

func (x *Source) GetCategory() *Category {
	if x != nil {
		if x, ok := x.Choice.(*Source_Category); ok {
			return x.Category
		}
	}
	return nil
}

func (x *Source) GetContributor() *Person {
	if x != nil {
		if x, ok := x.Choice.(*Source_Contributor); ok {
			return x.Contributor
		}
	}
	return nil
}

func (x *Source) GetGenerator() *Generator {
	if x != nil {
		if x, ok := x.Choice.(*Source_Generator); ok {
			return x.Generator
		}
	}
	return nil
}

func (x *Source) GetIcon() *Icon {
	if x != nil {
		if x, ok := x.Choice.(*Source_Icon); ok {
			return x.Icon
		}
	}
	return nil
}

func (x *Source) GetId() *Id {
	if x != nil {
		if x, ok := x.Choice.(*Source_Id); ok {
			return x.Id
		}
	}
	return nil
}

func (x *Source) GetLink() *Link {
	if x != nil {
		if x, ok := x.Choice.(*Source_Link); ok {
			return x.Link
		}
	}
	return nil
}

func (x *Source) GetLogo() *Logo {
	if x != nil {
		if x, ok := x.Choice.(*Source_Logo); ok {
			return x.Logo
		}
	}
	return nil
}

func (x *Source) GetRights() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Source_Rights); ok {
			return x.Rights
		}
	}
	return nil
}

func (x *Source) GetSubtitle() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Source_Subtitle); ok {
			return x.Subtitle
		}
	}
	return nil
}

func (x *Source) GetTitle() *Text {
	if x != nil {
		if x, ok := x.Choice.(*Source_Title); ok {
			return x.Title
		}
	}
	return nil
}

func (x *Source) GetUpdated() *DateTime {
	if x != nil {
		if x, ok := x.Choice.(*Source_Updated); ok {
			return x.Updated
		}
	}
	return nil
}

type isSource_Choice interface {
	isSource_Choice()
}

type Source_Author struct {
	// @gotags: xml:"author"
	Author *Person `protobuf:"bytes,1,opt,name=author,proto3,oneof" xml:"author"`
}

type Source_Category struct {
	// @gotags: xml:"category"
	Category *Category `protobuf:"bytes,2,opt,name=category,proto3,oneof" xml:"category"`
}

type Source_Contributor struct {
	// @gotags: xml:"contributor"
	Contributor *Person `protobuf:"bytes,3,opt,name=contributor,proto3,oneof" xml:"contributor"`
}

type Source_Generator struct {
	// @gotags: xml:"generator"
	Generator *Generator `protobuf:"bytes,4,opt,name=generator,proto3,oneof" xml:"generator"`
}

type Source_Icon struct {
	// @gotags: xml:"icon"
	Icon *Icon `protobuf:"bytes,5,opt,name=icon,proto3,oneof" xml:"icon"`
}

type Source_Id struct {
	// @gotags: xml:"id"
	Id *Id `protobuf:"bytes,6,opt,name=id,proto3,oneof" xml:"id"`
}

type Source_Link struct {
	// @gotags: xml:"link"
	Link *Link `protobuf:"bytes,7,opt,name=link,proto3,oneof" xml:"link"`
}

type Source_Logo struct {
	// @gotags: xml:"logo"
	Logo *Logo `protobuf:"bytes,8,opt,name=logo,proto3,oneof" xml:"logo"`
}

type Source_Rights struct {
	// @gotags: xml:"rights"
	Rights *Text `protobuf:"bytes,9,opt,name=rights,proto3,oneof" xml:"rights"`
}

type Source_Subtitle struct {
	// @gotags: xml:"subtitle"
	Subtitle *Text `protobuf:"bytes,10,opt,name=subtitle,proto3,oneof" xml:"subtitle"`
}

type Source_Title struct {
	// @gotags: xml:"title"
	Title *Text `protobuf:"bytes,11,opt,name=title,proto3,oneof" xml:"title"`
}

type Source_Updated struct {
	// @gotags: xml:"updated"
	Updated *DateTime `protobuf:"bytes,12,opt,name=updated,proto3,oneof" xml:"updated"`
}

func (*Source_Author) isSource_Choice() {}

func (*Source_Category) isSource_Choice() {}

func (*Source_Contributor) isSource_Choice() {}

func (*Source_Generator) isSource_Choice() {}

func (*Source_Icon) isSource_Choice() {}

func (*Source_Id) isSource_Choice() {}

func (*Source_Link) isSource_Choice() {}

func (*Source_Logo) isSource_Choice() {}

func (*Source_Rights) isSource_Choice() {}

func (*Source_Subtitle) isSource_Choice() {}

func (*Source_Title) isSource_Choice() {}

func (*Source_Updated) isSource_Choice() {}

type Text struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"type,attr"
	Type          string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" xml:"type,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Text) Reset() {
	*x = Text{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{80}
}

func (x *Text) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type URI struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value         string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *URI) Reset() {
	*x = URI{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *URI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URI) ProtoMessage() {}

func (x *URI) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URI.ProtoReflect.Descriptor instead.
func (*URI) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{81}
}

func (x *URI) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AllTerritoryCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IdentifierType,attr"
	IdentifierType string `protobuf:"bytes,2,opt,name=identifier_type,json=identifierType,proto3" json:"identifier_type,omitempty" xml:"IdentifierType,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AllTerritoryCode) Reset() {
	*x = AllTerritoryCode{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllTerritoryCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTerritoryCode) ProtoMessage() {}

func (x *AllTerritoryCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTerritoryCode.ProtoReflect.Descriptor instead.
func (*AllTerritoryCode) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{82}
}

func (x *AllTerritoryCode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AllTerritoryCode) GetIdentifierType() string {
	if x != nil {
		return x.IdentifierType
	}
	return ""
}

type ArtistTypeValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ArtistTypeValue) Reset() {
	*x = ArtistTypeValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtistTypeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtistTypeValue) ProtoMessage() {}

func (x *ArtistTypeValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtistTypeValue.ProtoReflect.Descriptor instead.
func (*ArtistTypeValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{83}
}

func (x *ArtistTypeValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ArtistTypeValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ArtistTypeValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ArtisticInfluence struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Party"
	Party []*PartyDescriptorWithPronunciation `protobuf:"bytes,2,rep,name=party,proto3" json:"party,omitempty" xml:"Party"`
	// @gotags: xml:"Work"
	Work []*Work `protobuf:"bytes,3,rep,name=work,proto3" json:"work,omitempty" xml:"Work"`
	// @gotags: xml:"Resource"
	Resource []*Resource `protobuf:"bytes,4,rep,name=resource,proto3" json:"resource,omitempty" xml:"Resource"`
	// @gotags: xml:"Release"
	Release []*Release `protobuf:"bytes,5,rep,name=release,proto3" json:"release,omitempty" xml:"Release"`
	// @gotags: xml:"Description"
	Description []*TextWithFormat `protobuf:"bytes,6,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"IsInfluenced"
	IsInfluenced bool `protobuf:"varint,7,opt,name=is_influenced,json=isInfluenced,proto3" json:"is_influenced,omitempty" xml:"IsInfluenced"`
	// @gotags: xml:"IsInfluencer"
	IsInfluencer  bool `protobuf:"varint,8,opt,name=is_influencer,json=isInfluencer,proto3" json:"is_influencer,omitempty" xml:"IsInfluencer"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtisticInfluence) Reset() {
	*x = ArtisticInfluence{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtisticInfluence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtisticInfluence) ProtoMessage() {}

func (x *ArtisticInfluence) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtisticInfluence.ProtoReflect.Descriptor instead.
func (*ArtisticInfluence) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{84}
}

func (x *ArtisticInfluence) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *ArtisticInfluence) GetParty() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Party
	}
	return nil
}

func (x *ArtisticInfluence) GetWork() []*Work {
	if x != nil {
		return x.Work
	}
	return nil
}

func (x *ArtisticInfluence) GetResource() []*Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ArtisticInfluence) GetRelease() []*Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *ArtisticInfluence) GetDescription() []*TextWithFormat {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *ArtisticInfluence) GetIsInfluenced() bool {
	if x != nil {
		return x.IsInfluenced
	}
	return false
}

func (x *ArtisticInfluence) GetIsInfluencer() bool {
	if x != nil {
		return x.IsInfluencer
	}
	return false
}

type Award struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"AwardingBody"
	AwardingBody *PartyDescriptorWithPronunciation `protobuf:"bytes,2,opt,name=awarding_body,json=awardingBody,proto3" json:"awarding_body,omitempty" xml:"AwardingBody"`
	// @gotags: xml:"AwardedParty"
	AwardedParty *PartyDescriptorWithPronunciation `protobuf:"bytes,3,opt,name=awarded_party,json=awardedParty,proto3" json:"awarded_party,omitempty" xml:"AwardedParty"`
	// @gotags: xml:"AwardName"
	AwardName *NameWithPronunciationAndScriptCode `protobuf:"bytes,4,opt,name=award_name,json=awardName,proto3" json:"award_name,omitempty" xml:"AwardName"`
	// @gotags: xml:"Date"
	Date *EventDate `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty" xml:"Date"`
	// @gotags: xml:"IsWinner"
	IsWinner bool `protobuf:"varint,6,opt,name=is_winner,json=isWinner,proto3" json:"is_winner,omitempty" xml:"IsWinner"`
	// @gotags: xml:"Comment"
	Comment       []*TextWithFormat `protobuf:"bytes,7,rep,name=comment,proto3" json:"comment,omitempty" xml:"Comment"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Award) Reset() {
	*x = Award{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Award) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Award) ProtoMessage() {}

func (x *Award) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Award.ProtoReflect.Descriptor instead.
func (*Award) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{85}
}

func (x *Award) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Award) GetAwardingBody() *PartyDescriptorWithPronunciation {
	if x != nil {
		return x.AwardingBody
	}
	return nil
}

func (x *Award) GetAwardedParty() *PartyDescriptorWithPronunciation {
	if x != nil {
		return x.AwardedParty
	}
	return nil
}

func (x *Award) GetAwardName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.AwardName
	}
	return nil
}

func (x *Award) GetDate() *EventDate {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Award) GetIsWinner() bool {
	if x != nil {
		return x.IsWinner
	}
	return false
}

func (x *Award) GetComment() []*TextWithFormat {
	if x != nil {
		return x.Comment
	}
	return nil
}

type CatalogNumber struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatalogNumber) Reset() {
	*x = CatalogNumber{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatalogNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogNumber) ProtoMessage() {}

func (x *CatalogNumber) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogNumber.ProtoReflect.Descriptor instead.
func (*CatalogNumber) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{86}
}

func (x *CatalogNumber) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CatalogNumber) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ChartEntry struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Position"
	Position int32 `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty" xml:"Position"`
	// @gotags: xml:"Date"
	Date string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty" xml:"Date"`
	// @gotags: xml:"Duration"
	Duration *Duration `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty" xml:"Duration"`
	// @gotags: xml:"Comment"
	Comment       []*TextWithFormat `protobuf:"bytes,4,rep,name=comment,proto3" json:"comment,omitempty" xml:"Comment"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChartEntry) Reset() {
	*x = ChartEntry{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChartEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChartEntry) ProtoMessage() {}

func (x *ChartEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChartEntry.ProtoReflect.Descriptor instead.
func (*ChartEntry) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{87}
}

func (x *ChartEntry) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *ChartEntry) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *ChartEntry) GetDuration() *Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *ChartEntry) GetComment() []*TextWithFormat {
	if x != nil {
		return x.Comment
	}
	return nil
}

type ClassicalPeriod struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Name"
	Name *PeriodValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" xml:"Name"`
	// @gotags: xml:"LanguageAndScriptOfClassicalPeriod"
	LanguageAndScriptOfClassicalPeriod []string `protobuf:"bytes,3,rep,name=language_and_script_of_classical_period,json=languageAndScriptOfClassicalPeriod,proto3" json:"language_and_script_of_classical_period,omitempty" xml:"LanguageAndScriptOfClassicalPeriod"`
	// @gotags: xml:"TerritoryOfClassicalPeriodDescription"
	TerritoryOfClassicalPeriodDescription []string `protobuf:"bytes,4,rep,name=territory_of_classical_period_description,json=territoryOfClassicalPeriodDescription,proto3" json:"territory_of_classical_period_description,omitempty" xml:"TerritoryOfClassicalPeriodDescription"`
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *ClassicalPeriod) Reset() {
	*x = ClassicalPeriod{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassicalPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassicalPeriod) ProtoMessage() {}

func (x *ClassicalPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassicalPeriod.ProtoReflect.Descriptor instead.
func (*ClassicalPeriod) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{88}
}

func (x *ClassicalPeriod) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *ClassicalPeriod) GetName() *PeriodValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ClassicalPeriod) GetLanguageAndScriptOfClassicalPeriod() []string {
	if x != nil {
		return x.LanguageAndScriptOfClassicalPeriod
	}
	return nil
}

func (x *ClassicalPeriod) GetTerritoryOfClassicalPeriodDescription() []string {
	if x != nil {
		return x.TerritoryOfClassicalPeriodDescription
	}
	return nil
}

type CommentaryNote struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Text"
	Text []*TextWithoutTerritory `protobuf:"bytes,2,rep,name=text,proto3" json:"text,omitempty" xml:"Text"`
	// @gotags: xml:"CommentaryNoteType"
	CommentaryNoteType []*CommentaryNoteType `protobuf:"bytes,3,rep,name=commentary_note_type,json=commentaryNoteType,proto3" json:"commentary_note_type,omitempty" xml:"CommentaryNoteType"`
	// @gotags: xml:"LanguageAndScriptOfCommentaryNote"
	LanguageAndScriptOfCommentaryNote []string `protobuf:"bytes,4,rep,name=language_and_script_of_commentary_note,json=languageAndScriptOfCommentaryNote,proto3" json:"language_and_script_of_commentary_note,omitempty" xml:"LanguageAndScriptOfCommentaryNote"`
	// @gotags: xml:"TerritoryOfCommentaryNoteDescription"
	TerritoryOfCommentaryNoteDescription []string `protobuf:"bytes,5,rep,name=territory_of_commentary_note_description,json=territoryOfCommentaryNoteDescription,proto3" json:"territory_of_commentary_note_description,omitempty" xml:"TerritoryOfCommentaryNoteDescription"`
	// @gotags: xml:"Author"
	Author        []*PartyDescriptorWithPronunciation `protobuf:"bytes,6,rep,name=author,proto3" json:"author,omitempty" xml:"Author"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentaryNote) Reset() {
	*x = CommentaryNote{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentaryNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentaryNote) ProtoMessage() {}

func (x *CommentaryNote) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentaryNote.ProtoReflect.Descriptor instead.
func (*CommentaryNote) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{89}
}

func (x *CommentaryNote) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *CommentaryNote) GetText() []*TextWithoutTerritory {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *CommentaryNote) GetCommentaryNoteType() []*CommentaryNoteType {
	if x != nil {
		return x.CommentaryNoteType
	}
	return nil
}

func (x *CommentaryNote) GetLanguageAndScriptOfCommentaryNote() []string {
	if x != nil {
		return x.LanguageAndScriptOfCommentaryNote
	}
	return nil
}

func (x *CommentaryNote) GetTerritoryOfCommentaryNoteDescription() []string {
	if x != nil {
		return x.TerritoryOfCommentaryNoteDescription
	}
	return nil
}

func (x *CommentaryNote) GetAuthor() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Author
	}
	return nil
}

type CommentaryNoteType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CommentaryNoteType) Reset() {
	*x = CommentaryNoteType{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentaryNoteType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentaryNoteType) ProtoMessage() {}

func (x *CommentaryNoteType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentaryNoteType.ProtoReflect.Descriptor instead.
func (*CommentaryNoteType) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{90}
}

func (x *CommentaryNoteType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CommentaryNoteType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CommentaryNoteType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CurrentTerritoryCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IdentifierType,attr"
	IdentifierType string `protobuf:"bytes,2,opt,name=identifier_type,json=identifierType,proto3" json:"identifier_type,omitempty" xml:"IdentifierType,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CurrentTerritoryCode) Reset() {
	*x = CurrentTerritoryCode{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentTerritoryCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTerritoryCode) ProtoMessage() {}

func (x *CurrentTerritoryCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTerritoryCode.ProtoReflect.Descriptor instead.
func (*CurrentTerritoryCode) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{91}
}

func (x *CurrentTerritoryCode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CurrentTerritoryCode) GetIdentifierType() string {
	if x != nil {
		return x.IdentifierType
	}
	return ""
}

type Date struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Date) Reset() {
	*x = Date{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{92}
}

func (x *Date) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Date) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

type DetailedHashSum struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Algorithm"
	Algorithm *HashSumAlgorithmType `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty" xml:"Algorithm"`
	// @gotags: xml:"Version"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version"`
	// @gotags: xml:"Parameter"
	Parameter string `protobuf:"bytes,3,opt,name=parameter,proto3" json:"parameter,omitempty" xml:"Parameter"`
	// @gotags: xml:"DataType"
	DataType string `protobuf:"bytes,4,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty" xml:"DataType"`
	// @gotags: xml:"HashSumValue"
	HashSumValue  string `protobuf:"bytes,5,opt,name=hash_sum_value,json=hashSumValue,proto3" json:"hash_sum_value,omitempty" xml:"HashSumValue"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailedHashSum) Reset() {
	*x = DetailedHashSum{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedHashSum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedHashSum) ProtoMessage() {}

func (x *DetailedHashSum) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedHashSum.ProtoReflect.Descriptor instead.
func (*DetailedHashSum) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{93}
}

func (x *DetailedHashSum) GetAlgorithm() *HashSumAlgorithmType {
	if x != nil {
		return x.Algorithm
	}
	return nil
}

func (x *DetailedHashSum) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DetailedHashSum) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

func (x *DetailedHashSum) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *DetailedHashSum) GetHashSumValue() string {
	if x != nil {
		return x.HashSumValue
	}
	return ""
}

type DetailedPartyId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISNI"
	ISNI string `protobuf:"bytes,1,opt,name=i_s_n_i,json=iSNI,proto3" json:"i_s_n_i,omitempty" xml:"ISNI"`
	// @gotags: xml:"DPID"
	DPID string `protobuf:"bytes,2,opt,name=d_p_i_d,json=dPID,proto3" json:"d_p_i_d,omitempty" xml:"DPID"`
	// @gotags: xml:"IpiNameNumber"
	IpiNameNumber string `protobuf:"bytes,3,opt,name=ipi_name_number,json=ipiNameNumber,proto3" json:"ipi_name_number,omitempty" xml:"IpiNameNumber"`
	// @gotags: xml:"IPN"
	IPN string `protobuf:"bytes,4,opt,name=i_p_n,json=iPN,proto3" json:"i_p_n,omitempty" xml:"IPN"`
	// @gotags: xml:"CisacSocietyId"
	CisacSocietyId string `protobuf:"bytes,5,opt,name=cisac_society_id,json=cisacSocietyId,proto3" json:"cisac_society_id,omitempty" xml:"CisacSocietyId"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,6,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailedPartyId) Reset() {
	*x = DetailedPartyId{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedPartyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedPartyId) ProtoMessage() {}

func (x *DetailedPartyId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedPartyId.ProtoReflect.Descriptor instead.
func (*DetailedPartyId) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{94}
}

func (x *DetailedPartyId) GetISNI() string {
	if x != nil {
		return x.ISNI
	}
	return ""
}

func (x *DetailedPartyId) GetDPID() string {
	if x != nil {
		return x.DPID
	}
	return ""
}

func (x *DetailedPartyId) GetIpiNameNumber() string {
	if x != nil {
		return x.IpiNameNumber
	}
	return ""
}

func (x *DetailedPartyId) GetIPN() string {
	if x != nil {
		return x.IPN
	}
	return ""
}

func (x *DetailedPartyId) GetCisacSocietyId() string {
	if x != nil {
		return x.CisacSocietyId
	}
	return ""
}

func (x *DetailedPartyId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type DisplayArtistNameWithDefault struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode string `protobuf:"bytes,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayArtistNameWithDefault) Reset() {
	*x = DisplayArtistNameWithDefault{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayArtistNameWithDefault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayArtistNameWithDefault) ProtoMessage() {}

func (x *DisplayArtistNameWithDefault) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayArtistNameWithDefault.ProtoReflect.Descriptor instead.
func (*DisplayArtistNameWithDefault) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{95}
}

func (x *DisplayArtistNameWithDefault) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DisplayArtistNameWithDefault) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DisplayArtistNameWithDefault) GetApplicableTerritoryCode() string {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return ""
}

func (x *DisplayArtistNameWithDefault) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type DisplayArtistNameWithPronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Name"
	Name *DisplayArtistNameWithDefault `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" xml:"Name"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*Pronunciation `protobuf:"bytes,2,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayArtistNameWithPronunciation) Reset() {
	*x = DisplayArtistNameWithPronunciation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayArtistNameWithPronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayArtistNameWithPronunciation) ProtoMessage() {}

func (x *DisplayArtistNameWithPronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayArtistNameWithPronunciation.ProtoReflect.Descriptor instead.
func (*DisplayArtistNameWithPronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{96}
}

func (x *DisplayArtistNameWithPronunciation) GetName() *DisplayArtistNameWithDefault {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *DisplayArtistNameWithPronunciation) GetPronunciation() []*Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

type Duration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"UnitOfDuration,attr"
	UnitOfDuration string `protobuf:"bytes,2,opt,name=unit_of_duration,json=unitOfDuration,proto3" json:"unit_of_duration,omitempty" xml:"UnitOfDuration,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,4,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Duration) Reset() {
	*x = Duration{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Duration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Duration) ProtoMessage() {}

func (x *Duration) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Duration.ProtoReflect.Descriptor instead.
func (*Duration) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{97}
}

func (x *Duration) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Duration) GetUnitOfDuration() string {
	if x != nil {
		return x.UnitOfDuration
	}
	return ""
}

func (x *Duration) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Duration) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Epoch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value []*Name `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"RelatedArtist"
	RelatedArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,3,rep,name=related_artist,json=relatedArtist,proto3" json:"related_artist,omitempty" xml:"RelatedArtist"`
	// @gotags: xml:"RelatedCreation"
	RelatedCreation []*RelatedCreation `protobuf:"bytes,4,rep,name=related_creation,json=relatedCreation,proto3" json:"related_creation,omitempty" xml:"RelatedCreation"`
	// @gotags: xml:"StartDate"
	StartDate *Date `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" xml:"StartDate"`
	// @gotags: xml:"EndDate"
	EndDate *Date `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty" xml:"EndDate"`
	// @gotags: xml:"LanguageAndScriptOfEpoch"
	LanguageAndScriptOfEpoch []string `protobuf:"bytes,7,rep,name=language_and_script_of_epoch,json=languageAndScriptOfEpoch,proto3" json:"language_and_script_of_epoch,omitempty" xml:"LanguageAndScriptOfEpoch"`
	// @gotags: xml:"TerritoryOfEpochDescription"
	TerritoryOfEpochDescription []string `protobuf:"bytes,8,rep,name=territory_of_epoch_description,json=territoryOfEpochDescription,proto3" json:"territory_of_epoch_description,omitempty" xml:"TerritoryOfEpochDescription"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *Epoch) Reset() {
	*x = Epoch{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Epoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Epoch) ProtoMessage() {}

func (x *Epoch) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Epoch.ProtoReflect.Descriptor instead.
func (*Epoch) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{98}
}

func (x *Epoch) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Epoch) GetValue() []*Name {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Epoch) GetRelatedArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.RelatedArtist
	}
	return nil
}

func (x *Epoch) GetRelatedCreation() []*RelatedCreation {
	if x != nil {
		return x.RelatedCreation
	}
	return nil
}

func (x *Epoch) GetStartDate() *Date {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Epoch) GetEndDate() *Date {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Epoch) GetLanguageAndScriptOfEpoch() []string {
	if x != nil {
		return x.LanguageAndScriptOfEpoch
	}
	return nil
}

func (x *Epoch) GetTerritoryOfEpochDescription() []string {
	if x != nil {
		return x.TerritoryOfEpochDescription
	}
	return nil
}

type EventDate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	// @gotags: xml:"IsBefore,attr"
	IsBefore bool `protobuf:"varint,3,opt,name=is_before,json=isBefore,proto3" json:"is_before,omitempty" xml:"IsBefore,attr"`
	// @gotags: xml:"IsAfter,attr"
	IsAfter bool `protobuf:"varint,4,opt,name=is_after,json=isAfter,proto3" json:"is_after,omitempty" xml:"IsAfter,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode string `protobuf:"bytes,5,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"LocationDescription,attr"
	LocationDescription string `protobuf:"bytes,6,opt,name=location_description,json=locationDescription,proto3" json:"location_description,omitempty" xml:"LocationDescription,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,7,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventDate) Reset() {
	*x = EventDate{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDate) ProtoMessage() {}

func (x *EventDate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDate.ProtoReflect.Descriptor instead.
func (*EventDate) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{99}
}

func (x *EventDate) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventDate) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

func (x *EventDate) GetIsBefore() bool {
	if x != nil {
		return x.IsBefore
	}
	return false
}

func (x *EventDate) GetIsAfter() bool {
	if x != nil {
		return x.IsAfter
	}
	return false
}

func (x *EventDate) GetApplicableTerritoryCode() string {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return ""
}

func (x *EventDate) GetLocationDescription() string {
	if x != nil {
		return x.LocationDescription
	}
	return ""
}

func (x *EventDate) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type EventDateTime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	// @gotags: xml:"IsBefore,attr"
	IsBefore bool `protobuf:"varint,3,opt,name=is_before,json=isBefore,proto3" json:"is_before,omitempty" xml:"IsBefore,attr"`
	// @gotags: xml:"IsAfter,attr"
	IsAfter bool `protobuf:"varint,4,opt,name=is_after,json=isAfter,proto3" json:"is_after,omitempty" xml:"IsAfter,attr"`
	// @gotags: xml:"TerritoryCode,attr"
	TerritoryCode string `protobuf:"bytes,5,opt,name=territory_code,json=territoryCode,proto3" json:"territory_code,omitempty" xml:"TerritoryCode,attr"`
	// @gotags: xml:"LocationDescription,attr"
	LocationDescription string `protobuf:"bytes,6,opt,name=location_description,json=locationDescription,proto3" json:"location_description,omitempty" xml:"LocationDescription,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,7,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventDateTime) Reset() {
	*x = EventDateTime{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDateTime) ProtoMessage() {}

func (x *EventDateTime) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDateTime.ProtoReflect.Descriptor instead.
func (*EventDateTime) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{100}
}

func (x *EventDateTime) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventDateTime) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

func (x *EventDateTime) GetIsBefore() bool {
	if x != nil {
		return x.IsBefore
	}
	return false
}

func (x *EventDateTime) GetIsAfter() bool {
	if x != nil {
		return x.IsAfter
	}
	return false
}

func (x *EventDateTime) GetTerritoryCode() string {
	if x != nil {
		return x.TerritoryCode
	}
	return ""
}

func (x *EventDateTime) GetLocationDescription() string {
	if x != nil {
		return x.LocationDescription
	}
	return ""
}

func (x *EventDateTime) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type File struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"URI"
	URI string `protobuf:"bytes,1,opt,name=u_r_i,json=uRI,proto3" json:"u_r_i,omitempty" xml:"URI"`
	// @gotags: xml:"HashSum"
	HashSum *DetailedHashSum `protobuf:"bytes,2,opt,name=hash_sum,json=hashSum,proto3" json:"hash_sum,omitempty" xml:"HashSum"`
	// @gotags: xml:"FileSize"
	FileSize      string `protobuf:"bytes,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty" xml:"FileSize"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{101}
}

func (x *File) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *File) GetHashSum() *DetailedHashSum {
	if x != nil {
		return x.HashSum
	}
	return nil
}

func (x *File) GetFileSize() string {
	if x != nil {
		return x.FileSize
	}
	return ""
}

type Focus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Party"
	Party []*PartyDescriptorWithPronunciation `protobuf:"bytes,2,rep,name=party,proto3" json:"party,omitempty" xml:"Party"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithPronunciation `protobuf:"bytes,3,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,4,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"Writer"
	Writer []*PartyDescriptorWithPronunciation `protobuf:"bytes,5,rep,name=writer,proto3" json:"writer,omitempty" xml:"Writer"`
	// @gotags: xml:"SequenceNumber"
	SequenceNumber int32 `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber"`
	// @gotags: xml:"PeriodOfBeingFocus"
	PeriodOfBeingFocus []*PeriodWithTime `protobuf:"bytes,7,rep,name=period_of_being_focus,json=periodOfBeingFocus,proto3" json:"period_of_being_focus,omitempty" xml:"PeriodOfBeingFocus"`
	// @gotags: xml:"TerritoryOfBeingFocusTrackDescription"
	TerritoryOfBeingFocusTrackDescription []string `protobuf:"bytes,8,rep,name=territory_of_being_focus_track_description,json=territoryOfBeingFocusTrackDescription,proto3" json:"territory_of_being_focus_track_description,omitempty" xml:"TerritoryOfBeingFocusTrackDescription"`
	// @gotags: xml:"Comment"
	Comment []*TextWithoutTerritory `protobuf:"bytes,9,rep,name=comment,proto3" json:"comment,omitempty" xml:"Comment"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,10,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Focus) Reset() {
	*x = Focus{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Focus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Focus) ProtoMessage() {}

func (x *Focus) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Focus.ProtoReflect.Descriptor instead.
func (*Focus) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{102}
}

func (x *Focus) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Focus) GetParty() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Party
	}
	return nil
}

func (x *Focus) GetDisplayArtistName() []*DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Focus) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *Focus) GetWriter() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Writer
	}
	return nil
}

func (x *Focus) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *Focus) GetPeriodOfBeingFocus() []*PeriodWithTime {
	if x != nil {
		return x.PeriodOfBeingFocus
	}
	return nil
}

func (x *Focus) GetTerritoryOfBeingFocusTrackDescription() []string {
	if x != nil {
		return x.TerritoryOfBeingFocusTrackDescription
	}
	return nil
}

func (x *Focus) GetComment() []*TextWithoutTerritory {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *Focus) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type GenreCategoryValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,4,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GenreCategoryValue) Reset() {
	*x = GenreCategoryValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenreCategoryValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenreCategoryValue) ProtoMessage() {}

func (x *GenreCategoryValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenreCategoryValue.ProtoReflect.Descriptor instead.
func (*GenreCategoryValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{103}
}

func (x *GenreCategoryValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GenreCategoryValue) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *GenreCategoryValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GenreCategoryValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type HashSumAlgorithmType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HashSumAlgorithmType) Reset() {
	*x = HashSumAlgorithmType{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashSumAlgorithmType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashSumAlgorithmType) ProtoMessage() {}

func (x *HashSumAlgorithmType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashSumAlgorithmType.ProtoReflect.Descriptor instead.
func (*HashSumAlgorithmType) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{104}
}

func (x *HashSumAlgorithmType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *HashSumAlgorithmType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HashSumAlgorithmType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type HistoricChartingInformation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"TerritoryCode"
	TerritoryCode *CurrentTerritoryCode `protobuf:"bytes,2,opt,name=territory_code,json=territoryCode,proto3" json:"territory_code,omitempty" xml:"TerritoryCode"`
	// @gotags: xml:"ChartName"
	ChartName []*NameWithPronunciationAndScriptCode `protobuf:"bytes,3,rep,name=chart_name,json=chartName,proto3" json:"chart_name,omitempty" xml:"ChartName"`
	// @gotags: xml:"DurationInCharts"
	DurationInCharts *Duration `protobuf:"bytes,4,opt,name=duration_in_charts,json=durationInCharts,proto3" json:"duration_in_charts,omitempty" xml:"DurationInCharts"`
	// @gotags: xml:"TopPosition"
	TopPosition int32 `protobuf:"varint,5,opt,name=top_position,json=topPosition,proto3" json:"top_position,omitempty" xml:"TopPosition"`
	// @gotags: xml:"ChartEntry"
	ChartEntry []*ChartEntry `protobuf:"bytes,6,rep,name=chart_entry,json=chartEntry,proto3" json:"chart_entry,omitempty" xml:"ChartEntry"`
	// @gotags: xml:"Comment"
	Comment       []*TextWithFormat `protobuf:"bytes,7,rep,name=comment,proto3" json:"comment,omitempty" xml:"Comment"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoricChartingInformation) Reset() {
	*x = HistoricChartingInformation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricChartingInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricChartingInformation) ProtoMessage() {}

func (x *HistoricChartingInformation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricChartingInformation.ProtoReflect.Descriptor instead.
func (*HistoricChartingInformation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{105}
}

func (x *HistoricChartingInformation) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *HistoricChartingInformation) GetTerritoryCode() *CurrentTerritoryCode {
	if x != nil {
		return x.TerritoryCode
	}
	return nil
}

func (x *HistoricChartingInformation) GetChartName() []*NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.ChartName
	}
	return nil
}

func (x *HistoricChartingInformation) GetDurationInCharts() *Duration {
	if x != nil {
		return x.DurationInCharts
	}
	return nil
}

func (x *HistoricChartingInformation) GetTopPosition() int32 {
	if x != nil {
		return x.TopPosition
	}
	return 0
}

func (x *HistoricChartingInformation) GetChartEntry() []*ChartEntry {
	if x != nil {
		return x.ChartEntry
	}
	return nil
}

func (x *HistoricChartingInformation) GetComment() []*TextWithFormat {
	if x != nil {
		return x.Comment
	}
	return nil
}

type Image struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"File"
	File *File `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty" xml:"File"`
	// @gotags: xml:"ImageType"
	ImageType     []*ImageType `protobuf:"bytes,3,rep,name=image_type,json=imageType,proto3" json:"image_type,omitempty" xml:"ImageType"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{106}
}

func (x *Image) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *Image) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Image) GetImageType() []*ImageType {
	if x != nil {
		return x.ImageType
	}
	return nil
}

type ImageType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ImageType) Reset() {
	*x = ImageType{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageType) ProtoMessage() {}

func (x *ImageType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageType.ProtoReflect.Descriptor instead.
func (*ImageType) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{107}
}

func (x *ImageType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ImageType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type MessageAuditTrail struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageAuditTrailEvent"
	MessageAuditTrailEvent []*MessageAuditTrailEvent `protobuf:"bytes,1,rep,name=message_audit_trail_event,json=messageAuditTrailEvent,proto3" json:"message_audit_trail_event,omitempty" xml:"MessageAuditTrailEvent"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MessageAuditTrail) Reset() {
	*x = MessageAuditTrail{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAuditTrail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAuditTrail) ProtoMessage() {}

func (x *MessageAuditTrail) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAuditTrail.ProtoReflect.Descriptor instead.
func (*MessageAuditTrail) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{108}
}

func (x *MessageAuditTrail) GetMessageAuditTrailEvent() []*MessageAuditTrailEvent {
	if x != nil {
		return x.MessageAuditTrailEvent
	}
	return nil
}

type MessageAuditTrailEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessagingPartyDescriptor"
	MessagingPartyDescriptor *MessagingPartyWithoutCode `protobuf:"bytes,1,opt,name=messaging_party_descriptor,json=messagingPartyDescriptor,proto3" json:"messaging_party_descriptor,omitempty" xml:"MessagingPartyDescriptor"`
	// @gotags: xml:"DateTime"
	DateTime      string `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty" xml:"DateTime"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageAuditTrailEvent) Reset() {
	*x = MessageAuditTrailEvent{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAuditTrailEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAuditTrailEvent) ProtoMessage() {}

func (x *MessageAuditTrailEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAuditTrailEvent.ProtoReflect.Descriptor instead.
func (*MessageAuditTrailEvent) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{109}
}

func (x *MessageAuditTrailEvent) GetMessagingPartyDescriptor() *MessagingPartyWithoutCode {
	if x != nil {
		return x.MessagingPartyDescriptor
	}
	return nil
}

func (x *MessageAuditTrailEvent) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

type MessageHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageThreadId"
	MessageThreadId string `protobuf:"bytes,1,opt,name=message_thread_id,json=messageThreadId,proto3" json:"message_thread_id,omitempty" xml:"MessageThreadId"`
	// @gotags: xml:"MessageId"
	MessageId string `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty" xml:"MessageId"`
	// @gotags: xml:"MessageFileName"
	MessageFileName string `protobuf:"bytes,3,opt,name=message_file_name,json=messageFileName,proto3" json:"message_file_name,omitempty" xml:"MessageFileName"`
	// @gotags: xml:"MessageSender"
	MessageSender *MessagingPartyWithoutCode `protobuf:"bytes,4,opt,name=message_sender,json=messageSender,proto3" json:"message_sender,omitempty" xml:"MessageSender"`
	// @gotags: xml:"SentOnBehalfOf"
	SentOnBehalfOf *MessagingPartyWithoutCode `protobuf:"bytes,5,opt,name=sent_on_behalf_of,json=sentOnBehalfOf,proto3" json:"sent_on_behalf_of,omitempty" xml:"SentOnBehalfOf"`
	// @gotags: xml:"MessageRecipient"
	MessageRecipient []*MessagingPartyWithoutCode `protobuf:"bytes,6,rep,name=message_recipient,json=messageRecipient,proto3" json:"message_recipient,omitempty" xml:"MessageRecipient"`
	// @gotags: xml:"MessageCreatedDateTime"
	MessageCreatedDateTime string `protobuf:"bytes,7,opt,name=message_created_date_time,json=messageCreatedDateTime,proto3" json:"message_created_date_time,omitempty" xml:"MessageCreatedDateTime"`
	// @gotags: xml:"MessageAuditTrail"
	MessageAuditTrail *MessageAuditTrail `protobuf:"bytes,8,opt,name=message_audit_trail,json=messageAuditTrail,proto3" json:"message_audit_trail,omitempty" xml:"MessageAuditTrail"`
	// @gotags: xml:"MessageControlType"
	MessageControlType string `protobuf:"bytes,9,opt,name=message_control_type,json=messageControlType,proto3" json:"message_control_type,omitempty" xml:"MessageControlType"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MessageHeader) Reset() {
	*x = MessageHeader{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageHeader) ProtoMessage() {}

func (x *MessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageHeader.ProtoReflect.Descriptor instead.
func (*MessageHeader) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{110}
}

func (x *MessageHeader) GetMessageThreadId() string {
	if x != nil {
		return x.MessageThreadId
	}
	return ""
}

func (x *MessageHeader) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageHeader) GetMessageFileName() string {
	if x != nil {
		return x.MessageFileName
	}
	return ""
}

func (x *MessageHeader) GetMessageSender() *MessagingPartyWithoutCode {
	if x != nil {
		return x.MessageSender
	}
	return nil
}

func (x *MessageHeader) GetSentOnBehalfOf() *MessagingPartyWithoutCode {
	if x != nil {
		return x.SentOnBehalfOf
	}
	return nil
}

func (x *MessageHeader) GetMessageRecipient() []*MessagingPartyWithoutCode {
	if x != nil {
		return x.MessageRecipient
	}
	return nil
}

func (x *MessageHeader) GetMessageCreatedDateTime() string {
	if x != nil {
		return x.MessageCreatedDateTime
	}
	return ""
}

func (x *MessageHeader) GetMessageAuditTrail() *MessageAuditTrail {
	if x != nil {
		return x.MessageAuditTrail
	}
	return nil
}

func (x *MessageHeader) GetMessageControlType() string {
	if x != nil {
		return x.MessageControlType
	}
	return ""
}

type MessagingPartyWithoutCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"PartyId"
	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty" xml:"PartyId"`
	// @gotags: xml:"PartyName"
	PartyName *PartyNameWithoutCode `protobuf:"bytes,2,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty" xml:"PartyName"`
	// @gotags: xml:"TradingName"
	TradingName   string `protobuf:"bytes,3,opt,name=trading_name,json=tradingName,proto3" json:"trading_name,omitempty" xml:"TradingName"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagingPartyWithoutCode) Reset() {
	*x = MessagingPartyWithoutCode{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagingPartyWithoutCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingPartyWithoutCode) ProtoMessage() {}

func (x *MessagingPartyWithoutCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingPartyWithoutCode.ProtoReflect.Descriptor instead.
func (*MessagingPartyWithoutCode) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{111}
}

func (x *MessagingPartyWithoutCode) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *MessagingPartyWithoutCode) GetPartyName() *PartyNameWithoutCode {
	if x != nil {
		return x.PartyName
	}
	return nil
}

func (x *MessagingPartyWithoutCode) GetTradingName() string {
	if x != nil {
		return x.TradingName
	}
	return ""
}

type MetadataSource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"SourceReference"
	SourceReference string `protobuf:"bytes,1,opt,name=source_reference,json=sourceReference,proto3" json:"source_reference,omitempty" xml:"SourceReference"`
	// @gotags: xml:"MetadataSourceType"
	MetadataSourceType *MetadataSourceType `protobuf:"bytes,2,opt,name=metadata_source_type,json=metadataSourceType,proto3" json:"metadata_source_type,omitempty" xml:"MetadataSourceType"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MetadataSource) Reset() {
	*x = MetadataSource{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSource) ProtoMessage() {}

func (x *MetadataSource) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataSource.ProtoReflect.Descriptor instead.
func (*MetadataSource) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{112}
}

func (x *MetadataSource) GetSourceReference() string {
	if x != nil {
		return x.SourceReference
	}
	return ""
}

func (x *MetadataSource) GetMetadataSourceType() *MetadataSourceType {
	if x != nil {
		return x.MetadataSourceType
	}
	return nil
}

type MetadataSourceList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSource"
	MetadataSource []*MetadataSource `protobuf:"bytes,1,rep,name=metadata_source,json=metadataSource,proto3" json:"metadata_source,omitempty" xml:"MetadataSource"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MetadataSourceList) Reset() {
	*x = MetadataSourceList{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataSourceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSourceList) ProtoMessage() {}

func (x *MetadataSourceList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataSourceList.ProtoReflect.Descriptor instead.
func (*MetadataSourceList) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{113}
}

func (x *MetadataSourceList) GetMetadataSource() []*MetadataSource {
	if x != nil {
		return x.MetadataSource
	}
	return nil
}

type MetadataSourceReference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"AssertionDateTime,attr"
	AssertionDateTime string `protobuf:"bytes,2,opt,name=assertion_date_time,json=assertionDateTime,proto3" json:"assertion_date_time,omitempty" xml:"AssertionDateTime,attr"`
	// @gotags: xml:"Status,attr"
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty" xml:"Status,attr"`
	// @gotags: xml:"Weight,attr"
	Weight        string `protobuf:"bytes,4,opt,name=weight,proto3" json:"weight,omitempty" xml:"Weight,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetadataSourceReference) Reset() {
	*x = MetadataSourceReference{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataSourceReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSourceReference) ProtoMessage() {}

func (x *MetadataSourceReference) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataSourceReference.ProtoReflect.Descriptor instead.
func (*MetadataSourceReference) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{114}
}

func (x *MetadataSourceReference) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MetadataSourceReference) GetAssertionDateTime() string {
	if x != nil {
		return x.AssertionDateTime
	}
	return ""
}

func (x *MetadataSourceReference) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MetadataSourceReference) GetWeight() string {
	if x != nil {
		return x.Weight
	}
	return ""
}

type MetadataSourceType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MetadataSourceType) Reset() {
	*x = MetadataSourceType{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetadataSourceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataSourceType) ProtoMessage() {}

func (x *MetadataSourceType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataSourceType.ProtoReflect.Descriptor instead.
func (*MetadataSourceType) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{115}
}

func (x *MetadataSourceType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MetadataSourceType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *MetadataSourceType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type MusicalWorkIdWithoutFlag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISWC"
	ISWC string `protobuf:"bytes,1,opt,name=i_s_w_c,json=iSWC,proto3" json:"i_s_w_c,omitempty" xml:"ISWC"`
	// @gotags: xml:"OpusNumber"
	OpusNumber string `protobuf:"bytes,2,opt,name=opus_number,json=opusNumber,proto3" json:"opus_number,omitempty" xml:"OpusNumber"`
	// @gotags: xml:"ComposerCatalogNumber"
	ComposerCatalogNumber []string `protobuf:"bytes,3,rep,name=composer_catalog_number,json=composerCatalogNumber,proto3" json:"composer_catalog_number,omitempty" xml:"ComposerCatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,4,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MusicalWorkIdWithoutFlag) Reset() {
	*x = MusicalWorkIdWithoutFlag{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MusicalWorkIdWithoutFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicalWorkIdWithoutFlag) ProtoMessage() {}

func (x *MusicalWorkIdWithoutFlag) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicalWorkIdWithoutFlag.ProtoReflect.Descriptor instead.
func (*MusicalWorkIdWithoutFlag) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{116}
}

func (x *MusicalWorkIdWithoutFlag) GetISWC() string {
	if x != nil {
		return x.ISWC
	}
	return ""
}

func (x *MusicalWorkIdWithoutFlag) GetOpusNumber() string {
	if x != nil {
		return x.OpusNumber
	}
	return ""
}

func (x *MusicalWorkIdWithoutFlag) GetComposerCatalogNumber() []string {
	if x != nil {
		return x.ComposerCatalogNumber
	}
	return nil
}

func (x *MusicalWorkIdWithoutFlag) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type Name struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Name) Reset() {
	*x = Name{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{117}
}

func (x *Name) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Name) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type NameWithPronunciationAndScriptCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Name"
	Name *Name `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" xml:"Name"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*Pronunciation `protobuf:"bytes,2,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NameWithPronunciationAndScriptCode) Reset() {
	*x = NameWithPronunciationAndScriptCode{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NameWithPronunciationAndScriptCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameWithPronunciationAndScriptCode) ProtoMessage() {}

func (x *NameWithPronunciationAndScriptCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameWithPronunciationAndScriptCode.ProtoReflect.Descriptor instead.
func (*NameWithPronunciationAndScriptCode) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{118}
}

func (x *NameWithPronunciationAndScriptCode) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *NameWithPronunciationAndScriptCode) GetPronunciation() []*Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

type PartyDescriptorWithPronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Choice:
	//
	//	*PartyDescriptorWithPronunciation_PartyId
	Choice        isPartyDescriptorWithPronunciation_Choice `protobuf_oneof:"choice"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartyDescriptorWithPronunciation) Reset() {
	*x = PartyDescriptorWithPronunciation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyDescriptorWithPronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyDescriptorWithPronunciation) ProtoMessage() {}

func (x *PartyDescriptorWithPronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyDescriptorWithPronunciation.ProtoReflect.Descriptor instead.
func (*PartyDescriptorWithPronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{119}
}

func (x *PartyDescriptorWithPronunciation) GetChoice() isPartyDescriptorWithPronunciation_Choice {
	if x != nil {
		return x.Choice
	}
	return nil
}

func (x *PartyDescriptorWithPronunciation) GetPartyId() *DetailedPartyId {
	if x != nil {
		if x, ok := x.Choice.(*PartyDescriptorWithPronunciation_PartyId); ok {
			return x.PartyId
		}
	}
	return nil
}

type isPartyDescriptorWithPronunciation_Choice interface {
	isPartyDescriptorWithPronunciation_Choice()
}

type PartyDescriptorWithPronunciation_PartyId struct {
	// @gotags: xml:"PartyId"
	PartyId *DetailedPartyId `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3,oneof" xml:"PartyId"`
}

func (*PartyDescriptorWithPronunciation_PartyId) isPartyDescriptorWithPronunciation_Choice() {}

type PartyNameWithPronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"FullName"
	FullName *NameWithPronunciationAndScriptCode `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty" xml:"FullName"`
	// @gotags: xml:"FullNameAsciiTranscribed"
	FullNameAsciiTranscribed *NameWithPronunciationAndScriptCode `protobuf:"bytes,2,opt,name=full_name_ascii_transcribed,json=fullNameAsciiTranscribed,proto3" json:"full_name_ascii_transcribed,omitempty" xml:"FullNameAsciiTranscribed"`
	// @gotags: xml:"FullNameIndexed"
	FullNameIndexed *NameWithPronunciationAndScriptCode `protobuf:"bytes,3,opt,name=full_name_indexed,json=fullNameIndexed,proto3" json:"full_name_indexed,omitempty" xml:"FullNameIndexed"`
	// @gotags: xml:"NamesBeforeKeyName"
	NamesBeforeKeyName *NameWithPronunciationAndScriptCode `protobuf:"bytes,4,opt,name=names_before_key_name,json=namesBeforeKeyName,proto3" json:"names_before_key_name,omitempty" xml:"NamesBeforeKeyName"`
	// @gotags: xml:"KeyName"
	KeyName *NameWithPronunciationAndScriptCode `protobuf:"bytes,5,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty" xml:"KeyName"`
	// @gotags: xml:"NamesAfterKeyName"
	NamesAfterKeyName *NameWithPronunciationAndScriptCode `protobuf:"bytes,6,opt,name=names_after_key_name,json=namesAfterKeyName,proto3" json:"names_after_key_name,omitempty" xml:"NamesAfterKeyName"`
	// @gotags: xml:"AbbreviatedName"
	AbbreviatedName *NameWithPronunciationAndScriptCode `protobuf:"bytes,7,opt,name=abbreviated_name,json=abbreviatedName,proto3" json:"abbreviated_name,omitempty" xml:"AbbreviatedName"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,8,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode string `protobuf:"bytes,9,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *PartyNameWithPronunciation) Reset() {
	*x = PartyNameWithPronunciation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyNameWithPronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameWithPronunciation) ProtoMessage() {}

func (x *PartyNameWithPronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameWithPronunciation.ProtoReflect.Descriptor instead.
func (*PartyNameWithPronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{120}
}

func (x *PartyNameWithPronunciation) GetFullName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.FullName
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetFullNameAsciiTranscribed() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.FullNameAsciiTranscribed
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetFullNameIndexed() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.FullNameIndexed
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetNamesBeforeKeyName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.NamesBeforeKeyName
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetKeyName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.KeyName
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetNamesAfterKeyName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.NamesAfterKeyName
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetAbbreviatedName() *NameWithPronunciationAndScriptCode {
	if x != nil {
		return x.AbbreviatedName
	}
	return nil
}

func (x *PartyNameWithPronunciation) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *PartyNameWithPronunciation) GetApplicableTerritoryCode() string {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return ""
}

type PartyNameWithoutCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"FullName"
	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty" xml:"FullName"`
	// @gotags: xml:"FullNameAsciiTranscribed"
	FullNameAsciiTranscribed string `protobuf:"bytes,2,opt,name=full_name_ascii_transcribed,json=fullNameAsciiTranscribed,proto3" json:"full_name_ascii_transcribed,omitempty" xml:"FullNameAsciiTranscribed"`
	// @gotags: xml:"FullNameIndexed"
	FullNameIndexed string `protobuf:"bytes,3,opt,name=full_name_indexed,json=fullNameIndexed,proto3" json:"full_name_indexed,omitempty" xml:"FullNameIndexed"`
	// @gotags: xml:"NamesBeforeKeyName"
	NamesBeforeKeyName string `protobuf:"bytes,4,opt,name=names_before_key_name,json=namesBeforeKeyName,proto3" json:"names_before_key_name,omitempty" xml:"NamesBeforeKeyName"`
	// @gotags: xml:"KeyName"
	KeyName string `protobuf:"bytes,5,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty" xml:"KeyName"`
	// @gotags: xml:"NamesAfterKeyName"
	NamesAfterKeyName string `protobuf:"bytes,6,opt,name=names_after_key_name,json=namesAfterKeyName,proto3" json:"names_after_key_name,omitempty" xml:"NamesAfterKeyName"`
	// @gotags: xml:"AbbreviatedName"
	AbbreviatedName string `protobuf:"bytes,7,opt,name=abbreviated_name,json=abbreviatedName,proto3" json:"abbreviated_name,omitempty" xml:"AbbreviatedName"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PartyNameWithoutCode) Reset() {
	*x = PartyNameWithoutCode{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyNameWithoutCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameWithoutCode) ProtoMessage() {}

func (x *PartyNameWithoutCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameWithoutCode.ProtoReflect.Descriptor instead.
func (*PartyNameWithoutCode) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{121}
}

func (x *PartyNameWithoutCode) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetFullNameAsciiTranscribed() string {
	if x != nil {
		return x.FullNameAsciiTranscribed
	}
	return ""
}

func (x *PartyNameWithoutCode) GetFullNameIndexed() string {
	if x != nil {
		return x.FullNameIndexed
	}
	return ""
}

func (x *PartyNameWithoutCode) GetNamesBeforeKeyName() string {
	if x != nil {
		return x.NamesBeforeKeyName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetNamesAfterKeyName() string {
	if x != nil {
		return x.NamesAfterKeyName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetAbbreviatedName() string {
	if x != nil {
		return x.AbbreviatedName
	}
	return ""
}

type Period struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Period) Reset() {
	*x = Period{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Period) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Period) ProtoMessage() {}

func (x *Period) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Period.ProtoReflect.Descriptor instead.
func (*Period) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{122}
}

type PeriodValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PeriodValue) Reset() {
	*x = PeriodValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeriodValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodValue) ProtoMessage() {}

func (x *PeriodValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodValue.ProtoReflect.Descriptor instead.
func (*PeriodValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{123}
}

func (x *PeriodValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PeriodValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PeriodValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type PeriodWithTime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"StartDateTime"
	StartDateTime string `protobuf:"bytes,1,opt,name=start_date_time,json=startDateTime,proto3" json:"start_date_time,omitempty" xml:"StartDateTime"`
	// @gotags: xml:"EndDateTime"
	EndDateTime   string `protobuf:"bytes,2,opt,name=end_date_time,json=endDateTime,proto3" json:"end_date_time,omitempty" xml:"EndDateTime"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeriodWithTime) Reset() {
	*x = PeriodWithTime{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeriodWithTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodWithTime) ProtoMessage() {}

func (x *PeriodWithTime) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodWithTime.ProtoReflect.Descriptor instead.
func (*PeriodWithTime) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{124}
}

func (x *PeriodWithTime) GetStartDateTime() string {
	if x != nil {
		return x.StartDateTime
	}
	return ""
}

func (x *PeriodWithTime) GetEndDateTime() string {
	if x != nil {
		return x.EndDateTime
	}
	return ""
}

type Pronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsCanonical,attr"
	IsCanonical bool `protobuf:"varint,2,opt,name=is_canonical,json=isCanonical,proto3" json:"is_canonical,omitempty" xml:"IsCanonical,attr"`
	// @gotags: xml:"LanguageCode,attr"
	LanguageCode string `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty" xml:"LanguageCode,attr"`
	// @gotags: xml:"EncodingType,attr"
	EncodingType string `protobuf:"bytes,4,opt,name=encoding_type,json=encodingType,proto3" json:"encoding_type,omitempty" xml:"EncodingType,attr"`
	// @gotags: xml:"EncodingNamespace,attr"
	EncodingNamespace string `protobuf:"bytes,5,opt,name=encoding_namespace,json=encodingNamespace,proto3" json:"encoding_namespace,omitempty" xml:"EncodingNamespace,attr"`
	// @gotags: xml:"EncodingUserDefinedValue,attr"
	EncodingUserDefinedValue string `protobuf:"bytes,6,opt,name=encoding_user_defined_value,json=encodingUserDefinedValue,proto3" json:"encoding_user_defined_value,omitempty" xml:"EncodingUserDefinedValue,attr"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Pronunciation) Reset() {
	*x = Pronunciation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pronunciation) ProtoMessage() {}

func (x *Pronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pronunciation.ProtoReflect.Descriptor instead.
func (*Pronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{125}
}

func (x *Pronunciation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Pronunciation) GetIsCanonical() bool {
	if x != nil {
		return x.IsCanonical
	}
	return false
}

func (x *Pronunciation) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *Pronunciation) GetEncodingType() string {
	if x != nil {
		return x.EncodingType
	}
	return ""
}

func (x *Pronunciation) GetEncodingNamespace() string {
	if x != nil {
		return x.EncodingNamespace
	}
	return ""
}

func (x *Pronunciation) GetEncodingUserDefinedValue() string {
	if x != nil {
		return x.EncodingUserDefinedValue
	}
	return ""
}

type ProprietaryId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProprietaryId) Reset() {
	*x = ProprietaryId{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProprietaryId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProprietaryId) ProtoMessage() {}

func (x *ProprietaryId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProprietaryId.ProtoReflect.Descriptor instead.
func (*ProprietaryId) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{126}
}

func (x *ProprietaryId) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ProprietaryId) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type RecordingPartType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RecordingPartType) Reset() {
	*x = RecordingPartType{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingPartType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingPartType) ProtoMessage() {}

func (x *RecordingPartType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingPartType.ProtoReflect.Descriptor instead.
func (*RecordingPartType) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{127}
}

func (x *RecordingPartType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RecordingPartType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RecordingPartType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type RelatedCreation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Title"
	Title         *TitleWithPronunciation `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty" xml:"Title"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelatedCreation) Reset() {
	*x = RelatedCreation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelatedCreation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedCreation) ProtoMessage() {}

func (x *RelatedCreation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedCreation.ProtoReflect.Descriptor instead.
func (*RelatedCreation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{128}
}

func (x *RelatedCreation) GetTitle() *TitleWithPronunciation {
	if x != nil {
		return x.Title
	}
	return nil
}

type RelatedResourceType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RelatedResourceType) Reset() {
	*x = RelatedResourceType{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelatedResourceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedResourceType) ProtoMessage() {}

func (x *RelatedResourceType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedResourceType.ProtoReflect.Descriptor instead.
func (*RelatedResourceType) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{129}
}

func (x *RelatedResourceType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RelatedResourceType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RelatedResourceType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Release struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"GRid"
	GRid string `protobuf:"bytes,1,opt,name=g_rid,json=gRid,proto3" json:"g_rid,omitempty" xml:"GRid"`
	// @gotags: xml:"ICPN"
	ICPN string `protobuf:"bytes,2,opt,name=i_c_p_n,json=iCPN,proto3" json:"i_c_p_n,omitempty" xml:"ICPN"`
	// @gotags: xml:"ProprietaryReleaseId"
	ProprietaryReleaseId string `protobuf:"bytes,3,opt,name=proprietary_release_id,json=proprietaryReleaseId,proto3" json:"proprietary_release_id,omitempty" xml:"ProprietaryReleaseId"`
	// @gotags: xml:"ReleaseTitle"
	ReleaseTitle []*ReleaseTitle `protobuf:"bytes,4,rep,name=release_title,json=releaseTitle,proto3" json:"release_title,omitempty" xml:"ReleaseTitle"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithPronunciation `protobuf:"bytes,5,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,6,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Release) Reset() {
	*x = Release{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{130}
}

func (x *Release) GetGRid() string {
	if x != nil {
		return x.GRid
	}
	return ""
}

func (x *Release) GetICPN() string {
	if x != nil {
		return x.ICPN
	}
	return ""
}

func (x *Release) GetProprietaryReleaseId() string {
	if x != nil {
		return x.ProprietaryReleaseId
	}
	return ""
}

func (x *Release) GetReleaseTitle() []*ReleaseTitle {
	if x != nil {
		return x.ReleaseTitle
	}
	return nil
}

func (x *Release) GetDisplayArtistName() []*DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Release) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type ReleaseId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"GRid"
	GRid string `protobuf:"bytes,1,opt,name=g_rid,json=gRid,proto3" json:"g_rid,omitempty" xml:"GRid"`
	// @gotags: xml:"ISRC"
	ISRC string `protobuf:"bytes,2,opt,name=i_s_r_c,json=iSRC,proto3" json:"i_s_r_c,omitempty" xml:"ISRC"`
	// @gotags: xml:"ICPN"
	ICPN string `protobuf:"bytes,3,opt,name=i_c_p_n,json=iCPN,proto3" json:"i_c_p_n,omitempty" xml:"ICPN"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber *CatalogNumber `protobuf:"bytes,4,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,5,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseId) Reset() {
	*x = ReleaseId{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseId) ProtoMessage() {}

func (x *ReleaseId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseId.ProtoReflect.Descriptor instead.
func (*ReleaseId) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{131}
}

func (x *ReleaseId) GetGRid() string {
	if x != nil {
		return x.GRid
	}
	return ""
}

func (x *ReleaseId) GetISRC() string {
	if x != nil {
		return x.ISRC
	}
	return ""
}

func (x *ReleaseId) GetICPN() string {
	if x != nil {
		return x.ICPN
	}
	return ""
}

func (x *ReleaseId) GetCatalogNumber() *CatalogNumber {
	if x != nil {
		return x.CatalogNumber
	}
	return nil
}

func (x *ReleaseId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type ReleaseTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ReleaseTitle) Reset() {
	*x = ReleaseTitle{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseTitle) ProtoMessage() {}

func (x *ReleaseTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseTitle.ProtoReflect.Descriptor instead.
func (*ReleaseTitle) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{132}
}

func (x *ReleaseTitle) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReleaseTitle) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type Resource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISRC"
	ISRC string `protobuf:"bytes,1,opt,name=i_s_r_c,json=iSRC,proto3" json:"i_s_r_c,omitempty" xml:"ISRC"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber string `protobuf:"bytes,2,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryResourceId"
	ProprietaryResourceId string `protobuf:"bytes,3,opt,name=proprietary_resource_id,json=proprietaryResourceId,proto3" json:"proprietary_resource_id,omitempty" xml:"ProprietaryResourceId"`
	// @gotags: xml:"ResourceTitle"
	ResourceTitle []*ResourceTitle `protobuf:"bytes,4,rep,name=resource_title,json=resourceTitle,proto3" json:"resource_title,omitempty" xml:"ResourceTitle"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithPronunciation `protobuf:"bytes,5,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*PartyDescriptorWithPronunciation `protobuf:"bytes,6,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{133}
}

func (x *Resource) GetISRC() string {
	if x != nil {
		return x.ISRC
	}
	return ""
}

func (x *Resource) GetCatalogNumber() string {
	if x != nil {
		return x.CatalogNumber
	}
	return ""
}

func (x *Resource) GetProprietaryResourceId() string {
	if x != nil {
		return x.ProprietaryResourceId
	}
	return ""
}

func (x *Resource) GetResourceTitle() []*ResourceTitle {
	if x != nil {
		return x.ResourceTitle
	}
	return nil
}

func (x *Resource) GetDisplayArtistName() []*DisplayArtistNameWithPronunciation {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Resource) GetDisplayArtist() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

type ResourceContributorRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ResourceContributorRole) Reset() {
	*x = ResourceContributorRole{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceContributorRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceContributorRole) ProtoMessage() {}

func (x *ResourceContributorRole) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceContributorRole.ProtoReflect.Descriptor instead.
func (*ResourceContributorRole) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{134}
}

func (x *ResourceContributorRole) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ResourceContributorRole) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResourceContributorRole) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ResourceIdWithoutFlag struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISRC"
	ISRC string `protobuf:"bytes,1,opt,name=i_s_r_c,json=iSRC,proto3" json:"i_s_r_c,omitempty" xml:"ISRC"`
	// @gotags: xml:"ISMN"
	ISMN string `protobuf:"bytes,2,opt,name=i_s_m_n,json=iSMN,proto3" json:"i_s_m_n,omitempty" xml:"ISMN"`
	// @gotags: xml:"ISAN"
	ISAN string `protobuf:"bytes,3,opt,name=i_s_a_n,json=iSAN,proto3" json:"i_s_a_n,omitempty" xml:"ISAN"`
	// @gotags: xml:"VISAN"
	VISAN string `protobuf:"bytes,4,opt,name=v_i_s_a_n,json=vISAN,proto3" json:"v_i_s_a_n,omitempty" xml:"VISAN"`
	// @gotags: xml:"ISBN"
	ISBN string `protobuf:"bytes,5,opt,name=i_s_b_n,json=iSBN,proto3" json:"i_s_b_n,omitempty" xml:"ISBN"`
	// @gotags: xml:"ISSN"
	ISSN string `protobuf:"bytes,6,opt,name=i_s_s_n,json=iSSN,proto3" json:"i_s_s_n,omitempty" xml:"ISSN"`
	// @gotags: xml:"SICI"
	SICI string `protobuf:"bytes,7,opt,name=s_i_c_i,json=sICI,proto3" json:"s_i_c_i,omitempty" xml:"SICI"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber *CatalogNumber `protobuf:"bytes,8,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,9,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceIdWithoutFlag) Reset() {
	*x = ResourceIdWithoutFlag{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceIdWithoutFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceIdWithoutFlag) ProtoMessage() {}

func (x *ResourceIdWithoutFlag) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceIdWithoutFlag.ProtoReflect.Descriptor instead.
func (*ResourceIdWithoutFlag) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{135}
}

func (x *ResourceIdWithoutFlag) GetISRC() string {
	if x != nil {
		return x.ISRC
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetISMN() string {
	if x != nil {
		return x.ISMN
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetISAN() string {
	if x != nil {
		return x.ISAN
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetVISAN() string {
	if x != nil {
		return x.VISAN
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetISBN() string {
	if x != nil {
		return x.ISBN
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetISSN() string {
	if x != nil {
		return x.ISSN
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetSICI() string {
	if x != nil {
		return x.SICI
	}
	return ""
}

func (x *ResourceIdWithoutFlag) GetCatalogNumber() *CatalogNumber {
	if x != nil {
		return x.CatalogNumber
	}
	return nil
}

func (x *ResourceIdWithoutFlag) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type ResourceRelationshipType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ResourceRelationshipType) Reset() {
	*x = ResourceRelationshipType{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceRelationshipType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRelationshipType) ProtoMessage() {}

func (x *ResourceRelationshipType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRelationshipType.ProtoReflect.Descriptor instead.
func (*ResourceRelationshipType) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{136}
}

func (x *ResourceRelationshipType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ResourceRelationshipType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResourceRelationshipType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ResourceTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ResourceTitle) Reset() {
	*x = ResourceTitle{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceTitle) ProtoMessage() {}

func (x *ResourceTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceTitle.ProtoReflect.Descriptor instead.
func (*ResourceTitle) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{137}
}

func (x *ResourceTitle) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ResourceTitle) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type SessionType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SessionType) Reset() {
	*x = SessionType{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionType) ProtoMessage() {}

func (x *SessionType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionType.ProtoReflect.Descriptor instead.
func (*SessionType) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{138}
}

func (x *SessionType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SessionType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SessionType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type SubGenreCategoryValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SubGenreCategoryValue) Reset() {
	*x = SubGenreCategoryValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubGenreCategoryValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubGenreCategoryValue) ProtoMessage() {}

func (x *SubGenreCategoryValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubGenreCategoryValue.ProtoReflect.Descriptor instead.
func (*SubGenreCategoryValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{139}
}

func (x *SubGenreCategoryValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SubGenreCategoryValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SubGenreCategoryValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TextWithFormat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode string `protobuf:"bytes,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"Format,attr"
	Format string `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty" xml:"Format,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,7,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TextWithFormat) Reset() {
	*x = TextWithFormat{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextWithFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextWithFormat) ProtoMessage() {}

func (x *TextWithFormat) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextWithFormat.ProtoReflect.Descriptor instead.
func (*TextWithFormat) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{140}
}

func (x *TextWithFormat) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TextWithFormat) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TextWithFormat) GetApplicableTerritoryCode() string {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return ""
}

func (x *TextWithFormat) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *TextWithFormat) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *TextWithFormat) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TextWithFormat) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TextWithoutTerritory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode string `protobuf:"bytes,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"Format,attr"
	Format string `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty" xml:"Format,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,7,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TextWithoutTerritory) Reset() {
	*x = TextWithoutTerritory{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextWithoutTerritory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextWithoutTerritory) ProtoMessage() {}

func (x *TextWithoutTerritory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextWithoutTerritory.ProtoReflect.Descriptor instead.
func (*TextWithoutTerritory) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{141}
}

func (x *TextWithoutTerritory) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TextWithoutTerritory) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TextWithoutTerritory) GetApplicableTerritoryCode() string {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return ""
}

func (x *TextWithoutTerritory) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *TextWithoutTerritory) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *TextWithoutTerritory) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TextWithoutTerritory) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TitleText struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Title"
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty" xml:"Title"`
	// @gotags: xml:"Pronunciation"
	Pronunciation []*Pronunciation `protobuf:"bytes,2,rep,name=pronunciation,proto3" json:"pronunciation,omitempty" xml:"Pronunciation"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TitleText) Reset() {
	*x = TitleText{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleText) ProtoMessage() {}

func (x *TitleText) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleText.ProtoReflect.Descriptor instead.
func (*TitleText) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{142}
}

func (x *TitleText) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TitleText) GetPronunciation() []*Pronunciation {
	if x != nil {
		return x.Pronunciation
	}
	return nil
}

type TitleWithPronunciation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TitleText"
	TitleText *TitleText `protobuf:"bytes,1,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty" xml:"TitleText"`
	// @gotags: xml:"SubTitle"
	SubTitle *TitleText `protobuf:"bytes,2,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty" xml:"SubTitle"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,3,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"TitleType,attr"
	TitleType string `protobuf:"bytes,4,opt,name=title_type,json=titleType,proto3" json:"title_type,omitempty" xml:"TitleType,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,6,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TitleWithPronunciation) Reset() {
	*x = TitleWithPronunciation{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleWithPronunciation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleWithPronunciation) ProtoMessage() {}

func (x *TitleWithPronunciation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleWithPronunciation.ProtoReflect.Descriptor instead.
func (*TitleWithPronunciation) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{143}
}

func (x *TitleWithPronunciation) GetTitleText() *TitleText {
	if x != nil {
		return x.TitleText
	}
	return nil
}

func (x *TitleWithPronunciation) GetSubTitle() *TitleText {
	if x != nil {
		return x.SubTitle
	}
	return nil
}

func (x *TitleWithPronunciation) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TitleWithPronunciation) GetTitleType() string {
	if x != nil {
		return x.TitleType
	}
	return ""
}

func (x *TitleWithPronunciation) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TitleWithPronunciation) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Venue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"VenueName"
	VenueName string `protobuf:"bytes,1,opt,name=venue_name,json=venueName,proto3" json:"venue_name,omitempty" xml:"VenueName"`
	// @gotags: xml:"VenueAddress"
	VenueAddress string `protobuf:"bytes,2,opt,name=venue_address,json=venueAddress,proto3" json:"venue_address,omitempty" xml:"VenueAddress"`
	// @gotags: xml:"TerritoryCode"
	TerritoryCode *AllTerritoryCode `protobuf:"bytes,3,opt,name=territory_code,json=territoryCode,proto3" json:"territory_code,omitempty" xml:"TerritoryCode"`
	// @gotags: xml:"LocationCode"
	LocationCode string `protobuf:"bytes,4,opt,name=location_code,json=locationCode,proto3" json:"location_code,omitempty" xml:"LocationCode"`
	// @gotags: xml:"VenueRoom"
	VenueRoom     string `protobuf:"bytes,5,opt,name=venue_room,json=venueRoom,proto3" json:"venue_room,omitempty" xml:"VenueRoom"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Venue) Reset() {
	*x = Venue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Venue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Venue) ProtoMessage() {}

func (x *Venue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Venue.ProtoReflect.Descriptor instead.
func (*Venue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{144}
}

func (x *Venue) GetVenueName() string {
	if x != nil {
		return x.VenueName
	}
	return ""
}

func (x *Venue) GetVenueAddress() string {
	if x != nil {
		return x.VenueAddress
	}
	return ""
}

func (x *Venue) GetTerritoryCode() *AllTerritoryCode {
	if x != nil {
		return x.TerritoryCode
	}
	return nil
}

func (x *Venue) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

func (x *Venue) GetVenueRoom() string {
	if x != nil {
		return x.VenueRoom
	}
	return ""
}

type VocalRegister struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MetadataSourceReference"
	MetadataSourceReference []*MetadataSourceReference `protobuf:"bytes,1,rep,name=metadata_source_reference,json=metadataSourceReference,proto3" json:"metadata_source_reference,omitempty" xml:"MetadataSourceReference"`
	// @gotags: xml:"Value"
	Value         *VocalRegisterValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VocalRegister) Reset() {
	*x = VocalRegister{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocalRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocalRegister) ProtoMessage() {}

func (x *VocalRegister) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocalRegister.ProtoReflect.Descriptor instead.
func (*VocalRegister) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{145}
}

func (x *VocalRegister) GetMetadataSourceReference() []*MetadataSourceReference {
	if x != nil {
		return x.MetadataSourceReference
	}
	return nil
}

func (x *VocalRegister) GetValue() *VocalRegisterValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type VocalRegisterValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VocalRegisterValue) Reset() {
	*x = VocalRegisterValue{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VocalRegisterValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VocalRegisterValue) ProtoMessage() {}

func (x *VocalRegisterValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VocalRegisterValue.ProtoReflect.Descriptor instead.
func (*VocalRegisterValue) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{146}
}

func (x *VocalRegisterValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *VocalRegisterValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *VocalRegisterValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Work struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISWC"
	ISWC string `protobuf:"bytes,1,opt,name=i_s_w_c,json=iSWC,proto3" json:"i_s_w_c,omitempty" xml:"ISWC"`
	// @gotags: xml:"ProprietaryWorkId"
	ProprietaryWorkId string `protobuf:"bytes,2,opt,name=proprietary_work_id,json=proprietaryWorkId,proto3" json:"proprietary_work_id,omitempty" xml:"ProprietaryWorkId"`
	// @gotags: xml:"WorkTitle"
	WorkTitle []*WorkTitle `protobuf:"bytes,3,rep,name=work_title,json=workTitle,proto3" json:"work_title,omitempty" xml:"WorkTitle"`
	// @gotags: xml:"Writer"
	Writer        []*PartyDescriptorWithPronunciation `protobuf:"bytes,4,rep,name=writer,proto3" json:"writer,omitempty" xml:"Writer"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Work) Reset() {
	*x = Work{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Work) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Work) ProtoMessage() {}

func (x *Work) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Work.ProtoReflect.Descriptor instead.
func (*Work) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{147}
}

func (x *Work) GetISWC() string {
	if x != nil {
		return x.ISWC
	}
	return ""
}

func (x *Work) GetProprietaryWorkId() string {
	if x != nil {
		return x.ProprietaryWorkId
	}
	return ""
}

func (x *Work) GetWorkTitle() []*WorkTitle {
	if x != nil {
		return x.WorkTitle
	}
	return nil
}

func (x *Work) GetWriter() []*PartyDescriptorWithPronunciation {
	if x != nil {
		return x.Writer
	}
	return nil
}

type WorkRelationshipType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WorkRelationshipType) Reset() {
	*x = WorkRelationshipType{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[148]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkRelationshipType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkRelationshipType) ProtoMessage() {}

func (x *WorkRelationshipType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[148]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkRelationshipType.ProtoReflect.Descriptor instead.
func (*WorkRelationshipType) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{148}
}

func (x *WorkRelationshipType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *WorkRelationshipType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *WorkRelationshipType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type WorkTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *WorkTitle) Reset() {
	*x = WorkTitle{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[149]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkTitle) ProtoMessage() {}

func (x *WorkTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[149]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkTitle.ProtoReflect.Descriptor instead.
func (*WorkTitle) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{149}
}

func (x *WorkTitle) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *WorkTitle) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type EventDateWithoutFlags struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode string `protobuf:"bytes,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"LocationDescription,attr"
	LocationDescription string `protobuf:"bytes,4,opt,name=location_description,json=locationDescription,proto3" json:"location_description,omitempty" xml:"LocationDescription,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,5,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventDateWithoutFlags) Reset() {
	*x = EventDateWithoutFlags{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[150]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDateWithoutFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDateWithoutFlags) ProtoMessage() {}

func (x *EventDateWithoutFlags) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[150]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDateWithoutFlags.ProtoReflect.Descriptor instead.
func (*EventDateWithoutFlags) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{150}
}

func (x *EventDateWithoutFlags) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventDateWithoutFlags) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

func (x *EventDateWithoutFlags) GetApplicableTerritoryCode() string {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return ""
}

func (x *EventDateWithoutFlags) GetLocationDescription() string {
	if x != nil {
		return x.LocationDescription
	}
	return ""
}

func (x *EventDateWithoutFlags) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type Timing struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"StartPoint"
	StartPoint string `protobuf:"bytes,1,opt,name=start_point,json=startPoint,proto3" json:"start_point,omitempty" xml:"StartPoint"`
	// @gotags: xml:"DurationUsed"
	DurationUsed  string `protobuf:"bytes,2,opt,name=duration_used,json=durationUsed,proto3" json:"duration_used,omitempty" xml:"DurationUsed"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timing) Reset() {
	*x = Timing{}
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timing) ProtoMessage() {}

func (x *Timing) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_mead_v11_v11_proto_msgTypes[151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timing.ProtoReflect.Descriptor instead.
func (*Timing) Descriptor() ([]byte, []int) {
	return file_ddex_mead_v11_v11_proto_rawDescGZIP(), []int{151}
}

func (x *Timing) GetStartPoint() string {
	if x != nil {
		return x.StartPoint
	}
	return ""
}

func (x *Timing) GetDurationUsed() string {
	if x != nil {
		return x.DurationUsed
	}
	return ""
}

var File_ddex_mead_v11_v11_proto protoreflect.FileDescriptor

const file_ddex_mead_v11_v11_proto_rawDesc = "" +
	"\n" +
	"\x17ddex/mead/v11/v11.proto\x12\rddex.mead.v11\x1a\x12ddex/avs/avs.proto\"\xcc\x04\n" +
	"\vMeadMessage\x12C\n" +
	"\x0emessage_header\x18\x01 \x01(\v2\x1c.ddex.mead.v11.MessageHeaderR\rmessageHeader\x12'\n" +
	"\x0fsubscription_id\x18\x02 \x01(\tR\x0esubscriptionId\x12S\n" +
	"\x14metadata_source_list\x18\x03 \x01(\v2!.ddex.mead.v11.MetadataSourceListR\x12metadataSourceList\x12V\n" +
	"\x15work_information_list\x18\x04 \x01(\v2\".ddex.mead.v11.WorkInformationListR\x13workInformationList\x12b\n" +
	"\x19resource_information_list\x18\x05 \x01(\v2&.ddex.mead.v11.ResourceInformationListR\x17resourceInformationList\x12_\n" +
	"\x18release_information_list\x18\x06 \x01(\v2%.ddex.mead.v11.ReleaseInformationListR\x16releaseInformationList\x12$\n" +
	"\x0eavs_version_id\x18\a \x01(\tR\favsVersionId\x127\n" +
	"\x18language_and_script_code\x18\b \x01(\tR\x15languageAndScriptCode\"\x85\x05\n" +
	"\x04Feed\x12/\n" +
	"\x06author\x18\x01 \x01(\v2\x15.ddex.mead.v11.PersonH\x00R\x06author\x125\n" +
	"\bcategory\x18\x02 \x01(\v2\x17.ddex.mead.v11.CategoryH\x00R\bcategory\x129\n" +
	"\vcontributor\x18\x03 \x01(\v2\x15.ddex.mead.v11.PersonH\x00R\vcontributor\x128\n" +
	"\tgenerator\x18\x04 \x01(\v2\x18.ddex.mead.v11.GeneratorH\x00R\tgenerator\x12)\n" +
	"\x04icon\x18\x05 \x01(\v2\x13.ddex.mead.v11.IconH\x00R\x04icon\x12#\n" +
	"\x02id\x18\x06 \x01(\v2\x11.ddex.mead.v11.IdH\x00R\x02id\x12)\n" +
	"\x04link\x18\a \x01(\v2\x13.ddex.mead.v11.LinkH\x00R\x04link\x12)\n" +
	"\x04logo\x18\b \x01(\v2\x13.ddex.mead.v11.LogoH\x00R\x04logo\x12-\n" +
	"\x06rights\x18\t \x01(\v2\x13.ddex.mead.v11.TextH\x00R\x06rights\x121\n" +
	"\bsubtitle\x18\n" +
	" \x01(\v2\x13.ddex.mead.v11.TextH\x00R\bsubtitle\x12+\n" +
	"\x05title\x18\v \x01(\v2\x13.ddex.mead.v11.TextH\x00R\x05title\x123\n" +
	"\aupdated\x18\f \x01(\v2\x17.ddex.mead.v11.DateTimeH\x00R\aupdated\x12,\n" +
	"\x05entry\x18\r \x01(\v2\x14.ddex.mead.v11.EntryH\x00R\x05entryB\b\n" +
	"\x06choice\"\xc4\x01\n" +
	"\rAbsolutePitch\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x129\n" +
	"\n" +
	"modulation\x18\x03 \x03(\v2\x19.ddex.mead.v11.ModulationR\n" +
	"modulation\"\xfa\x02\n" +
	"\bActivity\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.ddex.mead.v11.ActivityValueR\x05value\x12E\n" +
	"\vdescription\x18\x03 \x03(\v2#.ddex.mead.v11.TextWithoutTerritoryR\vdescription\x12D\n" +
	"\x1flanguage_and_script_of_activity\x18\x04 \x03(\tR\x1blanguageAndScriptOfActivity\x12I\n" +
	"!territory_of_activity_description\x18\x05 \x03(\tR\x1eterritoryOfActivityDescription\"q\n" +
	"\rActivityValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x91\x03\n" +
	"\x10AlternativeTitle\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x127\n" +
	"\n" +
	"title_text\x18\x02 \x01(\v2\x18.ddex.mead.v11.TitleTextR\ttitleText\x125\n" +
	"\tsub_title\x18\x03 \x01(\v2\x18.ddex.mead.v11.TitleTextR\bsubTitle\x12>\n" +
	"\x1clanguage_and_script_of_title\x18\x04 \x03(\tR\x18languageAndScriptOfTitle\x12\x1d\n" +
	"\n" +
	"title_type\x18\x05 \x01(\tR\ttitleType\x12\x1c\n" +
	"\tnamespace\x18\x06 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\a \x01(\tR\x10userDefinedValue\"\xa3\x01\n" +
	"\n" +
	"Annotation\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x121\n" +
	"\x04text\x18\x02 \x01(\v2\x1d.ddex.mead.v11.TextWithFormatR\x04text\"\xff\x01\n" +
	"\rArtisticStyle\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.ddex.mead.v11.ArtistTypeValueR\x05value\x12T\n" +
	"'territory_of_artistic_style_description\x18\x03 \x03(\tR#territoryOfArtisticStyleDescription\"\xc5\x01\n" +
	"\x0eBeatsPerMinute\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x129\n" +
	"\n" +
	"modulation\x18\x03 \x03(\v2\x19.ddex.mead.v11.ModulationR\n" +
	"modulation\"\xed\x02\n" +
	"\x12ChildWorkHierarchy\x120\n" +
	"\x14is_described_element\x18\x01 \x01(\bR\x12isDescribedElement\x12\x1f\n" +
	"\vis_complete\x18\x02 \x01(\bR\n" +
	"isComplete\x12'\n" +
	"\x0fsequence_number\x18\x03 \x01(\x05R\x0esequenceNumber\x12@\n" +
	"\awork_id\x18\x04 \x01(\v2'.ddex.mead.v11.MusicalWorkIdWithoutFlagR\x06workId\x127\n" +
	"\n" +
	"work_title\x18\x05 \x03(\v2\x18.ddex.mead.v11.WorkTitleR\tworkTitle\x127\n" +
	"\x05child\x18\x06 \x03(\v2!.ddex.mead.v11.ChildWorkHierarchyR\x05child\x12'\n" +
	"\x04form\x18\a \x01(\v2\x13.ddex.mead.v11.FormR\x04form\"\xc8\x01\n" +
	"\vContributor\x12>\n" +
	"\n" +
	"identifier\x18\x01 \x01(\v2\x1e.ddex.mead.v11.DetailedPartyIdR\n" +
	"identifier\x12=\n" +
	"\x04name\x18\x02 \x01(\v2).ddex.mead.v11.PartyNameWithPronunciationR\x04name\x12:\n" +
	"\x04role\x18\x03 \x03(\v2&.ddex.mead.v11.ResourceContributorRoleR\x04role\"\x88\x03\n" +
	"\n" +
	"DanceStyle\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.ddex.mead.v11.DanceStyleValueR\x05value\x12E\n" +
	"\vdescription\x18\x03 \x03(\v2#.ddex.mead.v11.TextWithoutTerritoryR\vdescription\x12I\n" +
	"\"language_and_script_of_dance_style\x18\x04 \x03(\tR\x1dlanguageAndScriptOfDanceStyle\x12N\n" +
	"$territory_of_dance_style_description\x18\x05 \x03(\tR territoryOfDanceStyleDescription\"s\n" +
	"\x0fDanceStyleValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x8d\x04\n" +
	"\x10DerivedRecording\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12E\n" +
	"\vresource_id\x18\x02 \x01(\v2$.ddex.mead.v11.ResourceIdWithoutFlagR\n" +
	"resourceId\x12V\n" +
	"\x15related_resource_type\x18\x03 \x01(\v2\".ddex.mead.v11.RelatedResourceTypeR\x13relatedResourceType\x12;\n" +
	"\x05title\x18\x04 \x03(\v2%.ddex.mead.v11.TitleWithPronunciationR\x05title\x12a\n" +
	"\x13display_artist_name\x18\x05 \x01(\v21.ddex.mead.v11.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12V\n" +
	"\x0edisplay_artist\x18\x06 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\rdisplayArtist\"\xb9\x02\n" +
	"\x0fDisplaySubTitle\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12B\n" +
	"\rpronunciation\x18\x02 \x03(\v2\x1c.ddex.mead.v11.PronunciationR\rpronunciation\x12'\n" +
	"\x0fsequence_number\x18\x03 \x01(\x05R\x0esequenceNumber\x121\n" +
	"\x15is_displayed_in_title\x18\x04 \x01(\bR\x12isDisplayedInTitle\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x06 \x01(\tR\x10userDefinedValue\x12$\n" +
	"\x0esub_title_type\x18\a \x01(\tR\fsubTitleType\"\x98\x02\n" +
	"\fDisplayTitle\x127\n" +
	"\n" +
	"title_text\x18\x01 \x01(\v2\x18.ddex.mead.v11.TitleTextR\ttitleText\x12;\n" +
	"\tsub_title\x18\x02 \x03(\v2\x1e.ddex.mead.v11.DisplaySubTitleR\bsubTitle\x127\n" +
	"\x18language_and_script_code\x18\x03 \x01(\tR\x15languageAndScriptCode\x12:\n" +
	"\x19applicable_territory_code\x18\x04 \x01(\tR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x05 \x01(\bR\tisDefault\"\xb5\x05\n" +
	"\x05Entry\x12/\n" +
	"\x06author\x18\x01 \x01(\v2\x15.ddex.mead.v11.PersonH\x00R\x06author\x125\n" +
	"\bcategory\x18\x02 \x01(\v2\x17.ddex.mead.v11.CategoryH\x00R\bcategory\x122\n" +
	"\acontent\x18\x03 \x01(\v2\x16.ddex.mead.v11.ContentH\x00R\acontent\x129\n" +
	"\vcontributor\x18\x04 \x01(\v2\x15.ddex.mead.v11.PersonH\x00R\vcontributor\x12#\n" +
	"\x02id\x18\x05 \x01(\v2\x11.ddex.mead.v11.IdH\x00R\x02id\x12)\n" +
	"\x04link\x18\x06 \x01(\v2\x13.ddex.mead.v11.LinkH\x00R\x04link\x127\n" +
	"\tpublished\x18\a \x01(\v2\x17.ddex.mead.v11.DateTimeH\x00R\tpublished\x12-\n" +
	"\x06rights\x18\b \x01(\v2\x13.ddex.mead.v11.TextH\x00R\x06rights\x12/\n" +
	"\x06source\x18\t \x01(\v2\x15.ddex.mead.v11.SourceH\x00R\x06source\x12/\n" +
	"\asummary\x18\n" +
	" \x01(\v2\x13.ddex.mead.v11.TextH\x00R\asummary\x12+\n" +
	"\x05title\x18\v \x01(\v2\x13.ddex.mead.v11.TextH\x00R\x05title\x123\n" +
	"\aupdated\x18\f \x01(\v2\x17.ddex.mead.v11.DateTimeH\x00R\aupdated\x12)\n" +
	"\x0fsubscription_id\x18\r \x01(\tH\x00R\x0esubscriptionId\x12$\n" +
	"\x0eavs_version_id\x18\x0e \x01(\tR\favsVersionIdB\b\n" +
	"\x06choice\"\x80\x01\n" +
	"\x04Flag\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value\"\x9a\x01\n" +
	"\x04Form\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.ddex.mead.v11.FormValueR\x05value\"m\n" +
	"\tFormValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xc9\x02\n" +
	"\rGenreCategory\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12T\n" +
	"'territory_of_genre_category_description\x18\x02 \x03(\tR#territoryOfGenreCategoryDescription\x127\n" +
	"\x05value\x18\x03 \x01(\v2!.ddex.mead.v11.GenreCategoryValueR\x05value\x12E\n" +
	"\vdescription\x18\x04 \x03(\v2#.ddex.mead.v11.TextWithoutTerritoryR\vdescription\"\xed\x02\n" +
	"\aHarmony\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12D\n" +
	"\x0froot_chord_note\x18\x02 \x01(\v2\x1c.ddex.mead.v11.RootChordNoteR\rrootChordNote\x12M\n" +
	"\x12root_chord_quality\x18\x03 \x01(\v2\x1f.ddex.mead.v11.RootChordQualityR\x10rootChordQuality\x12'\n" +
	"\x04mode\x18\x04 \x01(\v2\x13.ddex.mead.v11.ModeR\x04mode\x12@\n" +
	"\n" +
	"modulation\x18\x05 \x03(\v2 .ddex.mead.v11.HarmonyModulationR\n" +
	"modulation\"\xd1\x01\n" +
	"\x11HarmonyModulation\x12D\n" +
	"\x0froot_chord_note\x18\x01 \x01(\v2\x1c.ddex.mead.v11.RootChordNoteR\rrootChordNote\x12M\n" +
	"\x12root_chord_quality\x18\x02 \x01(\v2\x1f.ddex.mead.v11.RootChordQualityR\x10rootChordQuality\x12'\n" +
	"\x04mode\x18\x03 \x01(\v2\x13.ddex.mead.v11.ModeR\x04mode\"l\n" +
	"\n" +
	"ImpactDate\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12J\n" +
	"\x0eterritory_code\x18\x02 \x03(\v2#.ddex.mead.v11.CurrentTerritoryCodeR\rterritoryCode\"\xa6\x01\n" +
	"\n" +
	"Instrument\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.ddex.mead.v11.InstrumentValueR\x05value\"\xcb\x01\n" +
	"\x0eInstrumentUsed\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x124\n" +
	"\x05value\x18\x02 \x01(\v2\x1e.ddex.mead.v11.InstrumentValueR\x05value\x12\x1f\n" +
	"\vis_featured\x18\x03 \x01(\bR\n" +
	"isFeatured\"s\n" +
	"\x0fInstrumentValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xa4\x01\n" +
	"\tIntensity\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.ddex.mead.v11.IntensityValueR\x05value\"r\n" +
	"\x0eIntensityValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x8f\x03\n" +
	"\x18LocationAndDateOfSession\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12=\n" +
	"\fsession_type\x18\x02 \x03(\v2\x1a.ddex.mead.v11.SessionTypeR\vsessionType\x12-\n" +
	"\x06period\x18\x03 \x01(\v2\x15.ddex.mead.v11.PeriodR\x06period\x12*\n" +
	"\x05venue\x18\x04 \x03(\v2\x14.ddex.mead.v11.VenueR\x05venue\x127\n" +
	"\acomment\x18\x05 \x01(\v2\x1d.ddex.mead.v11.TextWithFormatR\acomment\x12<\n" +
	"\vcontributor\x18\x06 \x03(\v2\x1a.ddex.mead.v11.ContributorR\vcontributor\"\xcd\x04\n" +
	"\x06Lyrics\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12-\n" +
	"\x04text\x18\x02 \x01(\v2\x19.ddex.mead.v11.LyricsTextR\x04text\x12@\n" +
	"\x1dlanguage_and_script_of_lyrics\x18\x03 \x03(\tR\x19languageAndScriptOfLyrics\x12E\n" +
	"\x1fterritory_of_lyrics_description\x18\x04 \x03(\tR\x1cterritoryOfLyricsDescription\x12B\n" +
	"\rpronunciation\x18\x05 \x03(\v2\x1c.ddex.mead.v11.PronunciationR\rpronunciation\x12'\n" +
	"\x0fsequence_number\x18\x06 \x01(\x05R\x0esequenceNumber\x12\x1f\n" +
	"\vlyrics_type\x18\a \x01(\tR\n" +
	"lyricsType\x122\n" +
	"\x15lyrics_type_namespace\x18\b \x01(\tR\x13lyricsTypeNamespace\x12B\n" +
	"\x1elyrics_type_user_defined_value\x18\t \x01(\tR\x1alyricsTypeUserDefinedValue\x12!\n" +
	"\fis_misquoted\x18\n" +
	" \x01(\bR\visMisquoted\"\xc1\x01\n" +
	"\n" +
	"LyricsText\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x16\n" +
	"\x06format\x18\x02 \x01(\tR\x06format\x12)\n" +
	"\x10format_namespace\x18\x03 \x01(\tR\x0fformatNamespace\x129\n" +
	"\x19format_user_defined_value\x18\x04 \x01(\tR\x16formatUserDefinedValue\x12\x1f\n" +
	"\vis_complete\x18\x05 \x01(\bR\n" +
	"isComplete\"r\n" +
	"\x05Meter\x122\n" +
	"\x16number_of_beats_in_bar\x18\x01 \x01(\x05R\x12numberOfBeatsInBar\x125\n" +
	"\x17note_equivalent_to_beat\x18\x02 \x01(\x05R\x14noteEquivalentToBeat\"h\n" +
	"\x04Mode\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\"\n" +
	"\n" +
	"Modulation\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\xff\x02\n" +
	"\x04Mood\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.ddex.mead.v11.MoodValueR\x05value\x12E\n" +
	"\vdescription\x18\x03 \x03(\v2#.ddex.mead.v11.TextWithoutTerritoryR\vdescription\x12<\n" +
	"\x1blanguage_and_script_of_mood\x18\x04 \x03(\tR\x17languageAndScriptOfMood\x12A\n" +
	"\x1dterritory_of_mood_description\x18\x05 \x03(\tR\x1aterritoryOfMoodDescription\x12\x1b\n" +
	"\tmood_type\x18\x06 \x01(\tR\bmoodType\"\xcf\x01\n" +
	"\tMoodValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\x124\n" +
	"\x16applies_to_composition\x18\x04 \x01(\bR\x14appliesToComposition\x12*\n" +
	"\x11applies_to_lyrics\x18\x05 \x01(\bR\x0fappliesToLyrics\"\xd5\x01\n" +
	"\x05Party\x12\x15\n" +
	"\ai_s_n_i\x18\x01 \x01(\tR\x04iSNI\x12\x15\n" +
	"\ad_p_i_d\x18\x02 \x01(\tR\x04dPID\x12&\n" +
	"\x0fipi_name_number\x18\x03 \x01(\tR\ripiNameNumber\x12\x12\n" +
	"\x05i_p_n\x18\x04 \x01(\tR\x03iPN\x12C\n" +
	"\x0eproprietary_id\x18\x05 \x03(\v2\x1c.ddex.mead.v11.ProprietaryIdR\rproprietaryId\x12\x1d\n" +
	"\n" +
	"party_name\x18\x06 \x01(\tR\tpartyName\"\xc1\x03\n" +
	"\rRecordingPart\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12\x12\n" +
	"\x04unit\x18\x02 \x01(\tR\x04unit\x12\x1f\n" +
	"\vstart_point\x18\x03 \x01(\tR\n" +
	"startPoint\x12\x1b\n" +
	"\tend_point\x18\x04 \x01(\tR\bendPoint\x12P\n" +
	"\x13recording_part_type\x18\x05 \x01(\v2 .ddex.mead.v11.RecordingPartTypeR\x11recordingPartType\x123\n" +
	"\acomment\x18\x06 \x03(\v2\x19.ddex.mead.v11.AnnotationR\acomment\x12J\n" +
	"\x11usage_information\x18\a \x03(\v2\x1d.ddex.mead.v11.TextWithFormatR\x10usageInformation\x12'\n" +
	"\x0fsequence_number\x18\b \x01(\x05R\x0esequenceNumber\"\x90\x03\n" +
	"\vRelatedWork\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12@\n" +
	"\awork_id\x18\x02 \x01(\v2'.ddex.mead.v11.MusicalWorkIdWithoutFlagR\x06workId\x127\n" +
	"\n" +
	"work_title\x18\x03 \x03(\v2\x18.ddex.mead.v11.WorkTitleR\tworkTitle\x12Y\n" +
	"\x16work_relationship_type\x18\x04 \x01(\v2#.ddex.mead.v11.WorkRelationshipTypeR\x14workRelationshipType\x12G\n" +
	"\x06writer\x18\x05 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\x06writer\"\xb6\t\n" +
	"\x12ReleaseInformation\x12F\n" +
	"\x0frelease_summary\x18\x01 \x01(\v2\x1d.ddex.mead.v11.ReleaseSummaryR\x0ereleaseSummary\x12C\n" +
	"\x0egenre_category\x18\x02 \x03(\v2\x1c.ddex.mead.v11.GenreCategoryR\rgenreCategory\x12M\n" +
	"\x12sub_genre_category\x18\x03 \x03(\v2\x1f.ddex.mead.v11.SubGenreCategoryR\x10subGenreCategory\x12*\n" +
	"\x05focus\x18\x04 \x03(\v2\x14.ddex.mead.v11.FocusR\x05focus\x12'\n" +
	"\x04mood\x18\x05 \x03(\v2\x13.ddex.mead.v11.MoodR\x04mood\x12C\n" +
	"\x0eartistic_style\x18\x06 \x03(\v2\x1c.ddex.mead.v11.ArtisticStyleR\rartisticStyle\x12*\n" +
	"\x05theme\x18\a \x03(\v2\x14.ddex.mead.v11.ThemeR\x05theme\x123\n" +
	"\bactivity\x18\b \x03(\v2\x17.ddex.mead.v11.ActivityR\bactivity\x12F\n" +
	"\x0fcommentary_note\x18\t \x03(\v2\x1d.ddex.mead.v11.CommentaryNoteR\x0ecommentaryNote\x12*\n" +
	"\x05epoch\x18\n" +
	" \x03(\v2\x14.ddex.mead.v11.EpochR\x05epoch\x12O\n" +
	"\x12artistic_influence\x18\v \x03(\v2 .ddex.mead.v11.ArtisticInfluenceR\x11artisticInfluence\x12<\n" +
	"\n" +
	"is_similar\x18\f \x03(\v2\x1d.ddex.mead.v11.SimilarReleaseR\tisSimilar\x12n\n" +
	"\x1dhistoric_charting_information\x18\r \x03(\v2*.ddex.mead.v11.HistoricChartingInformationR\x1bhistoricChartingInformation\x12*\n" +
	"\x05award\x18\x0e \x03(\v2\x14.ddex.mead.v11.AwardR\x05award\x12L\n" +
	"\x11alternative_title\x18\x0f \x03(\v2\x1f.ddex.mead.v11.AlternativeTitleR\x10alternativeTitle\x12*\n" +
	"\x05image\x18\x10 \x03(\v2\x14.ddex.mead.v11.ImageR\x05image\x12;\n" +
	"\x1apriority_period_start_date\x18\x11 \x01(\tR\x17priorityPeriodStartDate\x127\n" +
	"\x18priority_period_end_date\x18\x12 \x01(\tR\x15priorityPeriodEndDate\x12:\n" +
	"\x19applicable_territory_code\x18\x13 \x01(\tR\x17applicableTerritoryCode\"l\n" +
	"\x16ReleaseInformationList\x12R\n" +
	"\x13release_information\x18\x01 \x03(\v2!.ddex.mead.v11.ReleaseInformationR\x12releaseInformation\"\xc6\x02\n" +
	"\x0eReleaseSummary\x127\n" +
	"\n" +
	"release_id\x18\x01 \x01(\v2\x18.ddex.mead.v11.ReleaseIdR\treleaseId\x12@\n" +
	"\rdisplay_title\x18\x02 \x03(\v2\x1b.ddex.mead.v11.DisplayTitleR\fdisplayTitle\x12a\n" +
	"\x13display_artist_name\x18\x03 \x03(\v21.ddex.mead.v11.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12V\n" +
	"\x0edisplay_artist\x18\x04 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\rdisplayArtist\"\xc0\x01\n" +
	"\x10RelevantResource\x12E\n" +
	"\vresource_id\x18\x01 \x01(\v2$.ddex.mead.v11.ResourceIdWithoutFlagR\n" +
	"resourceId\x12e\n" +
	"\x1aresource_relationship_type\x18\x02 \x01(\v2'.ddex.mead.v11.ResourceRelationshipTypeR\x18resourceRelationshipType\"\xb5\x13\n" +
	"\x13ResourceInformation\x12I\n" +
	"\x10resource_summary\x18\x01 \x01(\v2\x1e.ddex.mead.v11.ResourceSummaryR\x0fresourceSummary\x12C\n" +
	"\x0egenre_category\x18\x02 \x03(\v2\x1c.ddex.mead.v11.GenreCategoryR\rgenreCategory\x12M\n" +
	"\x12sub_genre_category\x18\x03 \x03(\v2\x1f.ddex.mead.v11.SubGenreCategoryR\x10subGenreCategory\x12'\n" +
	"\x04form\x18\x04 \x01(\v2\x13.ddex.mead.v11.FormR\x04form\x12C\n" +
	"\x0evocal_register\x18\x05 \x03(\v2\x1c.ddex.mead.v11.VocalRegisterR\rvocalRegister\x12*\n" +
	"\x05focus\x18\x06 \x03(\v2\x14.ddex.mead.v11.FocusR\x05focus\x12C\n" +
	"\x0eabsolute_pitch\x18\a \x03(\v2\x1c.ddex.mead.v11.AbsolutePitchR\rabsolutePitch\x12C\n" +
	"\x0etime_signature\x18\b \x03(\v2\x1c.ddex.mead.v11.TimeSignatureR\rtimeSignature\x12/\n" +
	"\x05tempo\x18\t \x03(\v2\x19.ddex.mead.v11.TempoValueR\x05tempo\x12G\n" +
	"\x10beats_per_minute\x18\n" +
	" \x03(\v2\x1d.ddex.mead.v11.BeatsPerMinuteR\x0ebeatsPerMinute\x126\n" +
	"\tintensity\x18\v \x03(\v2\x18.ddex.mead.v11.IntensityR\tintensity\x12F\n" +
	"\x0finstrument_used\x18\f \x03(\v2\x1d.ddex.mead.v11.InstrumentUsedR\x0einstrumentUsed\x120\n" +
	"\aharmony\x18\r \x03(\v2\x16.ddex.mead.v11.HarmonyR\aharmony\x12'\n" +
	"\x04mood\x18\x0e \x03(\v2\x13.ddex.mead.v11.MoodR\x04mood\x12:\n" +
	"\vdance_style\x18\x0f \x03(\v2\x19.ddex.mead.v11.DanceStyleR\n" +
	"danceStyle\x12=\n" +
	"\frhythm_style\x18\x10 \x03(\v2\x1a.ddex.mead.v11.RhythmStyleR\vrhythmStyle\x12C\n" +
	"\x0eartistic_style\x18\x11 \x03(\v2\x1c.ddex.mead.v11.ArtisticStyleR\rartisticStyle\x12*\n" +
	"\x05theme\x18\x12 \x03(\v2\x14.ddex.mead.v11.ThemeR\x05theme\x123\n" +
	"\bactivity\x18\x13 \x03(\v2\x17.ddex.mead.v11.ActivityR\bactivity\x12J\n" +
	"\x11used_musical_work\x18\x14 \x03(\v2\x1e.ddex.mead.v11.UsedMusicalWorkR\x0fusedMusicalWork\x12N\n" +
	"\x10related_resource\x18\x15 \x03(\v2#.ddex.mead.v11.ResourceRelationshipR\x0frelatedResource\x12-\n" +
	"\x06lyrics\x18\x16 \x03(\v2\x15.ddex.mead.v11.LyricsR\x06lyrics\x12F\n" +
	"\x0fcommentary_note\x18\x17 \x03(\v2\x1d.ddex.mead.v11.CommentaryNoteR\x0ecommentaryNote\x12-\n" +
	"\x06sample\x18\x18 \x03(\v2\x15.ddex.mead.v11.SampleR\x06sample\x12C\n" +
	"\x0erecording_part\x18\x19 \x03(\v2\x1c.ddex.mead.v11.RecordingPartR\rrecordingPart\x12*\n" +
	"\x05usage\x18\x1a \x03(\v2\x14.ddex.mead.v11.UsageR\x05usage\x12:\n" +
	"\vimpact_date\x18\x1b \x03(\v2\x19.ddex.mead.v11.ImpactDateR\n" +
	"impactDate\x12I\n" +
	"\x10classical_period\x18\x1c \x01(\v2\x1e.ddex.mead.v11.ClassicalPeriodR\x0fclassicalPeriod\x12*\n" +
	"\x05epoch\x18\x1d \x03(\v2\x14.ddex.mead.v11.EpochR\x05epoch\x12O\n" +
	"\x12artistic_influence\x18\x1e \x03(\v2 .ddex.mead.v11.ArtisticInfluenceR\x11artisticInfluence\x12=\n" +
	"\n" +
	"is_similar\x18\x1f \x03(\v2\x1e.ddex.mead.v11.SimilarResourceR\tisSimilar\x12n\n" +
	"\x1dhistoric_charting_information\x18  \x03(\v2*.ddex.mead.v11.HistoricChartingInformationR\x1bhistoricChartingInformation\x12*\n" +
	"\x05award\x18! \x03(\v2\x14.ddex.mead.v11.AwardR\x05award\x12g\n" +
	"\x1clocation_and_date_of_session\x18\" \x03(\v2'.ddex.mead.v11.LocationAndDateOfSessionR\x18locationAndDateOfSession\x12L\n" +
	"\x11alternative_title\x18# \x03(\v2\x1f.ddex.mead.v11.AlternativeTitleR\x10alternativeTitle\x12*\n" +
	"\x05image\x18$ \x03(\v2\x14.ddex.mead.v11.ImageR\x05image\x12;\n" +
	"\x1apriority_period_start_date\x18% \x01(\tR\x17priorityPeriodStartDate\x127\n" +
	"\x18priority_period_end_date\x18& \x01(\tR\x15priorityPeriodEndDate\x12:\n" +
	"\x19applicable_territory_code\x18' \x01(\tR\x17applicableTerritoryCode\"p\n" +
	"\x17ResourceInformationList\x12U\n" +
	"\x14resource_information\x18\x01 \x03(\v2\".ddex.mead.v11.ResourceInformationR\x13resourceInformation\"\x91\x04\n" +
	"\x14ResourceRelationship\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12E\n" +
	"\vresource_id\x18\x02 \x01(\v2$.ddex.mead.v11.ResourceIdWithoutFlagR\n" +
	"resourceId\x12V\n" +
	"\x15related_resource_type\x18\x03 \x01(\v2\".ddex.mead.v11.RelatedResourceTypeR\x13relatedResourceType\x12;\n" +
	"\x05title\x18\x04 \x03(\v2%.ddex.mead.v11.TitleWithPronunciationR\x05title\x12a\n" +
	"\x13display_artist_name\x18\x05 \x01(\v21.ddex.mead.v11.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12V\n" +
	"\x0edisplay_artist\x18\x06 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\rdisplayArtist\"\xd5\x02\n" +
	"\x0fResourceSummary\x12E\n" +
	"\vresource_id\x18\x01 \x01(\v2$.ddex.mead.v11.ResourceIdWithoutFlagR\n" +
	"resourceId\x12@\n" +
	"\rdisplay_title\x18\x02 \x03(\v2\x1b.ddex.mead.v11.DisplayTitleR\fdisplayTitle\x12a\n" +
	"\x13display_artist_name\x18\x03 \x03(\v21.ddex.mead.v11.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12V\n" +
	"\x0edisplay_artist\x18\x04 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\rdisplayArtist\"\x8e\x03\n" +
	"\vRhythmStyle\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.ddex.mead.v11.RhythmStyleValueR\x05value\x12E\n" +
	"\vdescription\x18\x03 \x03(\v2#.ddex.mead.v11.TextWithoutTerritoryR\vdescription\x12K\n" +
	"#language_and_script_of_rhythm_style\x18\x04 \x03(\tR\x1elanguageAndScriptOfRhythmStyle\x12P\n" +
	"%territory_of_rhythm_style_description\x18\x05 \x03(\tR!territoryOfRhythmStyleDescription\"t\n" +
	"\x10RhythmStyleValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"q\n" +
	"\rRootChordNote\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"t\n" +
	"\x10RootChordQuality\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xbd\x02\n" +
	"\x06Sample\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12I\n" +
	"\x10related_resource\x18\x02 \x01(\v2\x1e.ddex.mead.v11.ResourceSummaryR\x0frelatedResource\x12C\n" +
	"\x0esample_feature\x18\x03 \x03(\v2\x1c.ddex.mead.v11.SampleFeatureR\rsampleFeature\x12?\n" +
	"\vdescription\x18\x04 \x03(\v2\x1d.ddex.mead.v11.TextWithFormatR\vdescription\"^\n" +
	"\rSampleFeature\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"\xe3\x01\n" +
	"\x0eSimilarRelease\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x120\n" +
	"\arelease\x18\x02 \x01(\v2\x16.ddex.mead.v11.ReleaseR\arelease\x12;\n" +
	"\vdescription\x18\x03 \x03(\v2\x19.ddex.mead.v11.AnnotationR\vdescription\"\xe7\x01\n" +
	"\x0fSimilarResource\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x123\n" +
	"\bresource\x18\x02 \x01(\v2\x17.ddex.mead.v11.ResourceR\bresource\x12;\n" +
	"\vdescription\x18\x03 \x03(\v2\x19.ddex.mead.v11.AnnotationR\vdescription\"\xd7\x01\n" +
	"\vSimilarWork\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12'\n" +
	"\x04work\x18\x02 \x01(\v2\x13.ddex.mead.v11.WorkR\x04work\x12;\n" +
	"\vdescription\x18\x03 \x03(\v2\x19.ddex.mead.v11.AnnotationR\vdescription\"\xb2\x01\n" +
	"\x10SubGenreCategory\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12:\n" +
	"\x05value\x18\x02 \x03(\v2$.ddex.mead.v11.SubGenreCategoryValueR\x05value\"n\n" +
	"\n" +
	"TempoValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x87\x03\n" +
	"\x05Theme\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12/\n" +
	"\x05value\x18\x02 \x01(\v2\x19.ddex.mead.v11.ThemeValueR\x05value\x12E\n" +
	"\vdescription\x18\x03 \x03(\v2#.ddex.mead.v11.TextWithoutTerritoryR\vdescription\x12>\n" +
	"\x1clanguage_and_script_of_theme\x18\x04 \x03(\tR\x18languageAndScriptOfTheme\x12C\n" +
	"\x1eterritory_of_theme_description\x18\x05 \x03(\tR\x1bterritoryOfThemeDescription\x12\x1d\n" +
	"\n" +
	"theme_type\x18\x06 \x01(\tR\tthemeType\"n\n" +
	"\n" +
	"ThemeValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xbb\x01\n" +
	"\rTimeSignature\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12F\n" +
	"\n" +
	"modulation\x18\x02 \x03(\v2&.ddex.mead.v11.TimeSignatureModulationR\n" +
	"modulation\"/\n" +
	"\x17TimeSignatureModulation\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\xe8\x02\n" +
	"\x05Usage\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12?\n" +
	"\vdescription\x18\x02 \x03(\v2\x1d.ddex.mead.v11.TextWithFormatR\vdescription\x12C\n" +
	"\x1eterritory_of_usage_description\x18\x03 \x03(\tR\x1bterritoryOfUsageDescription\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x05R\x0esequenceNumber\x12L\n" +
	"\x11relevant_resource\x18\x05 \x03(\v2\x1f.ddex.mead.v11.RelevantResourceR\x10relevantResource\"\x93\x01\n" +
	"\vUsagePeriod\x12C\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2$.ddex.mead.v11.EventDateWithoutFlagsR\tstartDate\x12?\n" +
	"\bend_date\x18\x02 \x01(\v2$.ddex.mead.v11.EventDateWithoutFlagsR\aendDate\"\xbc\x01\n" +
	"\x0fUsedMusicalWork\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12E\n" +
	"\x1fresource_musical_work_reference\x18\x02 \x03(\tR\x1cresourceMusicalWorkReference\"\xcc\x03\n" +
	"\rWorkHierarchy\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x120\n" +
	"\x14is_described_element\x18\x02 \x01(\bR\x12isDescribedElement\x12\x1f\n" +
	"\vis_complete\x18\x03 \x01(\bR\n" +
	"isComplete\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x05R\x0esequenceNumber\x12@\n" +
	"\awork_id\x18\x05 \x01(\v2'.ddex.mead.v11.MusicalWorkIdWithoutFlagR\x06workId\x127\n" +
	"\n" +
	"work_title\x18\x06 \x03(\v2\x18.ddex.mead.v11.WorkTitleR\tworkTitle\x127\n" +
	"\x05child\x18\a \x03(\v2!.ddex.mead.v11.ChildWorkHierarchyR\x05child\x12'\n" +
	"\x04form\x18\b \x01(\v2\x13.ddex.mead.v11.FormR\x04form\"\xef\f\n" +
	"\x0fWorkInformation\x124\n" +
	"\x16musical_work_reference\x18\x01 \x01(\tR\x14musicalWorkReference\x12=\n" +
	"\fwork_summary\x18\x02 \x01(\v2\x1a.ddex.mead.v11.WorkSummaryR\vworkSummary\x12C\n" +
	"\x0egenre_category\x18\x03 \x03(\v2\x1c.ddex.mead.v11.GenreCategoryR\rgenreCategory\x12M\n" +
	"\x12sub_genre_category\x18\x04 \x03(\v2\x1f.ddex.mead.v11.SubGenreCategoryR\x10subGenreCategory\x12'\n" +
	"\x04form\x18\x05 \x01(\v2\x13.ddex.mead.v11.FormR\x04form\x12C\n" +
	"\x0evocal_register\x18\x06 \x03(\v2\x1c.ddex.mead.v11.VocalRegisterR\rvocalRegister\x12*\n" +
	"\x05focus\x18\a \x03(\v2\x14.ddex.mead.v11.FocusR\x05focus\x12C\n" +
	"\x0etime_signature\x18\b \x03(\v2\x1c.ddex.mead.v11.TimeSignatureR\rtimeSignature\x12/\n" +
	"\x05tempo\x18\t \x03(\v2\x19.ddex.mead.v11.TempoValueR\x05tempo\x12F\n" +
	"\x11target_instrument\x18\n" +
	" \x03(\v2\x19.ddex.mead.v11.InstrumentR\x10targetInstrument\x120\n" +
	"\aharmony\x18\v \x03(\v2\x16.ddex.mead.v11.HarmonyR\aharmony\x12'\n" +
	"\x04mood\x18\f \x03(\v2\x13.ddex.mead.v11.MoodR\x04mood\x12:\n" +
	"\vdance_style\x18\r \x03(\v2\x19.ddex.mead.v11.DanceStyleR\n" +
	"danceStyle\x12=\n" +
	"\frhythm_style\x18\x0e \x03(\v2\x1a.ddex.mead.v11.RhythmStyleR\vrhythmStyle\x12*\n" +
	"\x05theme\x18\x0f \x03(\v2\x14.ddex.mead.v11.ThemeR\x05theme\x123\n" +
	"\bactivity\x18\x10 \x03(\v2\x17.ddex.mead.v11.ActivityR\bactivity\x12C\n" +
	"\x0ework_hierarchy\x18\x11 \x03(\v2\x1c.ddex.mead.v11.WorkHierarchyR\rworkHierarchy\x12=\n" +
	"\frelated_work\x18\x12 \x03(\v2\x1a.ddex.mead.v11.RelatedWorkR\vrelatedWork\x12L\n" +
	"\x11derived_recording\x18\x13 \x03(\v2\x1f.ddex.mead.v11.DerivedRecordingR\x10derivedRecording\x12-\n" +
	"\x06lyrics\x18\x14 \x03(\v2\x15.ddex.mead.v11.LyricsR\x06lyrics\x12F\n" +
	"\x0fcommentary_note\x18\x15 \x03(\v2\x1d.ddex.mead.v11.CommentaryNoteR\x0ecommentaryNote\x12I\n" +
	"\x10classical_period\x18\x16 \x01(\v2\x1e.ddex.mead.v11.ClassicalPeriodR\x0fclassicalPeriod\x12*\n" +
	"\x05epoch\x18\x17 \x03(\v2\x14.ddex.mead.v11.EpochR\x05epoch\x12O\n" +
	"\x12artistic_influence\x18\x18 \x03(\v2 .ddex.mead.v11.ArtisticInfluenceR\x11artisticInfluence\x129\n" +
	"\n" +
	"is_similar\x18\x19 \x03(\v2\x1a.ddex.mead.v11.SimilarWorkR\tisSimilar\x12*\n" +
	"\x05award\x18\x1a \x03(\v2\x14.ddex.mead.v11.AwardR\x05award\x12L\n" +
	"\x11alternative_title\x18\x1b \x03(\v2\x1f.ddex.mead.v11.AlternativeTitleR\x10alternativeTitle\"`\n" +
	"\x13WorkInformationList\x12I\n" +
	"\x10work_information\x18\x01 \x03(\v2\x1e.ddex.mead.v11.WorkInformationR\x0fworkInformation\"\xed\x01\n" +
	"\vWorkSummary\x12O\n" +
	"\x0fmusical_work_id\x18\x01 \x01(\v2'.ddex.mead.v11.MusicalWorkIdWithoutFlagR\rmusicalWorkId\x12D\n" +
	"\n" +
	"work_title\x18\x02 \x03(\v2%.ddex.mead.v11.TitleWithPronunciationR\tworkTitle\x12G\n" +
	"\x06writer\x18\x03 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\x06writer\"L\n" +
	"\bCategory\x12\x12\n" +
	"\x04term\x18\x01 \x01(\tR\x04term\x12\x16\n" +
	"\x06scheme\x18\x02 \x01(\tR\x06scheme\x12\x14\n" +
	"\x05label\x18\x03 \x01(\tR\x05label\"/\n" +
	"\aContent\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x10\n" +
	"\x03src\x18\x02 \x01(\tR\x03src\" \n" +
	"\bDateTime\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"M\n" +
	"\tGenerator\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x10\n" +
	"\x03uri\x18\x02 \x01(\tR\x03uri\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\"\x1c\n" +
	"\x04Icon\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x1a\n" +
	"\x02Id\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x8a\x01\n" +
	"\x04Link\x12\x12\n" +
	"\x04href\x18\x01 \x01(\tR\x04href\x12\x10\n" +
	"\x03rel\x18\x02 \x01(\tR\x03rel\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1a\n" +
	"\bhreflang\x18\x04 \x01(\tR\bhreflang\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\x12\x16\n" +
	"\x06length\x18\x06 \x01(\x05R\x06length\"\x1c\n" +
	"\x04Logo\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"h\n" +
	"\x06Person\x12\x14\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x12&\n" +
	"\x03uri\x18\x02 \x01(\v2\x12.ddex.mead.v11.URIH\x00R\x03uri\x12\x16\n" +
	"\x05email\x18\x03 \x01(\tH\x00R\x05emailB\b\n" +
	"\x06choice\"\xd9\x04\n" +
	"\x06Source\x12/\n" +
	"\x06author\x18\x01 \x01(\v2\x15.ddex.mead.v11.PersonH\x00R\x06author\x125\n" +
	"\bcategory\x18\x02 \x01(\v2\x17.ddex.mead.v11.CategoryH\x00R\bcategory\x129\n" +
	"\vcontributor\x18\x03 \x01(\v2\x15.ddex.mead.v11.PersonH\x00R\vcontributor\x128\n" +
	"\tgenerator\x18\x04 \x01(\v2\x18.ddex.mead.v11.GeneratorH\x00R\tgenerator\x12)\n" +
	"\x04icon\x18\x05 \x01(\v2\x13.ddex.mead.v11.IconH\x00R\x04icon\x12#\n" +
	"\x02id\x18\x06 \x01(\v2\x11.ddex.mead.v11.IdH\x00R\x02id\x12)\n" +
	"\x04link\x18\a \x01(\v2\x13.ddex.mead.v11.LinkH\x00R\x04link\x12)\n" +
	"\x04logo\x18\b \x01(\v2\x13.ddex.mead.v11.LogoH\x00R\x04logo\x12-\n" +
	"\x06rights\x18\t \x01(\v2\x13.ddex.mead.v11.TextH\x00R\x06rights\x121\n" +
	"\bsubtitle\x18\n" +
	" \x01(\v2\x13.ddex.mead.v11.TextH\x00R\bsubtitle\x12+\n" +
	"\x05title\x18\v \x01(\v2\x13.ddex.mead.v11.TextH\x00R\x05title\x123\n" +
	"\aupdated\x18\f \x01(\v2\x17.ddex.mead.v11.DateTimeH\x00R\aupdatedB\b\n" +
	"\x06choice\"\x1a\n" +
	"\x04Text\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\"\x1b\n" +
	"\x03URI\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"Q\n" +
	"\x10AllTerritoryCode\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12'\n" +
	"\x0fidentifier_type\x18\x02 \x01(\tR\x0eidentifierType\"s\n" +
	"\x0fArtistTypeValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xd9\x03\n" +
	"\x11ArtisticInfluence\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12E\n" +
	"\x05party\x18\x02 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\x05party\x12'\n" +
	"\x04work\x18\x03 \x03(\v2\x13.ddex.mead.v11.WorkR\x04work\x123\n" +
	"\bresource\x18\x04 \x03(\v2\x17.ddex.mead.v11.ResourceR\bresource\x120\n" +
	"\arelease\x18\x05 \x03(\v2\x16.ddex.mead.v11.ReleaseR\arelease\x12?\n" +
	"\vdescription\x18\x06 \x03(\v2\x1d.ddex.mead.v11.TextWithFormatR\vdescription\x12#\n" +
	"\ris_influenced\x18\a \x01(\bR\fisInfluenced\x12#\n" +
	"\ris_influencer\x18\b \x01(\bR\fisInfluencer\"\xed\x03\n" +
	"\x05Award\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12T\n" +
	"\rawarding_body\x18\x02 \x01(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\fawardingBody\x12T\n" +
	"\rawarded_party\x18\x03 \x01(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\fawardedParty\x12P\n" +
	"\n" +
	"award_name\x18\x04 \x01(\v21.ddex.mead.v11.NameWithPronunciationAndScriptCodeR\tawardName\x12,\n" +
	"\x04date\x18\x05 \x01(\v2\x18.ddex.mead.v11.EventDateR\x04date\x12\x1b\n" +
	"\tis_winner\x18\x06 \x01(\bR\bisWinner\x127\n" +
	"\acomment\x18\a \x03(\v2\x1d.ddex.mead.v11.TextWithFormatR\acomment\"C\n" +
	"\rCatalogNumber\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"\xaa\x01\n" +
	"\n" +
	"ChartEntry\x12\x1a\n" +
	"\bposition\x18\x01 \x01(\x05R\bposition\x12\x12\n" +
	"\x04date\x18\x02 \x01(\tR\x04date\x123\n" +
	"\bduration\x18\x03 \x01(\v2\x17.ddex.mead.v11.DurationR\bduration\x127\n" +
	"\acomment\x18\x04 \x03(\v2\x1d.ddex.mead.v11.TextWithFormatR\acomment\"\xd4\x02\n" +
	"\x0fClassicalPeriod\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12.\n" +
	"\x04name\x18\x02 \x01(\v2\x1a.ddex.mead.v11.PeriodValueR\x04name\x12S\n" +
	"'language_and_script_of_classical_period\x18\x03 \x03(\tR\"languageAndScriptOfClassicalPeriod\x12X\n" +
	")territory_of_classical_period_description\x18\x04 \x03(\tR%territoryOfClassicalPeriodDescription\"\xf6\x03\n" +
	"\x0eCommentaryNote\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x127\n" +
	"\x04text\x18\x02 \x03(\v2#.ddex.mead.v11.TextWithoutTerritoryR\x04text\x12S\n" +
	"\x14commentary_note_type\x18\x03 \x03(\v2!.ddex.mead.v11.CommentaryNoteTypeR\x12commentaryNoteType\x12Q\n" +
	"&language_and_script_of_commentary_note\x18\x04 \x03(\tR!languageAndScriptOfCommentaryNote\x12V\n" +
	"(territory_of_commentary_note_description\x18\x05 \x03(\tR$territoryOfCommentaryNoteDescription\x12G\n" +
	"\x06author\x18\x06 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\x06author\"v\n" +
	"\x12CommentaryNoteType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"U\n" +
	"\x14CurrentTerritoryCode\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12'\n" +
	"\x0fidentifier_type\x18\x02 \x01(\tR\x0eidentifierType\"C\n" +
	"\x04Date\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\"\xcf\x01\n" +
	"\x0fDetailedHashSum\x12A\n" +
	"\talgorithm\x18\x01 \x01(\v2#.ddex.mead.v11.HashSumAlgorithmTypeR\talgorithm\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tparameter\x18\x03 \x01(\tR\tparameter\x12\x1b\n" +
	"\tdata_type\x18\x04 \x01(\tR\bdataType\x12$\n" +
	"\x0ehash_sum_value\x18\x05 \x01(\tR\fhashSumValue\"\xea\x01\n" +
	"\x0fDetailedPartyId\x12\x15\n" +
	"\ai_s_n_i\x18\x01 \x01(\tR\x04iSNI\x12\x15\n" +
	"\ad_p_i_d\x18\x02 \x01(\tR\x04dPID\x12&\n" +
	"\x0fipi_name_number\x18\x03 \x01(\tR\ripiNameNumber\x12\x12\n" +
	"\x05i_p_n\x18\x04 \x01(\tR\x03iPN\x12(\n" +
	"\x10cisac_society_id\x18\x05 \x01(\tR\x0ecisacSocietyId\x12C\n" +
	"\x0eproprietary_id\x18\x06 \x03(\v2\x1c.ddex.mead.v11.ProprietaryIdR\rproprietaryId\"\xc8\x01\n" +
	"\x1cDisplayArtistNameWithDefault\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12:\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\tR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\"\xa9\x01\n" +
	"\"DisplayArtistNameWithPronunciation\x12?\n" +
	"\x04name\x18\x01 \x01(\v2+.ddex.mead.v11.DisplayArtistNameWithDefaultR\x04name\x12B\n" +
	"\rpronunciation\x18\x02 \x03(\v2\x1c.ddex.mead.v11.PronunciationR\rpronunciation\"\x96\x01\n" +
	"\bDuration\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12(\n" +
	"\x10unit_of_duration\x18\x02 \x01(\tR\x0eunitOfDuration\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x04 \x01(\tR\x10userDefinedValue\"\xa2\x04\n" +
	"\x05Epoch\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12)\n" +
	"\x05value\x18\x02 \x03(\v2\x13.ddex.mead.v11.NameR\x05value\x12V\n" +
	"\x0erelated_artist\x18\x03 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\rrelatedArtist\x12I\n" +
	"\x10related_creation\x18\x04 \x03(\v2\x1e.ddex.mead.v11.RelatedCreationR\x0frelatedCreation\x122\n" +
	"\n" +
	"start_date\x18\x05 \x01(\v2\x13.ddex.mead.v11.DateR\tstartDate\x12.\n" +
	"\bend_date\x18\x06 \x01(\v2\x13.ddex.mead.v11.DateR\aendDate\x12>\n" +
	"\x1clanguage_and_script_of_epoch\x18\a \x03(\tR\x18languageAndScriptOfEpoch\x12C\n" +
	"\x1eterritory_of_epoch_description\x18\b \x03(\tR\x1bterritoryOfEpochDescription\"\xa8\x02\n" +
	"\tEventDate\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\x12\x1b\n" +
	"\tis_before\x18\x03 \x01(\bR\bisBefore\x12\x19\n" +
	"\bis_after\x18\x04 \x01(\bR\aisAfter\x12:\n" +
	"\x19applicable_territory_code\x18\x05 \x01(\tR\x17applicableTerritoryCode\x121\n" +
	"\x14location_description\x18\x06 \x01(\tR\x13locationDescription\x127\n" +
	"\x18language_and_script_code\x18\a \x01(\tR\x15languageAndScriptCode\"\x97\x02\n" +
	"\rEventDateTime\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\x12\x1b\n" +
	"\tis_before\x18\x03 \x01(\bR\bisBefore\x12\x19\n" +
	"\bis_after\x18\x04 \x01(\bR\aisAfter\x12%\n" +
	"\x0eterritory_code\x18\x05 \x01(\tR\rterritoryCode\x121\n" +
	"\x14location_description\x18\x06 \x01(\tR\x13locationDescription\x127\n" +
	"\x18language_and_script_code\x18\a \x01(\tR\x15languageAndScriptCode\"r\n" +
	"\x04File\x12\x12\n" +
	"\x05u_r_i\x18\x01 \x01(\tR\x03uRI\x129\n" +
	"\bhash_sum\x18\x02 \x01(\v2\x1e.ddex.mead.v11.DetailedHashSumR\ahashSum\x12\x1b\n" +
	"\tfile_size\x18\x03 \x01(\tR\bfileSize\"\xea\x05\n" +
	"\x05Focus\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12E\n" +
	"\x05party\x18\x02 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\x05party\x12a\n" +
	"\x13display_artist_name\x18\x03 \x03(\v21.ddex.mead.v11.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12V\n" +
	"\x0edisplay_artist\x18\x04 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\rdisplayArtist\x12G\n" +
	"\x06writer\x18\x05 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\x06writer\x12'\n" +
	"\x0fsequence_number\x18\x06 \x01(\x05R\x0esequenceNumber\x12P\n" +
	"\x15period_of_being_focus\x18\a \x03(\v2\x1d.ddex.mead.v11.PeriodWithTimeR\x12periodOfBeingFocus\x12Y\n" +
	"*territory_of_being_focus_track_description\x18\b \x03(\tR%territoryOfBeingFocusTrackDescription\x12=\n" +
	"\acomment\x18\t \x03(\v2#.ddex.mead.v11.TextWithoutTerritoryR\acomment\x12\x1d\n" +
	"\n" +
	"is_default\x18\n" +
	" \x01(\bR\tisDefault\"\xaf\x01\n" +
	"\x12GenreCategoryValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x04 \x01(\tR\x10userDefinedValue\"x\n" +
	"\x14HashSumAlgorithmType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xfe\x03\n" +
	"\x1bHistoricChartingInformation\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12J\n" +
	"\x0eterritory_code\x18\x02 \x01(\v2#.ddex.mead.v11.CurrentTerritoryCodeR\rterritoryCode\x12P\n" +
	"\n" +
	"chart_name\x18\x03 \x03(\v21.ddex.mead.v11.NameWithPronunciationAndScriptCodeR\tchartName\x12E\n" +
	"\x12duration_in_charts\x18\x04 \x01(\v2\x17.ddex.mead.v11.DurationR\x10durationInCharts\x12!\n" +
	"\ftop_position\x18\x05 \x01(\x05R\vtopPosition\x12:\n" +
	"\vchart_entry\x18\x06 \x03(\v2\x19.ddex.mead.v11.ChartEntryR\n" +
	"chartEntry\x127\n" +
	"\acomment\x18\a \x03(\v2\x1d.ddex.mead.v11.TextWithFormatR\acomment\"\xcd\x01\n" +
	"\x05Image\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x12'\n" +
	"\x04file\x18\x02 \x01(\v2\x13.ddex.mead.v11.FileR\x04file\x127\n" +
	"\n" +
	"image_type\x18\x03 \x03(\v2\x18.ddex.mead.v11.ImageTypeR\timageType\"m\n" +
	"\tImageType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"u\n" +
	"\x11MessageAuditTrail\x12`\n" +
	"\x19message_audit_trail_event\x18\x01 \x03(\v2%.ddex.mead.v11.MessageAuditTrailEventR\x16messageAuditTrailEvent\"\x9d\x01\n" +
	"\x16MessageAuditTrailEvent\x12f\n" +
	"\x1amessaging_party_descriptor\x18\x01 \x01(\v2(.ddex.mead.v11.MessagingPartyWithoutCodeR\x18messagingPartyDescriptor\x12\x1b\n" +
	"\tdate_time\x18\x02 \x01(\tR\bdateTime\"\xc2\x04\n" +
	"\rMessageHeader\x12*\n" +
	"\x11message_thread_id\x18\x01 \x01(\tR\x0fmessageThreadId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12*\n" +
	"\x11message_file_name\x18\x03 \x01(\tR\x0fmessageFileName\x12O\n" +
	"\x0emessage_sender\x18\x04 \x01(\v2(.ddex.mead.v11.MessagingPartyWithoutCodeR\rmessageSender\x12S\n" +
	"\x11sent_on_behalf_of\x18\x05 \x01(\v2(.ddex.mead.v11.MessagingPartyWithoutCodeR\x0esentOnBehalfOf\x12U\n" +
	"\x11message_recipient\x18\x06 \x03(\v2(.ddex.mead.v11.MessagingPartyWithoutCodeR\x10messageRecipient\x129\n" +
	"\x19message_created_date_time\x18\a \x01(\tR\x16messageCreatedDateTime\x12P\n" +
	"\x13message_audit_trail\x18\b \x01(\v2 .ddex.mead.v11.MessageAuditTrailR\x11messageAuditTrail\x120\n" +
	"\x14message_control_type\x18\t \x01(\tR\x12messageControlType\"\x9d\x01\n" +
	"\x19MessagingPartyWithoutCode\x12\x19\n" +
	"\bparty_id\x18\x01 \x01(\tR\apartyId\x12B\n" +
	"\n" +
	"party_name\x18\x02 \x01(\v2#.ddex.mead.v11.PartyNameWithoutCodeR\tpartyName\x12!\n" +
	"\ftrading_name\x18\x03 \x01(\tR\vtradingName\"\x90\x01\n" +
	"\x0eMetadataSource\x12)\n" +
	"\x10source_reference\x18\x01 \x01(\tR\x0fsourceReference\x12S\n" +
	"\x14metadata_source_type\x18\x02 \x01(\v2!.ddex.mead.v11.MetadataSourceTypeR\x12metadataSourceType\"\\\n" +
	"\x12MetadataSourceList\x12F\n" +
	"\x0fmetadata_source\x18\x01 \x03(\v2\x1d.ddex.mead.v11.MetadataSourceR\x0emetadataSource\"\x8f\x01\n" +
	"\x17MetadataSourceReference\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12.\n" +
	"\x13assertion_date_time\x18\x02 \x01(\tR\x11assertionDateTime\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x16\n" +
	"\x06weight\x18\x04 \x01(\tR\x06weight\"v\n" +
	"\x12MetadataSourceType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xcf\x01\n" +
	"\x18MusicalWorkIdWithoutFlag\x12\x15\n" +
	"\ai_s_w_c\x18\x01 \x01(\tR\x04iSWC\x12\x1f\n" +
	"\vopus_number\x18\x02 \x01(\tR\n" +
	"opusNumber\x126\n" +
	"\x17composer_catalog_number\x18\x03 \x03(\tR\x15composerCatalogNumber\x12C\n" +
	"\x0eproprietary_id\x18\x04 \x03(\v2\x1c.ddex.mead.v11.ProprietaryIdR\rproprietaryId\"U\n" +
	"\x04Name\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"\x91\x01\n" +
	"\"NameWithPronunciationAndScriptCode\x12'\n" +
	"\x04name\x18\x01 \x01(\v2\x13.ddex.mead.v11.NameR\x04name\x12B\n" +
	"\rpronunciation\x18\x02 \x03(\v2\x1c.ddex.mead.v11.PronunciationR\rpronunciation\"i\n" +
	" PartyDescriptorWithPronunciation\x12;\n" +
	"\bparty_id\x18\x01 \x01(\v2\x1e.ddex.mead.v11.DetailedPartyIdH\x00R\apartyIdB\b\n" +
	"\x06choice\"\xa8\x06\n" +
	"\x1aPartyNameWithPronunciation\x12N\n" +
	"\tfull_name\x18\x01 \x01(\v21.ddex.mead.v11.NameWithPronunciationAndScriptCodeR\bfullName\x12p\n" +
	"\x1bfull_name_ascii_transcribed\x18\x02 \x01(\v21.ddex.mead.v11.NameWithPronunciationAndScriptCodeR\x18fullNameAsciiTranscribed\x12]\n" +
	"\x11full_name_indexed\x18\x03 \x01(\v21.ddex.mead.v11.NameWithPronunciationAndScriptCodeR\x0ffullNameIndexed\x12d\n" +
	"\x15names_before_key_name\x18\x04 \x01(\v21.ddex.mead.v11.NameWithPronunciationAndScriptCodeR\x12namesBeforeKeyName\x12L\n" +
	"\bkey_name\x18\x05 \x01(\v21.ddex.mead.v11.NameWithPronunciationAndScriptCodeR\akeyName\x12b\n" +
	"\x14names_after_key_name\x18\x06 \x01(\v21.ddex.mead.v11.NameWithPronunciationAndScriptCodeR\x11namesAfterKeyName\x12\\\n" +
	"\x10abbreviated_name\x18\a \x01(\v21.ddex.mead.v11.NameWithPronunciationAndScriptCodeR\x0fabbreviatedName\x127\n" +
	"\x18language_and_script_code\x18\b \x01(\tR\x15languageAndScriptCode\x12:\n" +
	"\x19applicable_territory_code\x18\t \x01(\tR\x17applicableTerritoryCode\"\xc8\x02\n" +
	"\x14PartyNameWithoutCode\x12\x1b\n" +
	"\tfull_name\x18\x01 \x01(\tR\bfullName\x12=\n" +
	"\x1bfull_name_ascii_transcribed\x18\x02 \x01(\tR\x18fullNameAsciiTranscribed\x12*\n" +
	"\x11full_name_indexed\x18\x03 \x01(\tR\x0ffullNameIndexed\x121\n" +
	"\x15names_before_key_name\x18\x04 \x01(\tR\x12namesBeforeKeyName\x12\x19\n" +
	"\bkey_name\x18\x05 \x01(\tR\akeyName\x12/\n" +
	"\x14names_after_key_name\x18\x06 \x01(\tR\x11namesAfterKeyName\x12)\n" +
	"\x10abbreviated_name\x18\a \x01(\tR\x0fabbreviatedName\"\b\n" +
	"\x06Period\"o\n" +
	"\vPeriodValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\\\n" +
	"\x0ePeriodWithTime\x12&\n" +
	"\x0fstart_date_time\x18\x01 \x01(\tR\rstartDateTime\x12\"\n" +
	"\rend_date_time\x18\x02 \x01(\tR\vendDateTime\"\x80\x02\n" +
	"\rPronunciation\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12!\n" +
	"\fis_canonical\x18\x02 \x01(\bR\visCanonical\x12#\n" +
	"\rlanguage_code\x18\x03 \x01(\tR\flanguageCode\x12#\n" +
	"\rencoding_type\x18\x04 \x01(\tR\fencodingType\x12-\n" +
	"\x12encoding_namespace\x18\x05 \x01(\tR\x11encodingNamespace\x12=\n" +
	"\x1bencoding_user_defined_value\x18\x06 \x01(\tR\x18encodingUserDefinedValue\"C\n" +
	"\rProprietaryId\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"u\n" +
	"\x11RecordingPartType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"N\n" +
	"\x0fRelatedCreation\x12;\n" +
	"\x05title\x18\x01 \x01(\v2%.ddex.mead.v11.TitleWithPronunciationR\x05title\"w\n" +
	"\x13RelatedResourceType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xe8\x02\n" +
	"\aRelease\x12\x13\n" +
	"\x05g_rid\x18\x01 \x01(\tR\x04gRid\x12\x15\n" +
	"\ai_c_p_n\x18\x02 \x01(\tR\x04iCPN\x124\n" +
	"\x16proprietary_release_id\x18\x03 \x01(\tR\x14proprietaryReleaseId\x12@\n" +
	"\rrelease_title\x18\x04 \x03(\v2\x1b.ddex.mead.v11.ReleaseTitleR\freleaseTitle\x12a\n" +
	"\x13display_artist_name\x18\x05 \x03(\v21.ddex.mead.v11.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12V\n" +
	"\x0edisplay_artist\x18\x06 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\rdisplayArtist\"\xd8\x01\n" +
	"\tReleaseId\x12\x13\n" +
	"\x05g_rid\x18\x01 \x01(\tR\x04gRid\x12\x15\n" +
	"\ai_s_r_c\x18\x02 \x01(\tR\x04iSRC\x12\x15\n" +
	"\ai_c_p_n\x18\x03 \x01(\tR\x04iCPN\x12C\n" +
	"\x0ecatalog_number\x18\x04 \x01(\v2\x1c.ddex.mead.v11.CatalogNumberR\rcatalogNumber\x12C\n" +
	"\x0eproprietary_id\x18\x05 \x03(\v2\x1c.ddex.mead.v11.ProprietaryIdR\rproprietaryId\"]\n" +
	"\fReleaseTitle\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"\x80\x03\n" +
	"\bResource\x12\x15\n" +
	"\ai_s_r_c\x18\x01 \x01(\tR\x04iSRC\x12%\n" +
	"\x0ecatalog_number\x18\x02 \x01(\tR\rcatalogNumber\x126\n" +
	"\x17proprietary_resource_id\x18\x03 \x01(\tR\x15proprietaryResourceId\x12C\n" +
	"\x0eresource_title\x18\x04 \x03(\v2\x1c.ddex.mead.v11.ResourceTitleR\rresourceTitle\x12a\n" +
	"\x13display_artist_name\x18\x05 \x03(\v21.ddex.mead.v11.DisplayArtistNameWithPronunciationR\x11displayArtistName\x12V\n" +
	"\x0edisplay_artist\x18\x06 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\rdisplayArtist\"{\n" +
	"\x17ResourceContributorRole\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xc5\x02\n" +
	"\x15ResourceIdWithoutFlag\x12\x15\n" +
	"\ai_s_r_c\x18\x01 \x01(\tR\x04iSRC\x12\x15\n" +
	"\ai_s_m_n\x18\x02 \x01(\tR\x04iSMN\x12\x15\n" +
	"\ai_s_a_n\x18\x03 \x01(\tR\x04iSAN\x12\x18\n" +
	"\tv_i_s_a_n\x18\x04 \x01(\tR\x05vISAN\x12\x15\n" +
	"\ai_s_b_n\x18\x05 \x01(\tR\x04iSBN\x12\x15\n" +
	"\ai_s_s_n\x18\x06 \x01(\tR\x04iSSN\x12\x15\n" +
	"\as_i_c_i\x18\a \x01(\tR\x04sICI\x12C\n" +
	"\x0ecatalog_number\x18\b \x01(\v2\x1c.ddex.mead.v11.CatalogNumberR\rcatalogNumber\x12C\n" +
	"\x0eproprietary_id\x18\t \x03(\v2\x1c.ddex.mead.v11.ProprietaryIdR\rproprietaryId\"|\n" +
	"\x18ResourceRelationshipType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"^\n" +
	"\rResourceTitle\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"o\n" +
	"\vSessionType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"y\n" +
	"\x15SubGenreCategoryValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x9e\x02\n" +
	"\x0eTextWithFormat\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12:\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\tR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\x12\x16\n" +
	"\x06format\x18\x05 \x01(\tR\x06format\x12\x1c\n" +
	"\tnamespace\x18\x06 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\a \x01(\tR\x10userDefinedValue\"\xa4\x02\n" +
	"\x14TextWithoutTerritory\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12:\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\tR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\x12\x16\n" +
	"\x06format\x18\x05 \x01(\tR\x06format\x12\x1c\n" +
	"\tnamespace\x18\x06 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\a \x01(\tR\x10userDefinedValue\"e\n" +
	"\tTitleText\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12B\n" +
	"\rpronunciation\x18\x02 \x03(\v2\x1c.ddex.mead.v11.PronunciationR\rpronunciation\"\xac\x02\n" +
	"\x16TitleWithPronunciation\x127\n" +
	"\n" +
	"title_text\x18\x01 \x01(\v2\x18.ddex.mead.v11.TitleTextR\ttitleText\x125\n" +
	"\tsub_title\x18\x02 \x01(\v2\x18.ddex.mead.v11.TitleTextR\bsubTitle\x127\n" +
	"\x18language_and_script_code\x18\x03 \x01(\tR\x15languageAndScriptCode\x12\x1d\n" +
	"\n" +
	"title_type\x18\x04 \x01(\tR\ttitleType\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x06 \x01(\tR\x10userDefinedValue\"\xd7\x01\n" +
	"\x05Venue\x12\x1d\n" +
	"\n" +
	"venue_name\x18\x01 \x01(\tR\tvenueName\x12#\n" +
	"\rvenue_address\x18\x02 \x01(\tR\fvenueAddress\x12F\n" +
	"\x0eterritory_code\x18\x03 \x01(\v2\x1f.ddex.mead.v11.AllTerritoryCodeR\rterritoryCode\x12#\n" +
	"\rlocation_code\x18\x04 \x01(\tR\flocationCode\x12\x1d\n" +
	"\n" +
	"venue_room\x18\x05 \x01(\tR\tvenueRoom\"\xac\x01\n" +
	"\rVocalRegister\x12b\n" +
	"\x19metadata_source_reference\x18\x01 \x03(\v2&.ddex.mead.v11.MetadataSourceReferenceR\x17metadataSourceReference\x127\n" +
	"\x05value\x18\x02 \x01(\v2!.ddex.mead.v11.VocalRegisterValueR\x05value\"v\n" +
	"\x12VocalRegisterValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xcf\x01\n" +
	"\x04Work\x12\x15\n" +
	"\ai_s_w_c\x18\x01 \x01(\tR\x04iSWC\x12.\n" +
	"\x13proprietary_work_id\x18\x02 \x01(\tR\x11proprietaryWorkId\x127\n" +
	"\n" +
	"work_title\x18\x03 \x03(\v2\x18.ddex.mead.v11.WorkTitleR\tworkTitle\x12G\n" +
	"\x06writer\x18\x04 \x03(\v2/.ddex.mead.v11.PartyDescriptorWithPronunciationR\x06writer\"x\n" +
	"\x14WorkRelationshipType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"Z\n" +
	"\tWorkTitle\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"\xfc\x01\n" +
	"\x15EventDateWithoutFlags\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\x12:\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\tR\x17applicableTerritoryCode\x121\n" +
	"\x14location_description\x18\x04 \x01(\tR\x13locationDescription\x127\n" +
	"\x18language_and_script_code\x18\x05 \x01(\tR\x15languageAndScriptCode\"N\n" +
	"\x06Timing\x12\x1f\n" +
	"\vstart_point\x18\x01 \x01(\tR\n" +
	"startPoint\x12#\n" +
	"\rduration_used\x18\x02 \x01(\tR\fdurationUsedB\xa3\x01\n" +
	"\x11com.ddex.mead.v11B\bV11ProtoP\x01Z.github.com/alecsavvy/ddex-go/gen/ddex/mead/v11\xa2\x02\x03DMX\xaa\x02\rDdex.Mead.V11\xca\x02\rDdex\\Mead\\V11\xe2\x02\x19Ddex\\Mead\\V11\\GPBMetadata\xea\x02\x0fDdex::Mead::V11b\x06proto3"

var (
	file_ddex_mead_v11_v11_proto_rawDescOnce sync.Once
	file_ddex_mead_v11_v11_proto_rawDescData []byte
)

func file_ddex_mead_v11_v11_proto_rawDescGZIP() []byte {
	file_ddex_mead_v11_v11_proto_rawDescOnce.Do(func() {
		file_ddex_mead_v11_v11_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ddex_mead_v11_v11_proto_rawDesc), len(file_ddex_mead_v11_v11_proto_rawDesc)))
	})
	return file_ddex_mead_v11_v11_proto_rawDescData
}

var file_ddex_mead_v11_v11_proto_msgTypes = make([]protoimpl.MessageInfo, 152)
var file_ddex_mead_v11_v11_proto_goTypes = []any{
	(*MeadMessage)(nil),                        // 0: ddex.mead.v11.MeadMessage
	(*Feed)(nil),                               // 1: ddex.mead.v11.Feed
	(*AbsolutePitch)(nil),                      // 2: ddex.mead.v11.AbsolutePitch
	(*Activity)(nil),                           // 3: ddex.mead.v11.Activity
	(*ActivityValue)(nil),                      // 4: ddex.mead.v11.ActivityValue
	(*AlternativeTitle)(nil),                   // 5: ddex.mead.v11.AlternativeTitle
	(*Annotation)(nil),                         // 6: ddex.mead.v11.Annotation
	(*ArtisticStyle)(nil),                      // 7: ddex.mead.v11.ArtisticStyle
	(*BeatsPerMinute)(nil),                     // 8: ddex.mead.v11.BeatsPerMinute
	(*ChildWorkHierarchy)(nil),                 // 9: ddex.mead.v11.ChildWorkHierarchy
	(*Contributor)(nil),                        // 10: ddex.mead.v11.Contributor
	(*DanceStyle)(nil),                         // 11: ddex.mead.v11.DanceStyle
	(*DanceStyleValue)(nil),                    // 12: ddex.mead.v11.DanceStyleValue
	(*DerivedRecording)(nil),                   // 13: ddex.mead.v11.DerivedRecording
	(*DisplaySubTitle)(nil),                    // 14: ddex.mead.v11.DisplaySubTitle
	(*DisplayTitle)(nil),                       // 15: ddex.mead.v11.DisplayTitle
	(*Entry)(nil),                              // 16: ddex.mead.v11.Entry
	(*Flag)(nil),                               // 17: ddex.mead.v11.Flag
	(*Form)(nil),                               // 18: ddex.mead.v11.Form
	(*FormValue)(nil),                          // 19: ddex.mead.v11.FormValue
	(*GenreCategory)(nil),                      // 20: ddex.mead.v11.GenreCategory
	(*Harmony)(nil),                            // 21: ddex.mead.v11.Harmony
	(*HarmonyModulation)(nil),                  // 22: ddex.mead.v11.HarmonyModulation
	(*ImpactDate)(nil),                         // 23: ddex.mead.v11.ImpactDate
	(*Instrument)(nil),                         // 24: ddex.mead.v11.Instrument
	(*InstrumentUsed)(nil),                     // 25: ddex.mead.v11.InstrumentUsed
	(*InstrumentValue)(nil),                    // 26: ddex.mead.v11.InstrumentValue
	(*Intensity)(nil),                          // 27: ddex.mead.v11.Intensity
	(*IntensityValue)(nil),                     // 28: ddex.mead.v11.IntensityValue
	(*LocationAndDateOfSession)(nil),           // 29: ddex.mead.v11.LocationAndDateOfSession
	(*Lyrics)(nil),                             // 30: ddex.mead.v11.Lyrics
	(*LyricsText)(nil),                         // 31: ddex.mead.v11.LyricsText
	(*Meter)(nil),                              // 32: ddex.mead.v11.Meter
	(*Mode)(nil),                               // 33: ddex.mead.v11.Mode
	(*Modulation)(nil),                         // 34: ddex.mead.v11.Modulation
	(*Mood)(nil),                               // 35: ddex.mead.v11.Mood
	(*MoodValue)(nil),                          // 36: ddex.mead.v11.MoodValue
	(*Party)(nil),                              // 37: ddex.mead.v11.Party
	(*RecordingPart)(nil),                      // 38: ddex.mead.v11.RecordingPart
	(*RelatedWork)(nil),                        // 39: ddex.mead.v11.RelatedWork
	(*ReleaseInformation)(nil),                 // 40: ddex.mead.v11.ReleaseInformation
	(*ReleaseInformationList)(nil),             // 41: ddex.mead.v11.ReleaseInformationList
	(*ReleaseSummary)(nil),                     // 42: ddex.mead.v11.ReleaseSummary
	(*RelevantResource)(nil),                   // 43: ddex.mead.v11.RelevantResource
	(*ResourceInformation)(nil),                // 44: ddex.mead.v11.ResourceInformation
	(*ResourceInformationList)(nil),            // 45: ddex.mead.v11.ResourceInformationList
	(*ResourceRelationship)(nil),               // 46: ddex.mead.v11.ResourceRelationship
	(*ResourceSummary)(nil),                    // 47: ddex.mead.v11.ResourceSummary
	(*RhythmStyle)(nil),                        // 48: ddex.mead.v11.RhythmStyle
	(*RhythmStyleValue)(nil),                   // 49: ddex.mead.v11.RhythmStyleValue
	(*RootChordNote)(nil),                      // 50: ddex.mead.v11.RootChordNote
	(*RootChordQuality)(nil),                   // 51: ddex.mead.v11.RootChordQuality
	(*Sample)(nil),                             // 52: ddex.mead.v11.Sample
	(*SampleFeature)(nil),                      // 53: ddex.mead.v11.SampleFeature
	(*SimilarRelease)(nil),                     // 54: ddex.mead.v11.SimilarRelease
	(*SimilarResource)(nil),                    // 55: ddex.mead.v11.SimilarResource
	(*SimilarWork)(nil),                        // 56: ddex.mead.v11.SimilarWork
	(*SubGenreCategory)(nil),                   // 57: ddex.mead.v11.SubGenreCategory
	(*TempoValue)(nil),                         // 58: ddex.mead.v11.TempoValue
	(*Theme)(nil),                              // 59: ddex.mead.v11.Theme
	(*ThemeValue)(nil),                         // 60: ddex.mead.v11.ThemeValue
	(*TimeSignature)(nil),                      // 61: ddex.mead.v11.TimeSignature
	(*TimeSignatureModulation)(nil),            // 62: ddex.mead.v11.TimeSignatureModulation
	(*Usage)(nil),                              // 63: ddex.mead.v11.Usage
	(*UsagePeriod)(nil),                        // 64: ddex.mead.v11.UsagePeriod
	(*UsedMusicalWork)(nil),                    // 65: ddex.mead.v11.UsedMusicalWork
	(*WorkHierarchy)(nil),                      // 66: ddex.mead.v11.WorkHierarchy
	(*WorkInformation)(nil),                    // 67: ddex.mead.v11.WorkInformation
	(*WorkInformationList)(nil),                // 68: ddex.mead.v11.WorkInformationList
	(*WorkSummary)(nil),                        // 69: ddex.mead.v11.WorkSummary
	(*Category)(nil),                           // 70: ddex.mead.v11.Category
	(*Content)(nil),                            // 71: ddex.mead.v11.Content
	(*DateTime)(nil),                           // 72: ddex.mead.v11.DateTime
	(*Generator)(nil),                          // 73: ddex.mead.v11.Generator
	(*Icon)(nil),                               // 74: ddex.mead.v11.Icon
	(*Id)(nil),                                 // 75: ddex.mead.v11.Id
	(*Link)(nil),                               // 76: ddex.mead.v11.Link
	(*Logo)(nil),                               // 77: ddex.mead.v11.Logo
	(*Person)(nil),                             // 78: ddex.mead.v11.Person
	(*Source)(nil),                             // 79: ddex.mead.v11.Source
	(*Text)(nil),                               // 80: ddex.mead.v11.Text
	(*URI)(nil),                                // 81: ddex.mead.v11.URI
	(*AllTerritoryCode)(nil),                   // 82: ddex.mead.v11.AllTerritoryCode
	(*ArtistTypeValue)(nil),                    // 83: ddex.mead.v11.ArtistTypeValue
	(*ArtisticInfluence)(nil),                  // 84: ddex.mead.v11.ArtisticInfluence
	(*Award)(nil),                              // 85: ddex.mead.v11.Award
	(*CatalogNumber)(nil),                      // 86: ddex.mead.v11.CatalogNumber
	(*ChartEntry)(nil),                         // 87: ddex.mead.v11.ChartEntry
	(*ClassicalPeriod)(nil),                    // 88: ddex.mead.v11.ClassicalPeriod
	(*CommentaryNote)(nil),                     // 89: ddex.mead.v11.CommentaryNote
	(*CommentaryNoteType)(nil),                 // 90: ddex.mead.v11.CommentaryNoteType
	(*CurrentTerritoryCode)(nil),               // 91: ddex.mead.v11.CurrentTerritoryCode
	(*Date)(nil),                               // 92: ddex.mead.v11.Date
	(*DetailedHashSum)(nil),                    // 93: ddex.mead.v11.DetailedHashSum
	(*DetailedPartyId)(nil),                    // 94: ddex.mead.v11.DetailedPartyId
	(*DisplayArtistNameWithDefault)(nil),       // 95: ddex.mead.v11.DisplayArtistNameWithDefault
	(*DisplayArtistNameWithPronunciation)(nil), // 96: ddex.mead.v11.DisplayArtistNameWithPronunciation
	(*Duration)(nil),                           // 97: ddex.mead.v11.Duration
	(*Epoch)(nil),                              // 98: ddex.mead.v11.Epoch
	(*EventDate)(nil),                          // 99: ddex.mead.v11.EventDate
	(*EventDateTime)(nil),                      // 100: ddex.mead.v11.EventDateTime
	(*File)(nil),                               // 101: ddex.mead.v11.File
	(*Focus)(nil),                              // 102: ddex.mead.v11.Focus
	(*GenreCategoryValue)(nil),                 // 103: ddex.mead.v11.GenreCategoryValue
	(*HashSumAlgorithmType)(nil),               // 104: ddex.mead.v11.HashSumAlgorithmType
	(*HistoricChartingInformation)(nil),        // 105: ddex.mead.v11.HistoricChartingInformation
	(*Image)(nil),                              // 106: ddex.mead.v11.Image
	(*ImageType)(nil),                          // 107: ddex.mead.v11.ImageType
	(*MessageAuditTrail)(nil),                  // 108: ddex.mead.v11.MessageAuditTrail
	(*MessageAuditTrailEvent)(nil),             // 109: ddex.mead.v11.MessageAuditTrailEvent
	(*MessageHeader)(nil),                      // 110: ddex.mead.v11.MessageHeader
	(*MessagingPartyWithoutCode)(nil),          // 111: ddex.mead.v11.MessagingPartyWithoutCode
	(*MetadataSource)(nil),                     // 112: ddex.mead.v11.MetadataSource
	(*MetadataSourceList)(nil),                 // 113: ddex.mead.v11.MetadataSourceList
	(*MetadataSourceReference)(nil),            // 114: ddex.mead.v11.MetadataSourceReference
	(*MetadataSourceType)(nil),                 // 115: ddex.mead.v11.MetadataSourceType
	(*MusicalWorkIdWithoutFlag)(nil),           // 116: ddex.mead.v11.MusicalWorkIdWithoutFlag
	(*Name)(nil),                               // 117: ddex.mead.v11.Name
	(*NameWithPronunciationAndScriptCode)(nil), // 118: ddex.mead.v11.NameWithPronunciationAndScriptCode
	(*PartyDescriptorWithPronunciation)(nil),   // 119: ddex.mead.v11.PartyDescriptorWithPronunciation
	(*PartyNameWithPronunciation)(nil),         // 120: ddex.mead.v11.PartyNameWithPronunciation
	(*PartyNameWithoutCode)(nil),               // 121: ddex.mead.v11.PartyNameWithoutCode
	(*Period)(nil),                             // 122: ddex.mead.v11.Period
	(*PeriodValue)(nil),                        // 123: ddex.mead.v11.PeriodValue
	(*PeriodWithTime)(nil),                     // 124: ddex.mead.v11.PeriodWithTime
	(*Pronunciation)(nil),                      // 125: ddex.mead.v11.Pronunciation
	(*ProprietaryId)(nil),                      // 126: ddex.mead.v11.ProprietaryId
	(*RecordingPartType)(nil),                  // 127: ddex.mead.v11.RecordingPartType
	(*RelatedCreation)(nil),                    // 128: ddex.mead.v11.RelatedCreation
	(*RelatedResourceType)(nil),                // 129: ddex.mead.v11.RelatedResourceType
	(*Release)(nil),                            // 130: ddex.mead.v11.Release
	(*ReleaseId)(nil),                          // 131: ddex.mead.v11.ReleaseId
	(*ReleaseTitle)(nil),                       // 132: ddex.mead.v11.ReleaseTitle
	(*Resource)(nil),                           // 133: ddex.mead.v11.Resource
	(*ResourceContributorRole)(nil),            // 134: ddex.mead.v11.ResourceContributorRole
	(*ResourceIdWithoutFlag)(nil),              // 135: ddex.mead.v11.ResourceIdWithoutFlag
	(*ResourceRelationshipType)(nil),           // 136: ddex.mead.v11.ResourceRelationshipType
	(*ResourceTitle)(nil),                      // 137: ddex.mead.v11.ResourceTitle
	(*SessionType)(nil),                        // 138: ddex.mead.v11.SessionType
	(*SubGenreCategoryValue)(nil),              // 139: ddex.mead.v11.SubGenreCategoryValue
	(*TextWithFormat)(nil),                     // 140: ddex.mead.v11.TextWithFormat
	(*TextWithoutTerritory)(nil),               // 141: ddex.mead.v11.TextWithoutTerritory
	(*TitleText)(nil),                          // 142: ddex.mead.v11.TitleText
	(*TitleWithPronunciation)(nil),             // 143: ddex.mead.v11.TitleWithPronunciation
	(*Venue)(nil),                              // 144: ddex.mead.v11.Venue
	(*VocalRegister)(nil),                      // 145: ddex.mead.v11.VocalRegister
	(*VocalRegisterValue)(nil),                 // 146: ddex.mead.v11.VocalRegisterValue
	(*Work)(nil),                               // 147: ddex.mead.v11.Work
	(*WorkRelationshipType)(nil),               // 148: ddex.mead.v11.WorkRelationshipType
	(*WorkTitle)(nil),                          // 149: ddex.mead.v11.WorkTitle
	(*EventDateWithoutFlags)(nil),              // 150: ddex.mead.v11.EventDateWithoutFlags
	(*Timing)(nil),                             // 151: ddex.mead.v11.Timing
}
var file_ddex_mead_v11_v11_proto_depIdxs = []int32{
	110, // 0: ddex.mead.v11.MeadMessage.message_header:type_name -> ddex.mead.v11.MessageHeader
	113, // 1: ddex.mead.v11.MeadMessage.metadata_source_list:type_name -> ddex.mead.v11.MetadataSourceList
	68,  // 2: ddex.mead.v11.MeadMessage.work_information_list:type_name -> ddex.mead.v11.WorkInformationList
	45,  // 3: ddex.mead.v11.MeadMessage.resource_information_list:type_name -> ddex.mead.v11.ResourceInformationList
	41,  // 4: ddex.mead.v11.MeadMessage.release_information_list:type_name -> ddex.mead.v11.ReleaseInformationList
	78,  // 5: ddex.mead.v11.Feed.author:type_name -> ddex.mead.v11.Person
	70,  // 6: ddex.mead.v11.Feed.category:type_name -> ddex.mead.v11.Category
	78,  // 7: ddex.mead.v11.Feed.contributor:type_name -> ddex.mead.v11.Person
	73,  // 8: ddex.mead.v11.Feed.generator:type_name -> ddex.mead.v11.Generator
	74,  // 9: ddex.mead.v11.Feed.icon:type_name -> ddex.mead.v11.Icon
	75,  // 10: ddex.mead.v11.Feed.id:type_name -> ddex.mead.v11.Id
	76,  // 11: ddex.mead.v11.Feed.link:type_name -> ddex.mead.v11.Link
	77,  // 12: ddex.mead.v11.Feed.logo:type_name -> ddex.mead.v11.Logo
	80,  // 13: ddex.mead.v11.Feed.rights:type_name -> ddex.mead.v11.Text
	80,  // 14: ddex.mead.v11.Feed.subtitle:type_name -> ddex.mead.v11.Text
	80,  // 15: ddex.mead.v11.Feed.title:type_name -> ddex.mead.v11.Text
	72,  // 16: ddex.mead.v11.Feed.updated:type_name -> ddex.mead.v11.DateTime
	16,  // 17: ddex.mead.v11.Feed.entry:type_name -> ddex.mead.v11.Entry
	114, // 18: ddex.mead.v11.AbsolutePitch.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	34,  // 19: ddex.mead.v11.AbsolutePitch.modulation:type_name -> ddex.mead.v11.Modulation
	114, // 20: ddex.mead.v11.Activity.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	4,   // 21: ddex.mead.v11.Activity.value:type_name -> ddex.mead.v11.ActivityValue
	141, // 22: ddex.mead.v11.Activity.description:type_name -> ddex.mead.v11.TextWithoutTerritory
	114, // 23: ddex.mead.v11.AlternativeTitle.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	142, // 24: ddex.mead.v11.AlternativeTitle.title_text:type_name -> ddex.mead.v11.TitleText
	142, // 25: ddex.mead.v11.AlternativeTitle.sub_title:type_name -> ddex.mead.v11.TitleText
	114, // 26: ddex.mead.v11.Annotation.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	140, // 27: ddex.mead.v11.Annotation.text:type_name -> ddex.mead.v11.TextWithFormat
	114, // 28: ddex.mead.v11.ArtisticStyle.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	83,  // 29: ddex.mead.v11.ArtisticStyle.value:type_name -> ddex.mead.v11.ArtistTypeValue
	114, // 30: ddex.mead.v11.BeatsPerMinute.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	34,  // 31: ddex.mead.v11.BeatsPerMinute.modulation:type_name -> ddex.mead.v11.Modulation
	116, // 32: ddex.mead.v11.ChildWorkHierarchy.work_id:type_name -> ddex.mead.v11.MusicalWorkIdWithoutFlag
	149, // 33: ddex.mead.v11.ChildWorkHierarchy.work_title:type_name -> ddex.mead.v11.WorkTitle
	9,   // 34: ddex.mead.v11.ChildWorkHierarchy.child:type_name -> ddex.mead.v11.ChildWorkHierarchy
	18,  // 35: ddex.mead.v11.ChildWorkHierarchy.form:type_name -> ddex.mead.v11.Form
	94,  // 36: ddex.mead.v11.Contributor.identifier:type_name -> ddex.mead.v11.DetailedPartyId
	120, // 37: ddex.mead.v11.Contributor.name:type_name -> ddex.mead.v11.PartyNameWithPronunciation
	134, // 38: ddex.mead.v11.Contributor.role:type_name -> ddex.mead.v11.ResourceContributorRole
	114, // 39: ddex.mead.v11.DanceStyle.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	12,  // 40: ddex.mead.v11.DanceStyle.value:type_name -> ddex.mead.v11.DanceStyleValue
	141, // 41: ddex.mead.v11.DanceStyle.description:type_name -> ddex.mead.v11.TextWithoutTerritory
	114, // 42: ddex.mead.v11.DerivedRecording.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	135, // 43: ddex.mead.v11.DerivedRecording.resource_id:type_name -> ddex.mead.v11.ResourceIdWithoutFlag
	129, // 44: ddex.mead.v11.DerivedRecording.related_resource_type:type_name -> ddex.mead.v11.RelatedResourceType
	143, // 45: ddex.mead.v11.DerivedRecording.title:type_name -> ddex.mead.v11.TitleWithPronunciation
	96,  // 46: ddex.mead.v11.DerivedRecording.display_artist_name:type_name -> ddex.mead.v11.DisplayArtistNameWithPronunciation
	119, // 47: ddex.mead.v11.DerivedRecording.display_artist:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	125, // 48: ddex.mead.v11.DisplaySubTitle.pronunciation:type_name -> ddex.mead.v11.Pronunciation
	142, // 49: ddex.mead.v11.DisplayTitle.title_text:type_name -> ddex.mead.v11.TitleText
	14,  // 50: ddex.mead.v11.DisplayTitle.sub_title:type_name -> ddex.mead.v11.DisplaySubTitle
	78,  // 51: ddex.mead.v11.Entry.author:type_name -> ddex.mead.v11.Person
	70,  // 52: ddex.mead.v11.Entry.category:type_name -> ddex.mead.v11.Category
	71,  // 53: ddex.mead.v11.Entry.content:type_name -> ddex.mead.v11.Content
	78,  // 54: ddex.mead.v11.Entry.contributor:type_name -> ddex.mead.v11.Person
	75,  // 55: ddex.mead.v11.Entry.id:type_name -> ddex.mead.v11.Id
	76,  // 56: ddex.mead.v11.Entry.link:type_name -> ddex.mead.v11.Link
	72,  // 57: ddex.mead.v11.Entry.published:type_name -> ddex.mead.v11.DateTime
	80,  // 58: ddex.mead.v11.Entry.rights:type_name -> ddex.mead.v11.Text
	79,  // 59: ddex.mead.v11.Entry.source:type_name -> ddex.mead.v11.Source
	80,  // 60: ddex.mead.v11.Entry.summary:type_name -> ddex.mead.v11.Text
	80,  // 61: ddex.mead.v11.Entry.title:type_name -> ddex.mead.v11.Text
	72,  // 62: ddex.mead.v11.Entry.updated:type_name -> ddex.mead.v11.DateTime
	114, // 63: ddex.mead.v11.Flag.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	114, // 64: ddex.mead.v11.Form.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	19,  // 65: ddex.mead.v11.Form.value:type_name -> ddex.mead.v11.FormValue
	114, // 66: ddex.mead.v11.GenreCategory.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	103, // 67: ddex.mead.v11.GenreCategory.value:type_name -> ddex.mead.v11.GenreCategoryValue
	141, // 68: ddex.mead.v11.GenreCategory.description:type_name -> ddex.mead.v11.TextWithoutTerritory
	114, // 69: ddex.mead.v11.Harmony.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	50,  // 70: ddex.mead.v11.Harmony.root_chord_note:type_name -> ddex.mead.v11.RootChordNote
	51,  // 71: ddex.mead.v11.Harmony.root_chord_quality:type_name -> ddex.mead.v11.RootChordQuality
	33,  // 72: ddex.mead.v11.Harmony.mode:type_name -> ddex.mead.v11.Mode
	22,  // 73: ddex.mead.v11.Harmony.modulation:type_name -> ddex.mead.v11.HarmonyModulation
	50,  // 74: ddex.mead.v11.HarmonyModulation.root_chord_note:type_name -> ddex.mead.v11.RootChordNote
	51,  // 75: ddex.mead.v11.HarmonyModulation.root_chord_quality:type_name -> ddex.mead.v11.RootChordQuality
	33,  // 76: ddex.mead.v11.HarmonyModulation.mode:type_name -> ddex.mead.v11.Mode
	91,  // 77: ddex.mead.v11.ImpactDate.territory_code:type_name -> ddex.mead.v11.CurrentTerritoryCode
	114, // 78: ddex.mead.v11.Instrument.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	26,  // 79: ddex.mead.v11.Instrument.value:type_name -> ddex.mead.v11.InstrumentValue
	114, // 80: ddex.mead.v11.InstrumentUsed.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	26,  // 81: ddex.mead.v11.InstrumentUsed.value:type_name -> ddex.mead.v11.InstrumentValue
	114, // 82: ddex.mead.v11.Intensity.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	28,  // 83: ddex.mead.v11.Intensity.value:type_name -> ddex.mead.v11.IntensityValue
	114, // 84: ddex.mead.v11.LocationAndDateOfSession.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	138, // 85: ddex.mead.v11.LocationAndDateOfSession.session_type:type_name -> ddex.mead.v11.SessionType
	122, // 86: ddex.mead.v11.LocationAndDateOfSession.period:type_name -> ddex.mead.v11.Period
	144, // 87: ddex.mead.v11.LocationAndDateOfSession.venue:type_name -> ddex.mead.v11.Venue
	140, // 88: ddex.mead.v11.LocationAndDateOfSession.comment:type_name -> ddex.mead.v11.TextWithFormat
	10,  // 89: ddex.mead.v11.LocationAndDateOfSession.contributor:type_name -> ddex.mead.v11.Contributor
	114, // 90: ddex.mead.v11.Lyrics.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	31,  // 91: ddex.mead.v11.Lyrics.text:type_name -> ddex.mead.v11.LyricsText
	125, // 92: ddex.mead.v11.Lyrics.pronunciation:type_name -> ddex.mead.v11.Pronunciation
	114, // 93: ddex.mead.v11.Mood.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	36,  // 94: ddex.mead.v11.Mood.value:type_name -> ddex.mead.v11.MoodValue
	141, // 95: ddex.mead.v11.Mood.description:type_name -> ddex.mead.v11.TextWithoutTerritory
	126, // 96: ddex.mead.v11.Party.proprietary_id:type_name -> ddex.mead.v11.ProprietaryId
	114, // 97: ddex.mead.v11.RecordingPart.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	127, // 98: ddex.mead.v11.RecordingPart.recording_part_type:type_name -> ddex.mead.v11.RecordingPartType
	6,   // 99: ddex.mead.v11.RecordingPart.comment:type_name -> ddex.mead.v11.Annotation
	140, // 100: ddex.mead.v11.RecordingPart.usage_information:type_name -> ddex.mead.v11.TextWithFormat
	114, // 101: ddex.mead.v11.RelatedWork.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	116, // 102: ddex.mead.v11.RelatedWork.work_id:type_name -> ddex.mead.v11.MusicalWorkIdWithoutFlag
	149, // 103: ddex.mead.v11.RelatedWork.work_title:type_name -> ddex.mead.v11.WorkTitle
	148, // 104: ddex.mead.v11.RelatedWork.work_relationship_type:type_name -> ddex.mead.v11.WorkRelationshipType
	119, // 105: ddex.mead.v11.RelatedWork.writer:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	42,  // 106: ddex.mead.v11.ReleaseInformation.release_summary:type_name -> ddex.mead.v11.ReleaseSummary
	20,  // 107: ddex.mead.v11.ReleaseInformation.genre_category:type_name -> ddex.mead.v11.GenreCategory
	57,  // 108: ddex.mead.v11.ReleaseInformation.sub_genre_category:type_name -> ddex.mead.v11.SubGenreCategory
	102, // 109: ddex.mead.v11.ReleaseInformation.focus:type_name -> ddex.mead.v11.Focus
	35,  // 110: ddex.mead.v11.ReleaseInformation.mood:type_name -> ddex.mead.v11.Mood
	7,   // 111: ddex.mead.v11.ReleaseInformation.artistic_style:type_name -> ddex.mead.v11.ArtisticStyle
	59,  // 112: ddex.mead.v11.ReleaseInformation.theme:type_name -> ddex.mead.v11.Theme
	3,   // 113: ddex.mead.v11.ReleaseInformation.activity:type_name -> ddex.mead.v11.Activity
	89,  // 114: ddex.mead.v11.ReleaseInformation.commentary_note:type_name -> ddex.mead.v11.CommentaryNote
	98,  // 115: ddex.mead.v11.ReleaseInformation.epoch:type_name -> ddex.mead.v11.Epoch
	84,  // 116: ddex.mead.v11.ReleaseInformation.artistic_influence:type_name -> ddex.mead.v11.ArtisticInfluence
	54,  // 117: ddex.mead.v11.ReleaseInformation.is_similar:type_name -> ddex.mead.v11.SimilarRelease
	105, // 118: ddex.mead.v11.ReleaseInformation.historic_charting_information:type_name -> ddex.mead.v11.HistoricChartingInformation
	85,  // 119: ddex.mead.v11.ReleaseInformation.award:type_name -> ddex.mead.v11.Award
	5,   // 120: ddex.mead.v11.ReleaseInformation.alternative_title:type_name -> ddex.mead.v11.AlternativeTitle
	106, // 121: ddex.mead.v11.ReleaseInformation.image:type_name -> ddex.mead.v11.Image
	40,  // 122: ddex.mead.v11.ReleaseInformationList.release_information:type_name -> ddex.mead.v11.ReleaseInformation
	131, // 123: ddex.mead.v11.ReleaseSummary.release_id:type_name -> ddex.mead.v11.ReleaseId
	15,  // 124: ddex.mead.v11.ReleaseSummary.display_title:type_name -> ddex.mead.v11.DisplayTitle
	96,  // 125: ddex.mead.v11.ReleaseSummary.display_artist_name:type_name -> ddex.mead.v11.DisplayArtistNameWithPronunciation
	119, // 126: ddex.mead.v11.ReleaseSummary.display_artist:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	135, // 127: ddex.mead.v11.RelevantResource.resource_id:type_name -> ddex.mead.v11.ResourceIdWithoutFlag
	136, // 128: ddex.mead.v11.RelevantResource.resource_relationship_type:type_name -> ddex.mead.v11.ResourceRelationshipType
	47,  // 129: ddex.mead.v11.ResourceInformation.resource_summary:type_name -> ddex.mead.v11.ResourceSummary
	20,  // 130: ddex.mead.v11.ResourceInformation.genre_category:type_name -> ddex.mead.v11.GenreCategory
	57,  // 131: ddex.mead.v11.ResourceInformation.sub_genre_category:type_name -> ddex.mead.v11.SubGenreCategory
	18,  // 132: ddex.mead.v11.ResourceInformation.form:type_name -> ddex.mead.v11.Form
	145, // 133: ddex.mead.v11.ResourceInformation.vocal_register:type_name -> ddex.mead.v11.VocalRegister
	102, // 134: ddex.mead.v11.ResourceInformation.focus:type_name -> ddex.mead.v11.Focus
	2,   // 135: ddex.mead.v11.ResourceInformation.absolute_pitch:type_name -> ddex.mead.v11.AbsolutePitch
	61,  // 136: ddex.mead.v11.ResourceInformation.time_signature:type_name -> ddex.mead.v11.TimeSignature
	58,  // 137: ddex.mead.v11.ResourceInformation.tempo:type_name -> ddex.mead.v11.TempoValue
	8,   // 138: ddex.mead.v11.ResourceInformation.beats_per_minute:type_name -> ddex.mead.v11.BeatsPerMinute
	27,  // 139: ddex.mead.v11.ResourceInformation.intensity:type_name -> ddex.mead.v11.Intensity
	25,  // 140: ddex.mead.v11.ResourceInformation.instrument_used:type_name -> ddex.mead.v11.InstrumentUsed
	21,  // 141: ddex.mead.v11.ResourceInformation.harmony:type_name -> ddex.mead.v11.Harmony
	35,  // 142: ddex.mead.v11.ResourceInformation.mood:type_name -> ddex.mead.v11.Mood
	11,  // 143: ddex.mead.v11.ResourceInformation.dance_style:type_name -> ddex.mead.v11.DanceStyle
	48,  // 144: ddex.mead.v11.ResourceInformation.rhythm_style:type_name -> ddex.mead.v11.RhythmStyle
	7,   // 145: ddex.mead.v11.ResourceInformation.artistic_style:type_name -> ddex.mead.v11.ArtisticStyle
	59,  // 146: ddex.mead.v11.ResourceInformation.theme:type_name -> ddex.mead.v11.Theme
	3,   // 147: ddex.mead.v11.ResourceInformation.activity:type_name -> ddex.mead.v11.Activity
	65,  // 148: ddex.mead.v11.ResourceInformation.used_musical_work:type_name -> ddex.mead.v11.UsedMusicalWork
	46,  // 149: ddex.mead.v11.ResourceInformation.related_resource:type_name -> ddex.mead.v11.ResourceRelationship
	30,  // 150: ddex.mead.v11.ResourceInformation.lyrics:type_name -> ddex.mead.v11.Lyrics
	89,  // 151: ddex.mead.v11.ResourceInformation.commentary_note:type_name -> ddex.mead.v11.CommentaryNote
	52,  // 152: ddex.mead.v11.ResourceInformation.sample:type_name -> ddex.mead.v11.Sample
	38,  // 153: ddex.mead.v11.ResourceInformation.recording_part:type_name -> ddex.mead.v11.RecordingPart
	63,  // 154: ddex.mead.v11.ResourceInformation.usage:type_name -> ddex.mead.v11.Usage
	23,  // 155: ddex.mead.v11.ResourceInformation.impact_date:type_name -> ddex.mead.v11.ImpactDate
	88,  // 156: ddex.mead.v11.ResourceInformation.classical_period:type_name -> ddex.mead.v11.ClassicalPeriod
	98,  // 157: ddex.mead.v11.ResourceInformation.epoch:type_name -> ddex.mead.v11.Epoch
	84,  // 158: ddex.mead.v11.ResourceInformation.artistic_influence:type_name -> ddex.mead.v11.ArtisticInfluence
	55,  // 159: ddex.mead.v11.ResourceInformation.is_similar:type_name -> ddex.mead.v11.SimilarResource
	105, // 160: ddex.mead.v11.ResourceInformation.historic_charting_information:type_name -> ddex.mead.v11.HistoricChartingInformation
	85,  // 161: ddex.mead.v11.ResourceInformation.award:type_name -> ddex.mead.v11.Award
	29,  // 162: ddex.mead.v11.ResourceInformation.location_and_date_of_session:type_name -> ddex.mead.v11.LocationAndDateOfSession
	5,   // 163: ddex.mead.v11.ResourceInformation.alternative_title:type_name -> ddex.mead.v11.AlternativeTitle
	106, // 164: ddex.mead.v11.ResourceInformation.image:type_name -> ddex.mead.v11.Image
	44,  // 165: ddex.mead.v11.ResourceInformationList.resource_information:type_name -> ddex.mead.v11.ResourceInformation
	114, // 166: ddex.mead.v11.ResourceRelationship.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	135, // 167: ddex.mead.v11.ResourceRelationship.resource_id:type_name -> ddex.mead.v11.ResourceIdWithoutFlag
	129, // 168: ddex.mead.v11.ResourceRelationship.related_resource_type:type_name -> ddex.mead.v11.RelatedResourceType
	143, // 169: ddex.mead.v11.ResourceRelationship.title:type_name -> ddex.mead.v11.TitleWithPronunciation
	96,  // 170: ddex.mead.v11.ResourceRelationship.display_artist_name:type_name -> ddex.mead.v11.DisplayArtistNameWithPronunciation
	119, // 171: ddex.mead.v11.ResourceRelationship.display_artist:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	135, // 172: ddex.mead.v11.ResourceSummary.resource_id:type_name -> ddex.mead.v11.ResourceIdWithoutFlag
	15,  // 173: ddex.mead.v11.ResourceSummary.display_title:type_name -> ddex.mead.v11.DisplayTitle
	96,  // 174: ddex.mead.v11.ResourceSummary.display_artist_name:type_name -> ddex.mead.v11.DisplayArtistNameWithPronunciation
	119, // 175: ddex.mead.v11.ResourceSummary.display_artist:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	114, // 176: ddex.mead.v11.RhythmStyle.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	49,  // 177: ddex.mead.v11.RhythmStyle.value:type_name -> ddex.mead.v11.RhythmStyleValue
	141, // 178: ddex.mead.v11.RhythmStyle.description:type_name -> ddex.mead.v11.TextWithoutTerritory
	114, // 179: ddex.mead.v11.Sample.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	47,  // 180: ddex.mead.v11.Sample.related_resource:type_name -> ddex.mead.v11.ResourceSummary
	53,  // 181: ddex.mead.v11.Sample.sample_feature:type_name -> ddex.mead.v11.SampleFeature
	140, // 182: ddex.mead.v11.Sample.description:type_name -> ddex.mead.v11.TextWithFormat
	114, // 183: ddex.mead.v11.SimilarRelease.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	130, // 184: ddex.mead.v11.SimilarRelease.release:type_name -> ddex.mead.v11.Release
	6,   // 185: ddex.mead.v11.SimilarRelease.description:type_name -> ddex.mead.v11.Annotation
	114, // 186: ddex.mead.v11.SimilarResource.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	133, // 187: ddex.mead.v11.SimilarResource.resource:type_name -> ddex.mead.v11.Resource
	6,   // 188: ddex.mead.v11.SimilarResource.description:type_name -> ddex.mead.v11.Annotation
	114, // 189: ddex.mead.v11.SimilarWork.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	147, // 190: ddex.mead.v11.SimilarWork.work:type_name -> ddex.mead.v11.Work
	6,   // 191: ddex.mead.v11.SimilarWork.description:type_name -> ddex.mead.v11.Annotation
	114, // 192: ddex.mead.v11.SubGenreCategory.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	139, // 193: ddex.mead.v11.SubGenreCategory.value:type_name -> ddex.mead.v11.SubGenreCategoryValue
	114, // 194: ddex.mead.v11.Theme.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	60,  // 195: ddex.mead.v11.Theme.value:type_name -> ddex.mead.v11.ThemeValue
	141, // 196: ddex.mead.v11.Theme.description:type_name -> ddex.mead.v11.TextWithoutTerritory
	114, // 197: ddex.mead.v11.TimeSignature.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	62,  // 198: ddex.mead.v11.TimeSignature.modulation:type_name -> ddex.mead.v11.TimeSignatureModulation
	114, // 199: ddex.mead.v11.Usage.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	140, // 200: ddex.mead.v11.Usage.description:type_name -> ddex.mead.v11.TextWithFormat
	43,  // 201: ddex.mead.v11.Usage.relevant_resource:type_name -> ddex.mead.v11.RelevantResource
	150, // 202: ddex.mead.v11.UsagePeriod.start_date:type_name -> ddex.mead.v11.EventDateWithoutFlags
	150, // 203: ddex.mead.v11.UsagePeriod.end_date:type_name -> ddex.mead.v11.EventDateWithoutFlags
	114, // 204: ddex.mead.v11.UsedMusicalWork.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	114, // 205: ddex.mead.v11.WorkHierarchy.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	116, // 206: ddex.mead.v11.WorkHierarchy.work_id:type_name -> ddex.mead.v11.MusicalWorkIdWithoutFlag
	149, // 207: ddex.mead.v11.WorkHierarchy.work_title:type_name -> ddex.mead.v11.WorkTitle
	9,   // 208: ddex.mead.v11.WorkHierarchy.child:type_name -> ddex.mead.v11.ChildWorkHierarchy
	18,  // 209: ddex.mead.v11.WorkHierarchy.form:type_name -> ddex.mead.v11.Form
	69,  // 210: ddex.mead.v11.WorkInformation.work_summary:type_name -> ddex.mead.v11.WorkSummary
	20,  // 211: ddex.mead.v11.WorkInformation.genre_category:type_name -> ddex.mead.v11.GenreCategory
	57,  // 212: ddex.mead.v11.WorkInformation.sub_genre_category:type_name -> ddex.mead.v11.SubGenreCategory
	18,  // 213: ddex.mead.v11.WorkInformation.form:type_name -> ddex.mead.v11.Form
	145, // 214: ddex.mead.v11.WorkInformation.vocal_register:type_name -> ddex.mead.v11.VocalRegister
	102, // 215: ddex.mead.v11.WorkInformation.focus:type_name -> ddex.mead.v11.Focus
	61,  // 216: ddex.mead.v11.WorkInformation.time_signature:type_name -> ddex.mead.v11.TimeSignature
	58,  // 217: ddex.mead.v11.WorkInformation.tempo:type_name -> ddex.mead.v11.TempoValue
	24,  // 218: ddex.mead.v11.WorkInformation.target_instrument:type_name -> ddex.mead.v11.Instrument
	21,  // 219: ddex.mead.v11.WorkInformation.harmony:type_name -> ddex.mead.v11.Harmony
	35,  // 220: ddex.mead.v11.WorkInformation.mood:type_name -> ddex.mead.v11.Mood
	11,  // 221: ddex.mead.v11.WorkInformation.dance_style:type_name -> ddex.mead.v11.DanceStyle
	48,  // 222: ddex.mead.v11.WorkInformation.rhythm_style:type_name -> ddex.mead.v11.RhythmStyle
	59,  // 223: ddex.mead.v11.WorkInformation.theme:type_name -> ddex.mead.v11.Theme
	3,   // 224: ddex.mead.v11.WorkInformation.activity:type_name -> ddex.mead.v11.Activity
	66,  // 225: ddex.mead.v11.WorkInformation.work_hierarchy:type_name -> ddex.mead.v11.WorkHierarchy
	39,  // 226: ddex.mead.v11.WorkInformation.related_work:type_name -> ddex.mead.v11.RelatedWork
	13,  // 227: ddex.mead.v11.WorkInformation.derived_recording:type_name -> ddex.mead.v11.DerivedRecording
	30,  // 228: ddex.mead.v11.WorkInformation.lyrics:type_name -> ddex.mead.v11.Lyrics
	89,  // 229: ddex.mead.v11.WorkInformation.commentary_note:type_name -> ddex.mead.v11.CommentaryNote
	88,  // 230: ddex.mead.v11.WorkInformation.classical_period:type_name -> ddex.mead.v11.ClassicalPeriod
	98,  // 231: ddex.mead.v11.WorkInformation.epoch:type_name -> ddex.mead.v11.Epoch
	84,  // 232: ddex.mead.v11.WorkInformation.artistic_influence:type_name -> ddex.mead.v11.ArtisticInfluence
	56,  // 233: ddex.mead.v11.WorkInformation.is_similar:type_name -> ddex.mead.v11.SimilarWork
	85,  // 234: ddex.mead.v11.WorkInformation.award:type_name -> ddex.mead.v11.Award
	5,   // 235: ddex.mead.v11.WorkInformation.alternative_title:type_name -> ddex.mead.v11.AlternativeTitle
	67,  // 236: ddex.mead.v11.WorkInformationList.work_information:type_name -> ddex.mead.v11.WorkInformation
	116, // 237: ddex.mead.v11.WorkSummary.musical_work_id:type_name -> ddex.mead.v11.MusicalWorkIdWithoutFlag
	143, // 238: ddex.mead.v11.WorkSummary.work_title:type_name -> ddex.mead.v11.TitleWithPronunciation
	119, // 239: ddex.mead.v11.WorkSummary.writer:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	81,  // 240: ddex.mead.v11.Person.uri:type_name -> ddex.mead.v11.URI
	78,  // 241: ddex.mead.v11.Source.author:type_name -> ddex.mead.v11.Person
	70,  // 242: ddex.mead.v11.Source.category:type_name -> ddex.mead.v11.Category
	78,  // 243: ddex.mead.v11.Source.contributor:type_name -> ddex.mead.v11.Person
	73,  // 244: ddex.mead.v11.Source.generator:type_name -> ddex.mead.v11.Generator
	74,  // 245: ddex.mead.v11.Source.icon:type_name -> ddex.mead.v11.Icon
	75,  // 246: ddex.mead.v11.Source.id:type_name -> ddex.mead.v11.Id
	76,  // 247: ddex.mead.v11.Source.link:type_name -> ddex.mead.v11.Link
	77,  // 248: ddex.mead.v11.Source.logo:type_name -> ddex.mead.v11.Logo
	80,  // 249: ddex.mead.v11.Source.rights:type_name -> ddex.mead.v11.Text
	80,  // 250: ddex.mead.v11.Source.subtitle:type_name -> ddex.mead.v11.Text
	80,  // 251: ddex.mead.v11.Source.title:type_name -> ddex.mead.v11.Text
	72,  // 252: ddex.mead.v11.Source.updated:type_name -> ddex.mead.v11.DateTime
	114, // 253: ddex.mead.v11.ArtisticInfluence.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	119, // 254: ddex.mead.v11.ArtisticInfluence.party:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	147, // 255: ddex.mead.v11.ArtisticInfluence.work:type_name -> ddex.mead.v11.Work
	133, // 256: ddex.mead.v11.ArtisticInfluence.resource:type_name -> ddex.mead.v11.Resource
	130, // 257: ddex.mead.v11.ArtisticInfluence.release:type_name -> ddex.mead.v11.Release
	140, // 258: ddex.mead.v11.ArtisticInfluence.description:type_name -> ddex.mead.v11.TextWithFormat
	114, // 259: ddex.mead.v11.Award.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	119, // 260: ddex.mead.v11.Award.awarding_body:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	119, // 261: ddex.mead.v11.Award.awarded_party:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	118, // 262: ddex.mead.v11.Award.award_name:type_name -> ddex.mead.v11.NameWithPronunciationAndScriptCode
	99,  // 263: ddex.mead.v11.Award.date:type_name -> ddex.mead.v11.EventDate
	140, // 264: ddex.mead.v11.Award.comment:type_name -> ddex.mead.v11.TextWithFormat
	97,  // 265: ddex.mead.v11.ChartEntry.duration:type_name -> ddex.mead.v11.Duration
	140, // 266: ddex.mead.v11.ChartEntry.comment:type_name -> ddex.mead.v11.TextWithFormat
	114, // 267: ddex.mead.v11.ClassicalPeriod.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	123, // 268: ddex.mead.v11.ClassicalPeriod.name:type_name -> ddex.mead.v11.PeriodValue
	114, // 269: ddex.mead.v11.CommentaryNote.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	141, // 270: ddex.mead.v11.CommentaryNote.text:type_name -> ddex.mead.v11.TextWithoutTerritory
	90,  // 271: ddex.mead.v11.CommentaryNote.commentary_note_type:type_name -> ddex.mead.v11.CommentaryNoteType
	119, // 272: ddex.mead.v11.CommentaryNote.author:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	104, // 273: ddex.mead.v11.DetailedHashSum.algorithm:type_name -> ddex.mead.v11.HashSumAlgorithmType
	126, // 274: ddex.mead.v11.DetailedPartyId.proprietary_id:type_name -> ddex.mead.v11.ProprietaryId
	95,  // 275: ddex.mead.v11.DisplayArtistNameWithPronunciation.name:type_name -> ddex.mead.v11.DisplayArtistNameWithDefault
	125, // 276: ddex.mead.v11.DisplayArtistNameWithPronunciation.pronunciation:type_name -> ddex.mead.v11.Pronunciation
	114, // 277: ddex.mead.v11.Epoch.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	117, // 278: ddex.mead.v11.Epoch.value:type_name -> ddex.mead.v11.Name
	119, // 279: ddex.mead.v11.Epoch.related_artist:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	128, // 280: ddex.mead.v11.Epoch.related_creation:type_name -> ddex.mead.v11.RelatedCreation
	92,  // 281: ddex.mead.v11.Epoch.start_date:type_name -> ddex.mead.v11.Date
	92,  // 282: ddex.mead.v11.Epoch.end_date:type_name -> ddex.mead.v11.Date
	93,  // 283: ddex.mead.v11.File.hash_sum:type_name -> ddex.mead.v11.DetailedHashSum
	114, // 284: ddex.mead.v11.Focus.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	119, // 285: ddex.mead.v11.Focus.party:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	96,  // 286: ddex.mead.v11.Focus.display_artist_name:type_name -> ddex.mead.v11.DisplayArtistNameWithPronunciation
	119, // 287: ddex.mead.v11.Focus.display_artist:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	119, // 288: ddex.mead.v11.Focus.writer:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	124, // 289: ddex.mead.v11.Focus.period_of_being_focus:type_name -> ddex.mead.v11.PeriodWithTime
	141, // 290: ddex.mead.v11.Focus.comment:type_name -> ddex.mead.v11.TextWithoutTerritory
	114, // 291: ddex.mead.v11.HistoricChartingInformation.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	91,  // 292: ddex.mead.v11.HistoricChartingInformation.territory_code:type_name -> ddex.mead.v11.CurrentTerritoryCode
	118, // 293: ddex.mead.v11.HistoricChartingInformation.chart_name:type_name -> ddex.mead.v11.NameWithPronunciationAndScriptCode
	97,  // 294: ddex.mead.v11.HistoricChartingInformation.duration_in_charts:type_name -> ddex.mead.v11.Duration
	87,  // 295: ddex.mead.v11.HistoricChartingInformation.chart_entry:type_name -> ddex.mead.v11.ChartEntry
	140, // 296: ddex.mead.v11.HistoricChartingInformation.comment:type_name -> ddex.mead.v11.TextWithFormat
	114, // 297: ddex.mead.v11.Image.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	101, // 298: ddex.mead.v11.Image.file:type_name -> ddex.mead.v11.File
	107, // 299: ddex.mead.v11.Image.image_type:type_name -> ddex.mead.v11.ImageType
	109, // 300: ddex.mead.v11.MessageAuditTrail.message_audit_trail_event:type_name -> ddex.mead.v11.MessageAuditTrailEvent
	111, // 301: ddex.mead.v11.MessageAuditTrailEvent.messaging_party_descriptor:type_name -> ddex.mead.v11.MessagingPartyWithoutCode
	111, // 302: ddex.mead.v11.MessageHeader.message_sender:type_name -> ddex.mead.v11.MessagingPartyWithoutCode
	111, // 303: ddex.mead.v11.MessageHeader.sent_on_behalf_of:type_name -> ddex.mead.v11.MessagingPartyWithoutCode
	111, // 304: ddex.mead.v11.MessageHeader.message_recipient:type_name -> ddex.mead.v11.MessagingPartyWithoutCode
	108, // 305: ddex.mead.v11.MessageHeader.message_audit_trail:type_name -> ddex.mead.v11.MessageAuditTrail
	121, // 306: ddex.mead.v11.MessagingPartyWithoutCode.party_name:type_name -> ddex.mead.v11.PartyNameWithoutCode
	115, // 307: ddex.mead.v11.MetadataSource.metadata_source_type:type_name -> ddex.mead.v11.MetadataSourceType
	112, // 308: ddex.mead.v11.MetadataSourceList.metadata_source:type_name -> ddex.mead.v11.MetadataSource
	126, // 309: ddex.mead.v11.MusicalWorkIdWithoutFlag.proprietary_id:type_name -> ddex.mead.v11.ProprietaryId
	117, // 310: ddex.mead.v11.NameWithPronunciationAndScriptCode.name:type_name -> ddex.mead.v11.Name
	125, // 311: ddex.mead.v11.NameWithPronunciationAndScriptCode.pronunciation:type_name -> ddex.mead.v11.Pronunciation
	94,  // 312: ddex.mead.v11.PartyDescriptorWithPronunciation.party_id:type_name -> ddex.mead.v11.DetailedPartyId
	118, // 313: ddex.mead.v11.PartyNameWithPronunciation.full_name:type_name -> ddex.mead.v11.NameWithPronunciationAndScriptCode
	118, // 314: ddex.mead.v11.PartyNameWithPronunciation.full_name_ascii_transcribed:type_name -> ddex.mead.v11.NameWithPronunciationAndScriptCode
	118, // 315: ddex.mead.v11.PartyNameWithPronunciation.full_name_indexed:type_name -> ddex.mead.v11.NameWithPronunciationAndScriptCode
	118, // 316: ddex.mead.v11.PartyNameWithPronunciation.names_before_key_name:type_name -> ddex.mead.v11.NameWithPronunciationAndScriptCode
	118, // 317: ddex.mead.v11.PartyNameWithPronunciation.key_name:type_name -> ddex.mead.v11.NameWithPronunciationAndScriptCode
	118, // 318: ddex.mead.v11.PartyNameWithPronunciation.names_after_key_name:type_name -> ddex.mead.v11.NameWithPronunciationAndScriptCode
	118, // 319: ddex.mead.v11.PartyNameWithPronunciation.abbreviated_name:type_name -> ddex.mead.v11.NameWithPronunciationAndScriptCode
	143, // 320: ddex.mead.v11.RelatedCreation.title:type_name -> ddex.mead.v11.TitleWithPronunciation
	132, // 321: ddex.mead.v11.Release.release_title:type_name -> ddex.mead.v11.ReleaseTitle
	96,  // 322: ddex.mead.v11.Release.display_artist_name:type_name -> ddex.mead.v11.DisplayArtistNameWithPronunciation
	119, // 323: ddex.mead.v11.Release.display_artist:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	86,  // 324: ddex.mead.v11.ReleaseId.catalog_number:type_name -> ddex.mead.v11.CatalogNumber
	126, // 325: ddex.mead.v11.ReleaseId.proprietary_id:type_name -> ddex.mead.v11.ProprietaryId
	137, // 326: ddex.mead.v11.Resource.resource_title:type_name -> ddex.mead.v11.ResourceTitle
	96,  // 327: ddex.mead.v11.Resource.display_artist_name:type_name -> ddex.mead.v11.DisplayArtistNameWithPronunciation
	119, // 328: ddex.mead.v11.Resource.display_artist:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	86,  // 329: ddex.mead.v11.ResourceIdWithoutFlag.catalog_number:type_name -> ddex.mead.v11.CatalogNumber
	126, // 330: ddex.mead.v11.ResourceIdWithoutFlag.proprietary_id:type_name -> ddex.mead.v11.ProprietaryId
	125, // 331: ddex.mead.v11.TitleText.pronunciation:type_name -> ddex.mead.v11.Pronunciation
	142, // 332: ddex.mead.v11.TitleWithPronunciation.title_text:type_name -> ddex.mead.v11.TitleText
	142, // 333: ddex.mead.v11.TitleWithPronunciation.sub_title:type_name -> ddex.mead.v11.TitleText
	82,  // 334: ddex.mead.v11.Venue.territory_code:type_name -> ddex.mead.v11.AllTerritoryCode
	114, // 335: ddex.mead.v11.VocalRegister.metadata_source_reference:type_name -> ddex.mead.v11.MetadataSourceReference
	146, // 336: ddex.mead.v11.VocalRegister.value:type_name -> ddex.mead.v11.VocalRegisterValue
	149, // 337: ddex.mead.v11.Work.work_title:type_name -> ddex.mead.v11.WorkTitle
	119, // 338: ddex.mead.v11.Work.writer:type_name -> ddex.mead.v11.PartyDescriptorWithPronunciation
	339, // [339:339] is the sub-list for method output_type
	339, // [339:339] is the sub-list for method input_type
	339, // [339:339] is the sub-list for extension type_name
	339, // [339:339] is the sub-list for extension extendee
	0,   // [0:339] is the sub-list for field type_name
}

func init() { file_ddex_mead_v11_v11_proto_init() }
func file_ddex_mead_v11_v11_proto_init() {
	if File_ddex_mead_v11_v11_proto != nil {
		return
	}
	file_ddex_mead_v11_v11_proto_msgTypes[1].OneofWrappers = []any{
		(*Feed_Author)(nil),
		(*Feed_Category)(nil),
		(*Feed_Contributor)(nil),
		(*Feed_Generator)(nil),
		(*Feed_Icon)(nil),
		(*Feed_Id)(nil),
		(*Feed_Link)(nil),
		(*Feed_Logo)(nil),
		(*Feed_Rights)(nil),
		(*Feed_Subtitle)(nil),
		(*Feed_Title)(nil),
		(*Feed_Updated)(nil),
		(*Feed_Entry)(nil),
	}
	file_ddex_mead_v11_v11_proto_msgTypes[16].OneofWrappers = []any{
		(*Entry_Author)(nil),
		(*Entry_Category)(nil),
		(*Entry_Content)(nil),
		(*Entry_Contributor)(nil),
		(*Entry_Id)(nil),
		(*Entry_Link)(nil),
		(*Entry_Published)(nil),
		(*Entry_Rights)(nil),
		(*Entry_Source)(nil),
		(*Entry_Summary)(nil),
		(*Entry_Title)(nil),
		(*Entry_Updated)(nil),
		(*Entry_SubscriptionId)(nil),
	}
	file_ddex_mead_v11_v11_proto_msgTypes[78].OneofWrappers = []any{
		(*Person_Name)(nil),
		(*Person_Uri)(nil),
		(*Person_Email)(nil),
	}
	file_ddex_mead_v11_v11_proto_msgTypes[79].OneofWrappers = []any{
		(*Source_Author)(nil),
		(*Source_Category)(nil),
		(*Source_Contributor)(nil),
		(*Source_Generator)(nil),
		(*Source_Icon)(nil),
		(*Source_Id)(nil),
		(*Source_Link)(nil),
		(*Source_Logo)(nil),
		(*Source_Rights)(nil),
		(*Source_Subtitle)(nil),
		(*Source_Title)(nil),
		(*Source_Updated)(nil),
	}
	file_ddex_mead_v11_v11_proto_msgTypes[119].OneofWrappers = []any{
		(*PartyDescriptorWithPronunciation_PartyId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ddex_mead_v11_v11_proto_rawDesc), len(file_ddex_mead_v11_v11_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   152,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ddex_mead_v11_v11_proto_goTypes,
		DependencyIndexes: file_ddex_mead_v11_v11_proto_depIdxs,
		MessageInfos:      file_ddex_mead_v11_v11_proto_msgTypes,
	}.Build()
	File_ddex_mead_v11_v11_proto = out.File
	file_ddex_mead_v11_v11_proto_goTypes = nil
	file_ddex_mead_v11_v11_proto_depIdxs = nil
}
