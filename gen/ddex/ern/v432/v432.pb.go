// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: ddex/ern/v432/v432.proto

package v432

import (
	avs "github.com/alecsavvy/ddex-go/gen/ddex/avs"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NewReleaseMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageHeader"
	MessageHeader *MessageHeader `protobuf:"bytes,1,opt,name=message_header,json=messageHeader,proto3" json:"message_header,omitempty" xml:"MessageHeader"`
	// @gotags: xml:"ReleaseAdmin"
	ReleaseAdmin []*ReleaseAdmin `protobuf:"bytes,2,rep,name=release_admin,json=releaseAdmin,proto3" json:"release_admin,omitempty" xml:"ReleaseAdmin"`
	// @gotags: xml:"PartyList"
	PartyList *PartyList `protobuf:"bytes,3,opt,name=party_list,json=partyList,proto3" json:"party_list,omitempty" xml:"PartyList"`
	// @gotags: xml:"CueSheetList"
	CueSheetList *CueSheetList `protobuf:"bytes,4,opt,name=cue_sheet_list,json=cueSheetList,proto3" json:"cue_sheet_list,omitempty" xml:"CueSheetList"`
	// @gotags: xml:"ResourceList"
	ResourceList *ResourceList `protobuf:"bytes,5,opt,name=resource_list,json=resourceList,proto3" json:"resource_list,omitempty" xml:"ResourceList"`
	// @gotags: xml:"ChapterList"
	ChapterList *ChapterList `protobuf:"bytes,6,opt,name=chapter_list,json=chapterList,proto3" json:"chapter_list,omitempty" xml:"ChapterList"`
	// @gotags: xml:"ReleaseList"
	ReleaseList *ReleaseList `protobuf:"bytes,7,opt,name=release_list,json=releaseList,proto3" json:"release_list,omitempty" xml:"ReleaseList"`
	// @gotags: xml:"DealList"
	DealList *DealList `protobuf:"bytes,8,opt,name=deal_list,json=dealList,proto3" json:"deal_list,omitempty" xml:"DealList"`
	// @gotags: xml:"SupplementalDocumentList"
	SupplementalDocumentList *SupplementalDocumentList `protobuf:"bytes,9,opt,name=supplemental_document_list,json=supplementalDocumentList,proto3" json:"supplemental_document_list,omitempty" xml:"SupplementalDocumentList"`
	// @gotags: xml:"ReleaseProfileVersionId,attr"
	ReleaseProfileVersionId avs.ReleaseProfileVersionId `protobuf:"varint,10,opt,name=release_profile_version_id,json=releaseProfileVersionId,proto3,enum=ddex.avs.ReleaseProfileVersionId" json:"release_profile_version_id,omitempty" xml:"ReleaseProfileVersionId,attr"`
	// @gotags: xml:"ReleaseProfileVariantVersionId,attr"
	ReleaseProfileVariantVersionId avs.ReleaseProfileVariantVersionId `protobuf:"varint,11,opt,name=release_profile_variant_version_id,json=releaseProfileVariantVersionId,proto3,enum=ddex.avs.ReleaseProfileVariantVersionId" json:"release_profile_variant_version_id,omitempty" xml:"ReleaseProfileVariantVersionId,attr"`
	// @gotags: xml:"AvsVersionId,attr"
	AvsVersionId string `protobuf:"bytes,12,opt,name=avs_version_id,json=avsVersionId,proto3" json:"avs_version_id,omitempty" xml:"AvsVersionId,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,13,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *NewReleaseMessage) Reset() {
	*x = NewReleaseMessage{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewReleaseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewReleaseMessage) ProtoMessage() {}

func (x *NewReleaseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewReleaseMessage.ProtoReflect.Descriptor instead.
func (*NewReleaseMessage) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{0}
}

func (x *NewReleaseMessage) GetMessageHeader() *MessageHeader {
	if x != nil {
		return x.MessageHeader
	}
	return nil
}

func (x *NewReleaseMessage) GetReleaseAdmin() []*ReleaseAdmin {
	if x != nil {
		return x.ReleaseAdmin
	}
	return nil
}

func (x *NewReleaseMessage) GetPartyList() *PartyList {
	if x != nil {
		return x.PartyList
	}
	return nil
}

func (x *NewReleaseMessage) GetCueSheetList() *CueSheetList {
	if x != nil {
		return x.CueSheetList
	}
	return nil
}

func (x *NewReleaseMessage) GetResourceList() *ResourceList {
	if x != nil {
		return x.ResourceList
	}
	return nil
}

func (x *NewReleaseMessage) GetChapterList() *ChapterList {
	if x != nil {
		return x.ChapterList
	}
	return nil
}

func (x *NewReleaseMessage) GetReleaseList() *ReleaseList {
	if x != nil {
		return x.ReleaseList
	}
	return nil
}

func (x *NewReleaseMessage) GetDealList() *DealList {
	if x != nil {
		return x.DealList
	}
	return nil
}

func (x *NewReleaseMessage) GetSupplementalDocumentList() *SupplementalDocumentList {
	if x != nil {
		return x.SupplementalDocumentList
	}
	return nil
}

func (x *NewReleaseMessage) GetReleaseProfileVersionId() avs.ReleaseProfileVersionId {
	if x != nil {
		return x.ReleaseProfileVersionId
	}
	return avs.ReleaseProfileVersionId(0)
}

func (x *NewReleaseMessage) GetReleaseProfileVariantVersionId() avs.ReleaseProfileVariantVersionId {
	if x != nil {
		return x.ReleaseProfileVariantVersionId
	}
	return avs.ReleaseProfileVariantVersionId(0)
}

func (x *NewReleaseMessage) GetAvsVersionId() string {
	if x != nil {
		return x.AvsVersionId
	}
	return ""
}

func (x *NewReleaseMessage) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type PurgeReleaseMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageHeader"
	MessageHeader *MessageHeader `protobuf:"bytes,1,opt,name=message_header,json=messageHeader,proto3" json:"message_header,omitempty" xml:"MessageHeader"`
	// @gotags: xml:"PurgedRelease"
	PurgedRelease *PurgedRelease `protobuf:"bytes,2,opt,name=purged_release,json=purgedRelease,proto3" json:"purged_release,omitempty" xml:"PurgedRelease"`
	// @gotags: xml:"AvsVersionId,attr"
	AvsVersionId string `protobuf:"bytes,3,opt,name=avs_version_id,json=avsVersionId,proto3" json:"avs_version_id,omitempty" xml:"AvsVersionId,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,4,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PurgeReleaseMessage) Reset() {
	*x = PurgeReleaseMessage{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgeReleaseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgeReleaseMessage) ProtoMessage() {}

func (x *PurgeReleaseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgeReleaseMessage.ProtoReflect.Descriptor instead.
func (*PurgeReleaseMessage) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{1}
}

func (x *PurgeReleaseMessage) GetMessageHeader() *MessageHeader {
	if x != nil {
		return x.MessageHeader
	}
	return nil
}

func (x *PurgeReleaseMessage) GetPurgedRelease() *PurgedRelease {
	if x != nil {
		return x.PurgedRelease
	}
	return nil
}

func (x *PurgeReleaseMessage) GetAvsVersionId() string {
	if x != nil {
		return x.AvsVersionId
	}
	return ""
}

func (x *PurgeReleaseMessage) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type AdministratingRecordCompany struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"RecordCompanyPartyReference"
	RecordCompanyPartyReference string `protobuf:"bytes,1,opt,name=record_company_party_reference,json=recordCompanyPartyReference,proto3" json:"record_company_party_reference,omitempty" xml:"RecordCompanyPartyReference"`
	// @gotags: xml:"Role"
	Role          *AdministratingRecordCompanyRole `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty" xml:"Role"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdministratingRecordCompany) Reset() {
	*x = AdministratingRecordCompany{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdministratingRecordCompany) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministratingRecordCompany) ProtoMessage() {}

func (x *AdministratingRecordCompany) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministratingRecordCompany.ProtoReflect.Descriptor instead.
func (*AdministratingRecordCompany) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{2}
}

func (x *AdministratingRecordCompany) GetRecordCompanyPartyReference() string {
	if x != nil {
		return x.RecordCompanyPartyReference
	}
	return ""
}

func (x *AdministratingRecordCompany) GetRole() *AdministratingRecordCompanyRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type AudioDeliveryFile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Type"
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"ContainerFormat"
	ContainerFormat *ContainerFormat `protobuf:"bytes,2,opt,name=container_format,json=containerFormat,proto3" json:"container_format,omitempty" xml:"ContainerFormat"`
	// @gotags: xml:"AudioCodecType"
	AudioCodecType *AudioCodecType `protobuf:"bytes,3,opt,name=audio_codec_type,json=audioCodecType,proto3" json:"audio_codec_type,omitempty" xml:"AudioCodecType"`
	// @gotags: xml:"BitRate"
	BitRate *BitRate `protobuf:"bytes,4,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty" xml:"BitRate"`
	// @gotags: xml:"OriginalBitRate"
	OriginalBitRate *BitRate `protobuf:"bytes,5,opt,name=original_bit_rate,json=originalBitRate,proto3" json:"original_bit_rate,omitempty" xml:"OriginalBitRate"`
	// @gotags: xml:"NumberOfChannels"
	NumberOfChannels string `protobuf:"bytes,6,opt,name=number_of_channels,json=numberOfChannels,proto3" json:"number_of_channels,omitempty" xml:"NumberOfChannels"`
	// @gotags: xml:"NumberOfAudioObjects"
	NumberOfAudioObjects int32 `protobuf:"varint,7,opt,name=number_of_audio_objects,json=numberOfAudioObjects,proto3" json:"number_of_audio_objects,omitempty" xml:"NumberOfAudioObjects"`
	// @gotags: xml:"SamplingRate"
	SamplingRate *SamplingRate `protobuf:"bytes,8,opt,name=sampling_rate,json=samplingRate,proto3" json:"sampling_rate,omitempty" xml:"SamplingRate"`
	// @gotags: xml:"OriginalSamplingRate"
	OriginalSamplingRate *SamplingRate `protobuf:"bytes,9,opt,name=original_sampling_rate,json=originalSamplingRate,proto3" json:"original_sampling_rate,omitempty" xml:"OriginalSamplingRate"`
	// @gotags: xml:"BitsPerSample"
	BitsPerSample int32 `protobuf:"varint,10,opt,name=bits_per_sample,json=bitsPerSample,proto3" json:"bits_per_sample,omitempty" xml:"BitsPerSample"`
	// @gotags: xml:"Duration"
	Duration string `protobuf:"bytes,11,opt,name=duration,proto3" json:"duration,omitempty" xml:"Duration"`
	// @gotags: xml:"BitDepth"
	BitDepth int32 `protobuf:"varint,12,opt,name=bit_depth,json=bitDepth,proto3" json:"bit_depth,omitempty" xml:"BitDepth"`
	// @gotags: xml:"File"
	File *File `protobuf:"bytes,13,opt,name=file,proto3" json:"file,omitempty" xml:"File"`
	// @gotags: xml:"Fingerprint"
	Fingerprint []*Fingerprint `protobuf:"bytes,14,rep,name=fingerprint,proto3" json:"fingerprint,omitempty" xml:"Fingerprint"`
	// @gotags: xml:"IsProvidedInDelivery"
	IsProvidedInDelivery bool `protobuf:"varint,15,opt,name=is_provided_in_delivery,json=isProvidedInDelivery,proto3" json:"is_provided_in_delivery,omitempty" xml:"IsProvidedInDelivery"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *AudioDeliveryFile) Reset() {
	*x = AudioDeliveryFile{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioDeliveryFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioDeliveryFile) ProtoMessage() {}

func (x *AudioDeliveryFile) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioDeliveryFile.ProtoReflect.Descriptor instead.
func (*AudioDeliveryFile) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{3}
}

func (x *AudioDeliveryFile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AudioDeliveryFile) GetContainerFormat() *ContainerFormat {
	if x != nil {
		return x.ContainerFormat
	}
	return nil
}

func (x *AudioDeliveryFile) GetAudioCodecType() *AudioCodecType {
	if x != nil {
		return x.AudioCodecType
	}
	return nil
}

func (x *AudioDeliveryFile) GetBitRate() *BitRate {
	if x != nil {
		return x.BitRate
	}
	return nil
}

func (x *AudioDeliveryFile) GetOriginalBitRate() *BitRate {
	if x != nil {
		return x.OriginalBitRate
	}
	return nil
}

func (x *AudioDeliveryFile) GetNumberOfChannels() string {
	if x != nil {
		return x.NumberOfChannels
	}
	return ""
}

func (x *AudioDeliveryFile) GetNumberOfAudioObjects() int32 {
	if x != nil {
		return x.NumberOfAudioObjects
	}
	return 0
}

func (x *AudioDeliveryFile) GetSamplingRate() *SamplingRate {
	if x != nil {
		return x.SamplingRate
	}
	return nil
}

func (x *AudioDeliveryFile) GetOriginalSamplingRate() *SamplingRate {
	if x != nil {
		return x.OriginalSamplingRate
	}
	return nil
}

func (x *AudioDeliveryFile) GetBitsPerSample() int32 {
	if x != nil {
		return x.BitsPerSample
	}
	return 0
}

func (x *AudioDeliveryFile) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *AudioDeliveryFile) GetBitDepth() int32 {
	if x != nil {
		return x.BitDepth
	}
	return 0
}

func (x *AudioDeliveryFile) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *AudioDeliveryFile) GetFingerprint() []*Fingerprint {
	if x != nil {
		return x.Fingerprint
	}
	return nil
}

func (x *AudioDeliveryFile) GetIsProvidedInDelivery() bool {
	if x != nil {
		return x.IsProvidedInDelivery
	}
	return false
}

type AvRating struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Rating"
	Rating string `protobuf:"bytes,1,opt,name=rating,proto3" json:"rating,omitempty" xml:"Rating"`
	// @gotags: xml:"Agency"
	Agency *RatingAgency `protobuf:"bytes,2,opt,name=agency,proto3" json:"agency,omitempty" xml:"Agency"`
	// @gotags: xml:"Reason"
	Reason *RatingReason `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty" xml:"Reason"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,4,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AvRating) Reset() {
	*x = AvRating{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AvRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvRating) ProtoMessage() {}

func (x *AvRating) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvRating.ProtoReflect.Descriptor instead.
func (*AvRating) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{4}
}

func (x *AvRating) GetRating() string {
	if x != nil {
		return x.Rating
	}
	return ""
}

func (x *AvRating) GetAgency() *RatingAgency {
	if x != nil {
		return x.Agency
	}
	return nil
}

func (x *AvRating) GetReason() *RatingReason {
	if x != nil {
		return x.Reason
	}
	return nil
}

func (x *AvRating) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *AvRating) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type Brand struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"BrandReference"
	BrandReference string `protobuf:"bytes,1,opt,name=brand_reference,json=brandReference,proto3" json:"brand_reference,omitempty" xml:"BrandReference"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Brand) Reset() {
	*x = Brand{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Brand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brand) ProtoMessage() {}

func (x *Brand) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brand.ProtoReflect.Descriptor instead.
func (*Brand) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{5}
}

func (x *Brand) GetBrandReference() string {
	if x != nil {
		return x.BrandReference
	}
	return ""
}

type Channel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,1,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"URL"
	URL           []string `protobuf:"bytes,2,rep,name=u_r_l,json=uRL,proto3" json:"u_r_l,omitempty" xml:"URL"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Channel) Reset() {
	*x = Channel{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{6}
}

func (x *Channel) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *Channel) GetURL() []string {
	if x != nil {
		return x.URL
	}
	return nil
}

type Chapter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ChapterReference"
	ChapterReference string `protobuf:"bytes,1,opt,name=chapter_reference,json=chapterReference,proto3" json:"chapter_reference,omitempty" xml:"ChapterReference"`
	// @gotags: xml:"ChapterId"
	ChapterId []*ChapterId `protobuf:"bytes,2,rep,name=chapter_id,json=chapterId,proto3" json:"chapter_id,omitempty" xml:"ChapterId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,3,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,4,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,5,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,6,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"SequenceNumber"
	SequenceNumber int32 `protobuf:"varint,7,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber"`
	// @gotags: xml:"Contributor"
	Contributor []*Contributor `protobuf:"bytes,8,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	// @gotags: xml:"Character"
	Character []*Character `protobuf:"bytes,9,rep,name=character,proto3" json:"character,omitempty" xml:"Character"`
	// @gotags: xml:"RepresentativeImageReference"
	RepresentativeImageReference string `protobuf:"bytes,10,opt,name=representative_image_reference,json=representativeImageReference,proto3" json:"representative_image_reference,omitempty" xml:"RepresentativeImageReference"`
	// @gotags: xml:"StartTime"
	StartTime string `protobuf:"bytes,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty" xml:"StartTime"`
	// @gotags: xml:"Duration"
	Duration string `protobuf:"bytes,12,opt,name=duration,proto3" json:"duration,omitempty" xml:"Duration"`
	// @gotags: xml:"EndTime"
	EndTime string `protobuf:"bytes,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty" xml:"EndTime"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,14,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{7}
}

func (x *Chapter) GetChapterReference() string {
	if x != nil {
		return x.ChapterReference
	}
	return ""
}

func (x *Chapter) GetChapterId() []*ChapterId {
	if x != nil {
		return x.ChapterId
	}
	return nil
}

func (x *Chapter) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *Chapter) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *Chapter) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *Chapter) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *Chapter) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *Chapter) GetContributor() []*Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

func (x *Chapter) GetCharacter() []*Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *Chapter) GetRepresentativeImageReference() string {
	if x != nil {
		return x.RepresentativeImageReference
	}
	return ""
}

func (x *Chapter) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Chapter) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Chapter) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *Chapter) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type ChapterList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Chapter"
	Chapter []*Chapter `protobuf:"bytes,1,rep,name=chapter,proto3" json:"chapter,omitempty" xml:"Chapter"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ChapterList) Reset() {
	*x = ChapterList{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChapterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterList) ProtoMessage() {}

func (x *ChapterList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterList.ProtoReflect.Descriptor instead.
func (*ChapterList) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{8}
}

func (x *ChapterList) GetChapter() []*Chapter {
	if x != nil {
		return x.Chapter
	}
	return nil
}

func (x *ChapterList) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type Character struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"CharacterPartyReference"
	CharacterPartyReference string `protobuf:"bytes,1,opt,name=character_party_reference,json=characterPartyReference,proto3" json:"character_party_reference,omitempty" xml:"CharacterPartyReference"`
	// @gotags: xml:"Performer"
	Performer *Contributor `protobuf:"bytes,2,opt,name=performer,proto3" json:"performer,omitempty" xml:"Performer"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,3,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Character) Reset() {
	*x = Character{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{9}
}

func (x *Character) GetCharacterPartyReference() string {
	if x != nil {
		return x.CharacterPartyReference
	}
	return ""
}

func (x *Character) GetPerformer() *Contributor {
	if x != nil {
		return x.Performer
	}
	return nil
}

func (x *Character) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type ClipDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ClipType"
	ClipType *ClipType `protobuf:"bytes,1,opt,name=clip_type,json=clipType,proto3" json:"clip_type,omitempty" xml:"ClipType"`
	// @gotags: xml:"TopLeftCorner"
	TopLeftCorner string `protobuf:"bytes,2,opt,name=top_left_corner,json=topLeftCorner,proto3" json:"top_left_corner,omitempty" xml:"TopLeftCorner"`
	// @gotags: xml:"BottomRightCorner"
	BottomRightCorner string `protobuf:"bytes,3,opt,name=bottom_right_corner,json=bottomRightCorner,proto3" json:"bottom_right_corner,omitempty" xml:"BottomRightCorner"`
	// @gotags: xml:"ExpressionType"
	ExpressionType avs.ExpressionType `protobuf:"varint,4,opt,name=expression_type,json=expressionType,proto3,enum=ddex.avs.ExpressionType" json:"expression_type,omitempty" xml:"ExpressionType"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClipDetails) Reset() {
	*x = ClipDetails{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClipDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClipDetails) ProtoMessage() {}

func (x *ClipDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClipDetails.ProtoReflect.Descriptor instead.
func (*ClipDetails) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{10}
}

func (x *ClipDetails) GetClipType() *ClipType {
	if x != nil {
		return x.ClipType
	}
	return nil
}

func (x *ClipDetails) GetTopLeftCorner() string {
	if x != nil {
		return x.TopLeftCorner
	}
	return ""
}

func (x *ClipDetails) GetBottomRightCorner() string {
	if x != nil {
		return x.BottomRightCorner
	}
	return ""
}

func (x *ClipDetails) GetExpressionType() avs.ExpressionType {
	if x != nil {
		return x.ExpressionType
	}
	return avs.ExpressionType(0)
}

type ClipRelease struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseReference"
	ReleaseReference string `protobuf:"bytes,1,opt,name=release_reference,json=releaseReference,proto3" json:"release_reference,omitempty" xml:"ReleaseReference"`
	// @gotags: xml:"ReleaseId"
	ReleaseId *ReleaseId `protobuf:"bytes,2,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty" xml:"ReleaseId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,3,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,4,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,5,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,6,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"ReleaseResourceReference"
	ReleaseResourceReference string `protobuf:"bytes,7,opt,name=release_resource_reference,json=releaseResourceReference,proto3" json:"release_resource_reference,omitempty" xml:"ReleaseResourceReference"`
	// @gotags: xml:"ReleaseLabelReference"
	ReleaseLabelReference []*ReleaseLabelReferenceWithParty `protobuf:"bytes,8,rep,name=release_label_reference,json=releaseLabelReference,proto3" json:"release_label_reference,omitempty" xml:"ReleaseLabelReference"`
	// @gotags: xml:"DisplayGenre"
	DisplayGenre []*GenreWithTerritory `protobuf:"bytes,9,rep,name=display_genre,json=displayGenre,proto3" json:"display_genre,omitempty" xml:"DisplayGenre"`
	// @gotags: xml:"RelatedRelease"
	RelatedRelease []*RelatedRelease `protobuf:"bytes,10,rep,name=related_release,json=relatedRelease,proto3" json:"related_release,omitempty" xml:"RelatedRelease"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ClipRelease) Reset() {
	*x = ClipRelease{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClipRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClipRelease) ProtoMessage() {}

func (x *ClipRelease) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClipRelease.ProtoReflect.Descriptor instead.
func (*ClipRelease) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{11}
}

func (x *ClipRelease) GetReleaseReference() string {
	if x != nil {
		return x.ReleaseReference
	}
	return ""
}

func (x *ClipRelease) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *ClipRelease) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *ClipRelease) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *ClipRelease) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *ClipRelease) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *ClipRelease) GetReleaseResourceReference() string {
	if x != nil {
		return x.ReleaseResourceReference
	}
	return ""
}

func (x *ClipRelease) GetReleaseLabelReference() []*ReleaseLabelReferenceWithParty {
	if x != nil {
		return x.ReleaseLabelReference
	}
	return nil
}

func (x *ClipRelease) GetDisplayGenre() []*GenreWithTerritory {
	if x != nil {
		return x.DisplayGenre
	}
	return nil
}

func (x *ClipRelease) GetRelatedRelease() []*RelatedRelease {
	if x != nil {
		return x.RelatedRelease
	}
	return nil
}

type CommercialModelType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CommercialModelType) Reset() {
	*x = CommercialModelType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommercialModelType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommercialModelType) ProtoMessage() {}

func (x *CommercialModelType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommercialModelType.ProtoReflect.Descriptor instead.
func (*CommercialModelType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{12}
}

func (x *CommercialModelType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CommercialModelType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CommercialModelType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ConditionForRightsClaimPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Value"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Unit"
	Unit avs.UnitOfConditionValue `protobuf:"varint,2,opt,name=unit,proto3,enum=ddex.avs.UnitOfConditionValue" json:"unit,omitempty" xml:"Unit"`
	// @gotags: xml:"ReferenceCreation"
	ReferenceCreation avs.ReferenceCreation `protobuf:"varint,3,opt,name=reference_creation,json=referenceCreation,proto3,enum=ddex.avs.ReferenceCreation" json:"reference_creation,omitempty" xml:"ReferenceCreation"`
	// @gotags: xml:"RelationalRelator"
	RelationalRelator avs.RelationalRelator `protobuf:"varint,4,opt,name=relational_relator,json=relationalRelator,proto3,enum=ddex.avs.RelationalRelator" json:"relational_relator,omitempty" xml:"RelationalRelator"`
	// @gotags: xml:"MeasurementType"
	MeasurementType avs.MeasurementType `protobuf:"varint,5,opt,name=measurement_type,json=measurementType,proto3,enum=ddex.avs.MeasurementType" json:"measurement_type,omitempty" xml:"MeasurementType"`
	// @gotags: xml:"Segment"
	Segment []*Segment `protobuf:"bytes,6,rep,name=segment,proto3" json:"segment,omitempty" xml:"Segment"`
	// @gotags: xml:"ServiceException"
	ServiceException []*ServiceException `protobuf:"bytes,7,rep,name=service_exception,json=serviceException,proto3" json:"service_exception,omitempty" xml:"ServiceException"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ConditionForRightsClaimPolicy) Reset() {
	*x = ConditionForRightsClaimPolicy{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConditionForRightsClaimPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionForRightsClaimPolicy) ProtoMessage() {}

func (x *ConditionForRightsClaimPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionForRightsClaimPolicy.ProtoReflect.Descriptor instead.
func (*ConditionForRightsClaimPolicy) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{13}
}

func (x *ConditionForRightsClaimPolicy) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ConditionForRightsClaimPolicy) GetUnit() avs.UnitOfConditionValue {
	if x != nil {
		return x.Unit
	}
	return avs.UnitOfConditionValue(0)
}

func (x *ConditionForRightsClaimPolicy) GetReferenceCreation() avs.ReferenceCreation {
	if x != nil {
		return x.ReferenceCreation
	}
	return avs.ReferenceCreation(0)
}

func (x *ConditionForRightsClaimPolicy) GetRelationalRelator() avs.RelationalRelator {
	if x != nil {
		return x.RelationalRelator
	}
	return avs.RelationalRelator(0)
}

func (x *ConditionForRightsClaimPolicy) GetMeasurementType() avs.MeasurementType {
	if x != nil {
		return x.MeasurementType
	}
	return avs.MeasurementType(0)
}

func (x *ConditionForRightsClaimPolicy) GetSegment() []*Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

func (x *ConditionForRightsClaimPolicy) GetServiceException() []*ServiceException {
	if x != nil {
		return x.ServiceException
	}
	return nil
}

type CoreArea struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TopLeftCorner"
	TopLeftCorner string `protobuf:"bytes,1,opt,name=top_left_corner,json=topLeftCorner,proto3" json:"top_left_corner,omitempty" xml:"TopLeftCorner"`
	// @gotags: xml:"BottomRightCorner"
	BottomRightCorner string `protobuf:"bytes,2,opt,name=bottom_right_corner,json=bottomRightCorner,proto3" json:"bottom_right_corner,omitempty" xml:"BottomRightCorner"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CoreArea) Reset() {
	*x = CoreArea{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CoreArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoreArea) ProtoMessage() {}

func (x *CoreArea) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoreArea.ProtoReflect.Descriptor instead.
func (*CoreArea) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{14}
}

func (x *CoreArea) GetTopLeftCorner() string {
	if x != nil {
		return x.TopLeftCorner
	}
	return ""
}

func (x *CoreArea) GetBottomRightCorner() string {
	if x != nil {
		return x.BottomRightCorner
	}
	return ""
}

type Cue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"CueUseType"
	CueUseType *CueUseType `protobuf:"bytes,1,opt,name=cue_use_type,json=cueUseType,proto3" json:"cue_use_type,omitempty" xml:"CueUseType"`
	// @gotags: xml:"CueThemeType"
	CueThemeType *CueThemeType `protobuf:"bytes,2,opt,name=cue_theme_type,json=cueThemeType,proto3" json:"cue_theme_type,omitempty" xml:"CueThemeType"`
	// @gotags: xml:"CueVocalType"
	CueVocalType *CueVocalType `protobuf:"bytes,3,opt,name=cue_vocal_type,json=cueVocalType,proto3" json:"cue_vocal_type,omitempty" xml:"CueVocalType"`
	// @gotags: xml:"CueVisualPerceptionType"
	CueVisualPerceptionType *CueVisualPerceptionType `protobuf:"bytes,4,opt,name=cue_visual_perception_type,json=cueVisualPerceptionType,proto3" json:"cue_visual_perception_type,omitempty" xml:"CueVisualPerceptionType"`
	// @gotags: xml:"CueOrigin"
	CueOrigin *CueOrigin `protobuf:"bytes,5,opt,name=cue_origin,json=cueOrigin,proto3" json:"cue_origin,omitempty" xml:"CueOrigin"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,6,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,7,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,8,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,9,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"Contributor"
	Contributor []*Contributor `protobuf:"bytes,10,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	// @gotags: xml:"IsDance"
	IsDance bool `protobuf:"varint,11,opt,name=is_dance,json=isDance,proto3" json:"is_dance,omitempty" xml:"IsDance"`
	// @gotags: xml:"HasMusicalContent"
	HasMusicalContent bool `protobuf:"varint,12,opt,name=has_musical_content,json=hasMusicalContent,proto3" json:"has_musical_content,omitempty" xml:"HasMusicalContent"`
	// @gotags: xml:"PLine"
	PLine []*PLine `protobuf:"bytes,13,rep,name=p_line,json=pLine,proto3" json:"p_line,omitempty" xml:"PLine"`
	// @gotags: xml:"CLine"
	CLine []*CLine `protobuf:"bytes,14,rep,name=c_line,json=cLine,proto3" json:"c_line,omitempty" xml:"CLine"`
	// @gotags: xml:"StartTime"
	StartTime string `protobuf:"bytes,15,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty" xml:"StartTime"`
	// @gotags: xml:"Duration"
	Duration string `protobuf:"bytes,16,opt,name=duration,proto3" json:"duration,omitempty" xml:"Duration"`
	// @gotags: xml:"EndTime"
	EndTime       string `protobuf:"bytes,17,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty" xml:"EndTime"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cue) Reset() {
	*x = Cue{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cue) ProtoMessage() {}

func (x *Cue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cue.ProtoReflect.Descriptor instead.
func (*Cue) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{15}
}

func (x *Cue) GetCueUseType() *CueUseType {
	if x != nil {
		return x.CueUseType
	}
	return nil
}

func (x *Cue) GetCueThemeType() *CueThemeType {
	if x != nil {
		return x.CueThemeType
	}
	return nil
}

func (x *Cue) GetCueVocalType() *CueVocalType {
	if x != nil {
		return x.CueVocalType
	}
	return nil
}

func (x *Cue) GetCueVisualPerceptionType() *CueVisualPerceptionType {
	if x != nil {
		return x.CueVisualPerceptionType
	}
	return nil
}

func (x *Cue) GetCueOrigin() *CueOrigin {
	if x != nil {
		return x.CueOrigin
	}
	return nil
}

func (x *Cue) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *Cue) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *Cue) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *Cue) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *Cue) GetContributor() []*Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

func (x *Cue) GetIsDance() bool {
	if x != nil {
		return x.IsDance
	}
	return false
}

func (x *Cue) GetHasMusicalContent() bool {
	if x != nil {
		return x.HasMusicalContent
	}
	return false
}

func (x *Cue) GetPLine() []*PLine {
	if x != nil {
		return x.PLine
	}
	return nil
}

func (x *Cue) GetCLine() []*CLine {
	if x != nil {
		return x.CLine
	}
	return nil
}

func (x *Cue) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *Cue) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Cue) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type CueSheet struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"CueSheetId"
	CueSheetId []*ProprietaryId `protobuf:"bytes,1,rep,name=cue_sheet_id,json=cueSheetId,proto3" json:"cue_sheet_id,omitempty" xml:"CueSheetId"`
	// @gotags: xml:"CueSheetReference"
	CueSheetReference string `protobuf:"bytes,2,opt,name=cue_sheet_reference,json=cueSheetReference,proto3" json:"cue_sheet_reference,omitempty" xml:"CueSheetReference"`
	// @gotags: xml:"CueSheetType"
	CueSheetType *CueSheetType `protobuf:"bytes,3,opt,name=cue_sheet_type,json=cueSheetType,proto3" json:"cue_sheet_type,omitempty" xml:"CueSheetType"`
	// @gotags: xml:"Cue"
	Cue           []*Cue `protobuf:"bytes,4,rep,name=cue,proto3" json:"cue,omitempty" xml:"Cue"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CueSheet) Reset() {
	*x = CueSheet{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CueSheet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CueSheet) ProtoMessage() {}

func (x *CueSheet) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CueSheet.ProtoReflect.Descriptor instead.
func (*CueSheet) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{16}
}

func (x *CueSheet) GetCueSheetId() []*ProprietaryId {
	if x != nil {
		return x.CueSheetId
	}
	return nil
}

func (x *CueSheet) GetCueSheetReference() string {
	if x != nil {
		return x.CueSheetReference
	}
	return ""
}

func (x *CueSheet) GetCueSheetType() *CueSheetType {
	if x != nil {
		return x.CueSheetType
	}
	return nil
}

func (x *CueSheet) GetCue() []*Cue {
	if x != nil {
		return x.Cue
	}
	return nil
}

type CueSheetList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"CueSheet"
	CueSheet      []*CueSheet `protobuf:"bytes,1,rep,name=cue_sheet,json=cueSheet,proto3" json:"cue_sheet,omitempty" xml:"CueSheet"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CueSheetList) Reset() {
	*x = CueSheetList{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CueSheetList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CueSheetList) ProtoMessage() {}

func (x *CueSheetList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CueSheetList.ProtoReflect.Descriptor instead.
func (*CueSheetList) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{17}
}

func (x *CueSheetList) GetCueSheet() []*CueSheet {
	if x != nil {
		return x.CueSheet
	}
	return nil
}

type Deal struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"DealReference"
	DealReference []string `protobuf:"bytes,1,rep,name=deal_reference,json=dealReference,proto3" json:"deal_reference,omitempty" xml:"DealReference"`
	// @gotags: xml:"IsCommunicatedOutOfBand"
	IsCommunicatedOutOfBand bool `protobuf:"varint,2,opt,name=is_communicated_out_of_band,json=isCommunicatedOutOfBand,proto3" json:"is_communicated_out_of_band,omitempty" xml:"IsCommunicatedOutOfBand"`
	// @gotags: xml:"DealTerms"
	DealTerms *DealTerms `protobuf:"bytes,3,opt,name=deal_terms,json=dealTerms,proto3" json:"deal_terms,omitempty" xml:"DealTerms"`
	// @gotags: xml:"DealTechnicalResourceDetailsReferenceList"
	DealTechnicalResourceDetailsReferenceList *DealTechnicalResourceDetailsReferenceList `protobuf:"bytes,4,opt,name=deal_technical_resource_details_reference_list,json=dealTechnicalResourceDetailsReferenceList,proto3" json:"deal_technical_resource_details_reference_list,omitempty" xml:"DealTechnicalResourceDetailsReferenceList"`
	// @gotags: xml:"DistributionChannelPage"
	DistributionChannelPage []*DistributionChannelPage `protobuf:"bytes,5,rep,name=distribution_channel_page,json=distributionChannelPage,proto3" json:"distribution_channel_page,omitempty" xml:"DistributionChannelPage"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Deal) Reset() {
	*x = Deal{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deal) ProtoMessage() {}

func (x *Deal) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deal.ProtoReflect.Descriptor instead.
func (*Deal) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{18}
}

func (x *Deal) GetDealReference() []string {
	if x != nil {
		return x.DealReference
	}
	return nil
}

func (x *Deal) GetIsCommunicatedOutOfBand() bool {
	if x != nil {
		return x.IsCommunicatedOutOfBand
	}
	return false
}

func (x *Deal) GetDealTerms() *DealTerms {
	if x != nil {
		return x.DealTerms
	}
	return nil
}

func (x *Deal) GetDealTechnicalResourceDetailsReferenceList() *DealTechnicalResourceDetailsReferenceList {
	if x != nil {
		return x.DealTechnicalResourceDetailsReferenceList
	}
	return nil
}

func (x *Deal) GetDistributionChannelPage() []*DistributionChannelPage {
	if x != nil {
		return x.DistributionChannelPage
	}
	return nil
}

type DealList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseDeal"
	ReleaseDeal []*ReleaseDeal `protobuf:"bytes,1,rep,name=release_deal,json=releaseDeal,proto3" json:"release_deal,omitempty" xml:"ReleaseDeal"`
	// @gotags: xml:"ReleaseVisibility"
	ReleaseVisibility []*ReleaseVisibility `protobuf:"bytes,2,rep,name=release_visibility,json=releaseVisibility,proto3" json:"release_visibility,omitempty" xml:"ReleaseVisibility"`
	// @gotags: xml:"TrackReleaseVisibility"
	TrackReleaseVisibility []*TrackReleaseVisibility `protobuf:"bytes,3,rep,name=track_release_visibility,json=trackReleaseVisibility,proto3" json:"track_release_visibility,omitempty" xml:"TrackReleaseVisibility"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DealList) Reset() {
	*x = DealList{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DealList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealList) ProtoMessage() {}

func (x *DealList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealList.ProtoReflect.Descriptor instead.
func (*DealList) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{19}
}

func (x *DealList) GetReleaseDeal() []*ReleaseDeal {
	if x != nil {
		return x.ReleaseDeal
	}
	return nil
}

func (x *DealList) GetReleaseVisibility() []*ReleaseVisibility {
	if x != nil {
		return x.ReleaseVisibility
	}
	return nil
}

func (x *DealList) GetTrackReleaseVisibility() []*TrackReleaseVisibility {
	if x != nil {
		return x.TrackReleaseVisibility
	}
	return nil
}

type DealResourceReferenceList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"DealResourceReference"
	DealResourceReference []string `protobuf:"bytes,1,rep,name=deal_resource_reference,json=dealResourceReference,proto3" json:"deal_resource_reference,omitempty" xml:"DealResourceReference"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DealResourceReferenceList) Reset() {
	*x = DealResourceReferenceList{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DealResourceReferenceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealResourceReferenceList) ProtoMessage() {}

func (x *DealResourceReferenceList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealResourceReferenceList.ProtoReflect.Descriptor instead.
func (*DealResourceReferenceList) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{20}
}

func (x *DealResourceReferenceList) GetDealResourceReference() []string {
	if x != nil {
		return x.DealResourceReference
	}
	return nil
}

type DealTechnicalResourceDetailsReferenceList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"DealTechnicalResourceDetailsReference"
	DealTechnicalResourceDetailsReference []string `protobuf:"bytes,1,rep,name=deal_technical_resource_details_reference,json=dealTechnicalResourceDetailsReference,proto3" json:"deal_technical_resource_details_reference,omitempty" xml:"DealTechnicalResourceDetailsReference"`
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *DealTechnicalResourceDetailsReferenceList) Reset() {
	*x = DealTechnicalResourceDetailsReferenceList{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DealTechnicalResourceDetailsReferenceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealTechnicalResourceDetailsReferenceList) ProtoMessage() {}

func (x *DealTechnicalResourceDetailsReferenceList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealTechnicalResourceDetailsReferenceList.ProtoReflect.Descriptor instead.
func (*DealTechnicalResourceDetailsReferenceList) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{21}
}

func (x *DealTechnicalResourceDetailsReferenceList) GetDealTechnicalResourceDetailsReference() []string {
	if x != nil {
		return x.DealTechnicalResourceDetailsReference
	}
	return nil
}

type DealTerms struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ValidityPeriod"
	ValidityPeriod []*PeriodWithStartDate `protobuf:"bytes,1,rep,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty" xml:"ValidityPeriod"`
	// @gotags: xml:"CommercialModelType"
	CommercialModelType []*CommercialModelType `protobuf:"bytes,2,rep,name=commercial_model_type,json=commercialModelType,proto3" json:"commercial_model_type,omitempty" xml:"CommercialModelType"`
	// @gotags: xml:"UseType"
	UseType []*DiscoverableUseType `protobuf:"bytes,3,rep,name=use_type,json=useType,proto3" json:"use_type,omitempty" xml:"UseType"`
	// @gotags: xml:"UserInterfaceType"
	UserInterfaceType []*UserInterfaceType `protobuf:"bytes,4,rep,name=user_interface_type,json=userInterfaceType,proto3" json:"user_interface_type,omitempty" xml:"UserInterfaceType"`
	// @gotags: xml:"CarrierType"
	CarrierType []*CarrierType `protobuf:"bytes,5,rep,name=carrier_type,json=carrierType,proto3" json:"carrier_type,omitempty" xml:"CarrierType"`
	// @gotags: xml:"TechnicalInstantiation"
	TechnicalInstantiation *DealTermsTechnicalInstantiation `protobuf:"bytes,6,opt,name=technical_instantiation,json=technicalInstantiation,proto3" json:"technical_instantiation,omitempty" xml:"TechnicalInstantiation"`
	// @gotags: xml:"NumberOfUsages"
	NumberOfUsages int32 `protobuf:"varint,7,opt,name=number_of_usages,json=numberOfUsages,proto3" json:"number_of_usages,omitempty" xml:"NumberOfUsages"`
	// @gotags: xml:"RightsClaimPolicy"
	RightsClaimPolicy []*RightsClaimPolicy `protobuf:"bytes,8,rep,name=rights_claim_policy,json=rightsClaimPolicy,proto3" json:"rights_claim_policy,omitempty" xml:"RightsClaimPolicy"`
	// @gotags: xml:"PriceInformation"
	PriceInformation []*PriceInformation `protobuf:"bytes,9,rep,name=price_information,json=priceInformation,proto3" json:"price_information,omitempty" xml:"PriceInformation"`
	// @gotags: xml:"IsPreOrderDeal"
	IsPreOrderDeal bool `protobuf:"varint,10,opt,name=is_pre_order_deal,json=isPreOrderDeal,proto3" json:"is_pre_order_deal,omitempty" xml:"IsPreOrderDeal"`
	// @gotags: xml:"InstantGratificationResourceList"
	InstantGratificationResourceList *DealResourceReferenceList `protobuf:"bytes,11,opt,name=instant_gratification_resource_list,json=instantGratificationResourceList,proto3" json:"instant_gratification_resource_list,omitempty" xml:"InstantGratificationResourceList"`
	// @gotags: xml:"PhysicalReturns"
	PhysicalReturns *PhysicalReturns `protobuf:"bytes,12,opt,name=physical_returns,json=physicalReturns,proto3" json:"physical_returns,omitempty" xml:"PhysicalReturns"`
	// @gotags: xml:"NumberOfProductsPerCarton"
	NumberOfProductsPerCarton int32 `protobuf:"varint,13,opt,name=number_of_products_per_carton,json=numberOfProductsPerCarton,proto3" json:"number_of_products_per_carton,omitempty" xml:"NumberOfProductsPerCarton"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *DealTerms) Reset() {
	*x = DealTerms{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DealTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealTerms) ProtoMessage() {}

func (x *DealTerms) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealTerms.ProtoReflect.Descriptor instead.
func (*DealTerms) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{22}
}

func (x *DealTerms) GetValidityPeriod() []*PeriodWithStartDate {
	if x != nil {
		return x.ValidityPeriod
	}
	return nil
}

func (x *DealTerms) GetCommercialModelType() []*CommercialModelType {
	if x != nil {
		return x.CommercialModelType
	}
	return nil
}

func (x *DealTerms) GetUseType() []*DiscoverableUseType {
	if x != nil {
		return x.UseType
	}
	return nil
}

func (x *DealTerms) GetUserInterfaceType() []*UserInterfaceType {
	if x != nil {
		return x.UserInterfaceType
	}
	return nil
}

func (x *DealTerms) GetCarrierType() []*CarrierType {
	if x != nil {
		return x.CarrierType
	}
	return nil
}

func (x *DealTerms) GetTechnicalInstantiation() *DealTermsTechnicalInstantiation {
	if x != nil {
		return x.TechnicalInstantiation
	}
	return nil
}

func (x *DealTerms) GetNumberOfUsages() int32 {
	if x != nil {
		return x.NumberOfUsages
	}
	return 0
}

func (x *DealTerms) GetRightsClaimPolicy() []*RightsClaimPolicy {
	if x != nil {
		return x.RightsClaimPolicy
	}
	return nil
}

func (x *DealTerms) GetPriceInformation() []*PriceInformation {
	if x != nil {
		return x.PriceInformation
	}
	return nil
}

func (x *DealTerms) GetIsPreOrderDeal() bool {
	if x != nil {
		return x.IsPreOrderDeal
	}
	return false
}

func (x *DealTerms) GetInstantGratificationResourceList() *DealResourceReferenceList {
	if x != nil {
		return x.InstantGratificationResourceList
	}
	return nil
}

func (x *DealTerms) GetPhysicalReturns() *PhysicalReturns {
	if x != nil {
		return x.PhysicalReturns
	}
	return nil
}

func (x *DealTerms) GetNumberOfProductsPerCarton() int32 {
	if x != nil {
		return x.NumberOfProductsPerCarton
	}
	return 0
}

type DealTermsTechnicalInstantiation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"VideoDefinitionType"
	VideoDefinitionType *VideoDefinitionType `protobuf:"bytes,1,opt,name=video_definition_type,json=videoDefinitionType,proto3" json:"video_definition_type,omitempty" xml:"VideoDefinitionType"`
	// @gotags: xml:"CodingType"
	CodingType avs.CodingType `protobuf:"varint,2,opt,name=coding_type,json=codingType,proto3,enum=ddex.avs.CodingType" json:"coding_type,omitempty" xml:"CodingType"`
	// @gotags: xml:"BitRate"
	BitRate       *BitRate `protobuf:"bytes,3,opt,name=bit_rate,json=bitRate,proto3" json:"bit_rate,omitempty" xml:"BitRate"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DealTermsTechnicalInstantiation) Reset() {
	*x = DealTermsTechnicalInstantiation{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DealTermsTechnicalInstantiation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealTermsTechnicalInstantiation) ProtoMessage() {}

func (x *DealTermsTechnicalInstantiation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealTermsTechnicalInstantiation.ProtoReflect.Descriptor instead.
func (*DealTermsTechnicalInstantiation) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{23}
}

func (x *DealTermsTechnicalInstantiation) GetVideoDefinitionType() *VideoDefinitionType {
	if x != nil {
		return x.VideoDefinitionType
	}
	return nil
}

func (x *DealTermsTechnicalInstantiation) GetCodingType() avs.CodingType {
	if x != nil {
		return x.CodingType
	}
	return avs.CodingType(0)
}

func (x *DealTermsTechnicalInstantiation) GetBitRate() *BitRate {
	if x != nil {
		return x.BitRate
	}
	return nil
}

type Deity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,2,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Deity) Reset() {
	*x = Deity{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Deity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Deity) ProtoMessage() {}

func (x *Deity) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Deity.ProtoReflect.Descriptor instead.
func (*Deity) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{24}
}

func (x *Deity) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Deity) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *Deity) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type DelegatedUsageRights struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"UseType"
	UseType []*UseType `protobuf:"bytes,1,rep,name=use_type,json=useType,proto3" json:"use_type,omitempty" xml:"UseType"`
	// @gotags: xml:"PeriodOfRightsDelegation"
	PeriodOfRightsDelegation *Period `protobuf:"bytes,2,opt,name=period_of_rights_delegation,json=periodOfRightsDelegation,proto3" json:"period_of_rights_delegation,omitempty" xml:"PeriodOfRightsDelegation"`
	// @gotags: xml:"TerritoryOfRightsDelegation"
	TerritoryOfRightsDelegation []*AllTerritoryCode `protobuf:"bytes,3,rep,name=territory_of_rights_delegation,json=territoryOfRightsDelegation,proto3" json:"territory_of_rights_delegation,omitempty" xml:"TerritoryOfRightsDelegation"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *DelegatedUsageRights) Reset() {
	*x = DelegatedUsageRights{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelegatedUsageRights) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelegatedUsageRights) ProtoMessage() {}

func (x *DelegatedUsageRights) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelegatedUsageRights.ProtoReflect.Descriptor instead.
func (*DelegatedUsageRights) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{25}
}

func (x *DelegatedUsageRights) GetUseType() []*UseType {
	if x != nil {
		return x.UseType
	}
	return nil
}

func (x *DelegatedUsageRights) GetPeriodOfRightsDelegation() *Period {
	if x != nil {
		return x.PeriodOfRightsDelegation
	}
	return nil
}

func (x *DelegatedUsageRights) GetTerritoryOfRightsDelegation() []*AllTerritoryCode {
	if x != nil {
		return x.TerritoryOfRightsDelegation
	}
	return nil
}

type DescriptionWithTerritory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DescriptionWithTerritory) Reset() {
	*x = DescriptionWithTerritory{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DescriptionWithTerritory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescriptionWithTerritory) ProtoMessage() {}

func (x *DescriptionWithTerritory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescriptionWithTerritory.ProtoReflect.Descriptor instead.
func (*DescriptionWithTerritory) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{26}
}

func (x *DescriptionWithTerritory) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DescriptionWithTerritory) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DescriptionWithTerritory) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *DescriptionWithTerritory) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type DetailedResourceContributor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Role"
	Role []*ContributorRole `protobuf:"bytes,1,rep,name=role,proto3" json:"role,omitempty" xml:"Role"`
	// @gotags: xml:"InstrumentType"
	InstrumentType []*InstrumentType `protobuf:"bytes,2,rep,name=instrument_type,json=instrumentType,proto3" json:"instrument_type,omitempty" xml:"InstrumentType"`
	// @gotags: xml:"HasMadeFeaturedContribution"
	HasMadeFeaturedContribution bool `protobuf:"varint,3,opt,name=has_made_featured_contribution,json=hasMadeFeaturedContribution,proto3" json:"has_made_featured_contribution,omitempty" xml:"HasMadeFeaturedContribution"`
	// @gotags: xml:"HasMadeContractedContribution"
	HasMadeContractedContribution bool `protobuf:"varint,4,opt,name=has_made_contracted_contribution,json=hasMadeContractedContribution,proto3" json:"has_made_contracted_contribution,omitempty" xml:"HasMadeContractedContribution"`
	// @gotags: xml:"DisplayCredits"
	DisplayCredits []*DisplayCredits `protobuf:"bytes,5,rep,name=display_credits,json=displayCredits,proto3" json:"display_credits,omitempty" xml:"DisplayCredits"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DetailedResourceContributor) Reset() {
	*x = DetailedResourceContributor{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedResourceContributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedResourceContributor) ProtoMessage() {}

func (x *DetailedResourceContributor) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedResourceContributor.ProtoReflect.Descriptor instead.
func (*DetailedResourceContributor) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{27}
}

func (x *DetailedResourceContributor) GetRole() []*ContributorRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *DetailedResourceContributor) GetInstrumentType() []*InstrumentType {
	if x != nil {
		return x.InstrumentType
	}
	return nil
}

func (x *DetailedResourceContributor) GetHasMadeFeaturedContribution() bool {
	if x != nil {
		return x.HasMadeFeaturedContribution
	}
	return false
}

func (x *DetailedResourceContributor) GetHasMadeContractedContribution() bool {
	if x != nil {
		return x.HasMadeContractedContribution
	}
	return false
}

func (x *DetailedResourceContributor) GetDisplayCredits() []*DisplayCredits {
	if x != nil {
		return x.DisplayCredits
	}
	return nil
}

func (x *DetailedResourceContributor) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type DiscoverableUseType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"IsDiscoverable,attr"
	IsDiscoverable bool `protobuf:"varint,3,opt,name=is_discoverable,json=isDiscoverable,proto3" json:"is_discoverable,omitempty" xml:"IsDiscoverable,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,4,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DiscoverableUseType) Reset() {
	*x = DiscoverableUseType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverableUseType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverableUseType) ProtoMessage() {}

func (x *DiscoverableUseType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverableUseType.ProtoReflect.Descriptor instead.
func (*DiscoverableUseType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{28}
}

func (x *DiscoverableUseType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DiscoverableUseType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DiscoverableUseType) GetIsDiscoverable() bool {
	if x != nil {
		return x.IsDiscoverable
	}
	return false
}

func (x *DiscoverableUseType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type DisplayArtist struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ArtisticRole"
	ArtisticRole []*ContributorRole `protobuf:"bytes,1,rep,name=artistic_role,json=artisticRole,proto3" json:"artistic_role,omitempty" xml:"ArtisticRole"`
	// @gotags: xml:"TitleDisplayInformation"
	TitleDisplayInformation []*TitleDisplayInformation `protobuf:"bytes,2,rep,name=title_display_information,json=titleDisplayInformation,proto3" json:"title_display_information,omitempty" xml:"TitleDisplayInformation"`
	// @gotags: xml:"DisplayCredits"
	DisplayCredits []*DisplayCredits `protobuf:"bytes,3,rep,name=display_credits,json=displayCredits,proto3" json:"display_credits,omitempty" xml:"DisplayCredits"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DisplayArtist) Reset() {
	*x = DisplayArtist{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayArtist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayArtist) ProtoMessage() {}

func (x *DisplayArtist) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayArtist.ProtoReflect.Descriptor instead.
func (*DisplayArtist) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{29}
}

func (x *DisplayArtist) GetArtisticRole() []*ContributorRole {
	if x != nil {
		return x.ArtisticRole
	}
	return nil
}

func (x *DisplayArtist) GetTitleDisplayInformation() []*TitleDisplayInformation {
	if x != nil {
		return x.TitleDisplayInformation
	}
	return nil
}

func (x *DisplayArtist) GetDisplayCredits() []*DisplayCredits {
	if x != nil {
		return x.DisplayCredits
	}
	return nil
}

func (x *DisplayArtist) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type DisplayTitleText struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"IsInOriginalLanguage,attr"
	IsInOriginalLanguage bool `protobuf:"varint,5,opt,name=is_in_original_language,json=isInOriginalLanguage,proto3" json:"is_in_original_language,omitempty" xml:"IsInOriginalLanguage,attr"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DisplayTitleText) Reset() {
	*x = DisplayTitleText{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayTitleText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayTitleText) ProtoMessage() {}

func (x *DisplayTitleText) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayTitleText.ProtoReflect.Descriptor instead.
func (*DisplayTitleText) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{30}
}

func (x *DisplayTitleText) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DisplayTitleText) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DisplayTitleText) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *DisplayTitleText) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *DisplayTitleText) GetIsInOriginalLanguage() bool {
	if x != nil {
		return x.IsInOriginalLanguage
	}
	return false
}

type DistributionChannelPage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"PartyId"
	PartyId []*DetailedPartyId `protobuf:"bytes,1,rep,name=party_id,json=partyId,proto3" json:"party_id,omitempty" xml:"PartyId"`
	// @gotags: xml:"PageName"
	PageName *Name `protobuf:"bytes,2,opt,name=page_name,json=pageName,proto3" json:"page_name,omitempty" xml:"PageName"`
	// @gotags: xml:"URL"
	URL string `protobuf:"bytes,3,opt,name=u_r_l,json=uRL,proto3" json:"u_r_l,omitempty" xml:"URL"`
	// @gotags: xml:"UserName"
	UserName      string `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty" xml:"UserName"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DistributionChannelPage) Reset() {
	*x = DistributionChannelPage{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DistributionChannelPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionChannelPage) ProtoMessage() {}

func (x *DistributionChannelPage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionChannelPage.ProtoReflect.Descriptor instead.
func (*DistributionChannelPage) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{31}
}

func (x *DistributionChannelPage) GetPartyId() []*DetailedPartyId {
	if x != nil {
		return x.PartyId
	}
	return nil
}

func (x *DistributionChannelPage) GetPageName() *Name {
	if x != nil {
		return x.PageName
	}
	return nil
}

func (x *DistributionChannelPage) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *DistributionChannelPage) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type EditionContributor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Role"
	Role []*ContributorRole `protobuf:"bytes,1,rep,name=role,proto3" json:"role,omitempty" xml:"Role"`
	// @gotags: xml:"AiContribution"
	AiContribution avs.ContainsAI `protobuf:"varint,2,opt,name=ai_contribution,json=aiContribution,proto3,enum=ddex.avs.ContainsAI" json:"ai_contribution,omitempty" xml:"AiContribution"`
	// @gotags: xml:"HasMadeFeaturedContribution"
	HasMadeFeaturedContribution bool `protobuf:"varint,3,opt,name=has_made_featured_contribution,json=hasMadeFeaturedContribution,proto3" json:"has_made_featured_contribution,omitempty" xml:"HasMadeFeaturedContribution"`
	// @gotags: xml:"HasMadeContractedContribution"
	HasMadeContractedContribution bool `protobuf:"varint,4,opt,name=has_made_contracted_contribution,json=hasMadeContractedContribution,proto3" json:"has_made_contracted_contribution,omitempty" xml:"HasMadeContractedContribution"`
	// @gotags: xml:"IsCredited"
	IsCredited *IsCredited `protobuf:"bytes,5,opt,name=is_credited,json=isCredited,proto3" json:"is_credited,omitempty" xml:"IsCredited"`
	// @gotags: xml:"DisplayCredits"
	DisplayCredits []*DisplayCredits `protobuf:"bytes,6,rep,name=display_credits,json=displayCredits,proto3" json:"display_credits,omitempty" xml:"DisplayCredits"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,7,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EditionContributor) Reset() {
	*x = EditionContributor{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EditionContributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditionContributor) ProtoMessage() {}

func (x *EditionContributor) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditionContributor.ProtoReflect.Descriptor instead.
func (*EditionContributor) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{32}
}

func (x *EditionContributor) GetRole() []*ContributorRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *EditionContributor) GetAiContribution() avs.ContainsAI {
	if x != nil {
		return x.AiContribution
	}
	return avs.ContainsAI(0)
}

func (x *EditionContributor) GetHasMadeFeaturedContribution() bool {
	if x != nil {
		return x.HasMadeFeaturedContribution
	}
	return false
}

func (x *EditionContributor) GetHasMadeContractedContribution() bool {
	if x != nil {
		return x.HasMadeContractedContribution
	}
	return false
}

func (x *EditionContributor) GetIsCredited() *IsCredited {
	if x != nil {
		return x.IsCredited
	}
	return nil
}

func (x *EditionContributor) GetDisplayCredits() []*DisplayCredits {
	if x != nil {
		return x.DisplayCredits
	}
	return nil
}

func (x *EditionContributor) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type EventDateTimeWithoutFlags struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"LocationDescription,attr"
	LocationDescription string `protobuf:"bytes,4,opt,name=location_description,json=locationDescription,proto3" json:"location_description,omitempty" xml:"LocationDescription,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,5,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventDateTimeWithoutFlags) Reset() {
	*x = EventDateTimeWithoutFlags{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDateTimeWithoutFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDateTimeWithoutFlags) ProtoMessage() {}

func (x *EventDateTimeWithoutFlags) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDateTimeWithoutFlags.ProtoReflect.Descriptor instead.
func (*EventDateTimeWithoutFlags) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{33}
}

func (x *EventDateTimeWithoutFlags) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventDateTimeWithoutFlags) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

func (x *EventDateTimeWithoutFlags) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *EventDateTimeWithoutFlags) GetLocationDescription() string {
	if x != nil {
		return x.LocationDescription
	}
	return ""
}

func (x *EventDateTimeWithoutFlags) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type EventDateWithCurrentTerritory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"LocationDescription,attr"
	LocationDescription string `protobuf:"bytes,4,opt,name=location_description,json=locationDescription,proto3" json:"location_description,omitempty" xml:"LocationDescription,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,5,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventDateWithCurrentTerritory) Reset() {
	*x = EventDateWithCurrentTerritory{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDateWithCurrentTerritory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDateWithCurrentTerritory) ProtoMessage() {}

func (x *EventDateWithCurrentTerritory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDateWithCurrentTerritory.ProtoReflect.Descriptor instead.
func (*EventDateWithCurrentTerritory) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{34}
}

func (x *EventDateWithCurrentTerritory) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventDateWithCurrentTerritory) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

func (x *EventDateWithCurrentTerritory) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *EventDateWithCurrentTerritory) GetLocationDescription() string {
	if x != nil {
		return x.LocationDescription
	}
	return ""
}

func (x *EventDateWithCurrentTerritory) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type EventDateWithDefault struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.AllTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.AllTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventDateWithDefault) Reset() {
	*x = EventDateWithDefault{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDateWithDefault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDateWithDefault) ProtoMessage() {}

func (x *EventDateWithDefault) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDateWithDefault.ProtoReflect.Descriptor instead.
func (*EventDateWithDefault) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{35}
}

func (x *EventDateWithDefault) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventDateWithDefault) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

func (x *EventDateWithDefault) GetApplicableTerritoryCode() avs.AllTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.AllTerritoryCode(0)
}

func (x *EventDateWithDefault) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type EventDateWithoutFlags struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.AllTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.AllTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"LocationDescription,attr"
	LocationDescription string `protobuf:"bytes,4,opt,name=location_description,json=locationDescription,proto3" json:"location_description,omitempty" xml:"LocationDescription,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,5,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventDateWithoutFlags) Reset() {
	*x = EventDateWithoutFlags{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDateWithoutFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDateWithoutFlags) ProtoMessage() {}

func (x *EventDateWithoutFlags) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDateWithoutFlags.ProtoReflect.Descriptor instead.
func (*EventDateWithoutFlags) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{36}
}

func (x *EventDateWithoutFlags) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventDateWithoutFlags) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

func (x *EventDateWithoutFlags) GetApplicableTerritoryCode() avs.AllTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.AllTerritoryCode(0)
}

func (x *EventDateWithoutFlags) GetLocationDescription() string {
	if x != nil {
		return x.LocationDescription
	}
	return ""
}

func (x *EventDateWithoutFlags) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type ExternalResourceLink struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"URL"
	URL []string `protobuf:"bytes,1,rep,name=u_r_l,json=uRL,proto3" json:"u_r_l,omitempty" xml:"URL"`
	// @gotags: xml:"ValidityPeriod"
	ValidityPeriod *PeriodWithoutFlags `protobuf:"bytes,2,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty" xml:"ValidityPeriod"`
	// @gotags: xml:"ExternalLink"
	ExternalLink string `protobuf:"bytes,3,opt,name=external_link,json=externalLink,proto3" json:"external_link,omitempty" xml:"ExternalLink"`
	// @gotags: xml:"ExternallyLinkedResourceType"
	ExternallyLinkedResourceType []*ExternallyLinkedResourceType `protobuf:"bytes,4,rep,name=externally_linked_resource_type,json=externallyLinkedResourceType,proto3" json:"externally_linked_resource_type,omitempty" xml:"ExternallyLinkedResourceType"`
	// @gotags: xml:"FileFormat"
	FileFormat    string `protobuf:"bytes,5,opt,name=file_format,json=fileFormat,proto3" json:"file_format,omitempty" xml:"FileFormat"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalResourceLink) Reset() {
	*x = ExternalResourceLink{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalResourceLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalResourceLink) ProtoMessage() {}

func (x *ExternalResourceLink) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalResourceLink.ProtoReflect.Descriptor instead.
func (*ExternalResourceLink) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{37}
}

func (x *ExternalResourceLink) GetURL() []string {
	if x != nil {
		return x.URL
	}
	return nil
}

func (x *ExternalResourceLink) GetValidityPeriod() *PeriodWithoutFlags {
	if x != nil {
		return x.ValidityPeriod
	}
	return nil
}

func (x *ExternalResourceLink) GetExternalLink() string {
	if x != nil {
		return x.ExternalLink
	}
	return ""
}

func (x *ExternalResourceLink) GetExternallyLinkedResourceType() []*ExternallyLinkedResourceType {
	if x != nil {
		return x.ExternallyLinkedResourceType
	}
	return nil
}

func (x *ExternalResourceLink) GetFileFormat() string {
	if x != nil {
		return x.FileFormat
	}
	return ""
}

type HdrVideoDynamicMetadataType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Version,attr"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version,attr"`
	// @gotags: xml:"SdrDerivationPermitted,attr"
	SdrDerivationPermitted bool `protobuf:"varint,3,opt,name=sdr_derivation_permitted,json=sdrDerivationPermitted,proto3" json:"sdr_derivation_permitted,omitempty" xml:"SdrDerivationPermitted,attr"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *HdrVideoDynamicMetadataType) Reset() {
	*x = HdrVideoDynamicMetadataType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HdrVideoDynamicMetadataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HdrVideoDynamicMetadataType) ProtoMessage() {}

func (x *HdrVideoDynamicMetadataType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HdrVideoDynamicMetadataType.ProtoReflect.Descriptor instead.
func (*HdrVideoDynamicMetadataType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{38}
}

func (x *HdrVideoDynamicMetadataType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *HdrVideoDynamicMetadataType) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HdrVideoDynamicMetadataType) GetSdrDerivationPermitted() bool {
	if x != nil {
		return x.SdrDerivationPermitted
	}
	return false
}

type Image struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceReference"
	ResourceReference string `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3" json:"resource_reference,omitempty" xml:"ResourceReference"`
	// @gotags: xml:"Type"
	Type *ImageType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"ResourceId"
	ResourceId []*ResourceProprietaryId `protobuf:"bytes,3,rep,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,4,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,5,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,6,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,7,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"VersionType"
	VersionType []*VersionType `protobuf:"bytes,8,rep,name=version_type,json=versionType,proto3" json:"version_type,omitempty" xml:"VersionType"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithOriginalLanguage `protobuf:"bytes,9,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*DisplayArtist `protobuf:"bytes,10,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"Contributor"
	Contributor []*Contributor `protobuf:"bytes,11,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	// @gotags: xml:"ResourceRightsController"
	ResourceRightsController []*ResourceRightsController `protobuf:"bytes,12,rep,name=resource_rights_controller,json=resourceRightsController,proto3" json:"resource_rights_controller,omitempty" xml:"ResourceRightsController"`
	// @gotags: xml:"WorkRightsController"
	WorkRightsController []*WorkRightsController `protobuf:"bytes,13,rep,name=work_rights_controller,json=workRightsController,proto3" json:"work_rights_controller,omitempty" xml:"WorkRightsController"`
	// @gotags: xml:"CLine"
	CLine []*CLine `protobuf:"bytes,14,rep,name=c_line,json=cLine,proto3" json:"c_line,omitempty" xml:"CLine"`
	// @gotags: xml:"CourtesyLine"
	CourtesyLine []*CourtesyLine `protobuf:"bytes,15,rep,name=courtesy_line,json=courtesyLine,proto3" json:"courtesy_line,omitempty" xml:"CourtesyLine"`
	// @gotags: xml:"CreationDate"
	CreationDate *EventDateWithoutFlags `protobuf:"bytes,16,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty" xml:"CreationDate"`
	// @gotags: xml:"FirstPublicationDate"
	FirstPublicationDate []*FulfillmentDate `protobuf:"bytes,17,rep,name=first_publication_date,json=firstPublicationDate,proto3" json:"first_publication_date,omitempty" xml:"FirstPublicationDate"`
	// @gotags: xml:"ParentalWarningType"
	ParentalWarningType []*ParentalWarningTypeWithStandard `protobuf:"bytes,18,rep,name=parental_warning_type,json=parentalWarningType,proto3" json:"parental_warning_type,omitempty" xml:"ParentalWarningType"`
	// @gotags: xml:"RelatedRelease"
	RelatedRelease []*RelatedRelease `protobuf:"bytes,19,rep,name=related_release,json=relatedRelease,proto3" json:"related_release,omitempty" xml:"RelatedRelease"`
	// @gotags: xml:"RelatedResource"
	RelatedResource []*RelatedResource `protobuf:"bytes,20,rep,name=related_resource,json=relatedResource,proto3" json:"related_resource,omitempty" xml:"RelatedResource"`
	// @gotags: xml:"ContainsAI"
	ContainsAI avs.ContainsAI `protobuf:"varint,21,opt,name=contains_a_i,json=containsAI,proto3,enum=ddex.avs.ContainsAI" json:"contains_a_i,omitempty" xml:"ContainsAI"`
	// @gotags: xml:"ContainsHiddenContent"
	ContainsHiddenContent bool `protobuf:"varint,22,opt,name=contains_hidden_content,json=containsHiddenContent,proto3" json:"contains_hidden_content,omitempty" xml:"ContainsHiddenContent"`
	// @gotags: xml:"Description"
	Description []*DescriptionWithTerritory `protobuf:"bytes,23,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"TechnicalDetails"
	TechnicalDetails []*TechnicalImageDetails `protobuf:"bytes,24,rep,name=technical_details,json=technicalDetails,proto3" json:"technical_details,omitempty" xml:"TechnicalDetails"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,25,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"IsSupplemental,attr"
	IsSupplemental bool `protobuf:"varint,26,opt,name=is_supplemental,json=isSupplemental,proto3" json:"is_supplemental,omitempty" xml:"IsSupplemental,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{39}
}

func (x *Image) GetResourceReference() string {
	if x != nil {
		return x.ResourceReference
	}
	return ""
}

func (x *Image) GetType() *ImageType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Image) GetResourceId() []*ResourceProprietaryId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *Image) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *Image) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *Image) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *Image) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *Image) GetVersionType() []*VersionType {
	if x != nil {
		return x.VersionType
	}
	return nil
}

func (x *Image) GetDisplayArtistName() []*DisplayArtistNameWithOriginalLanguage {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Image) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *Image) GetContributor() []*Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

func (x *Image) GetResourceRightsController() []*ResourceRightsController {
	if x != nil {
		return x.ResourceRightsController
	}
	return nil
}

func (x *Image) GetWorkRightsController() []*WorkRightsController {
	if x != nil {
		return x.WorkRightsController
	}
	return nil
}

func (x *Image) GetCLine() []*CLine {
	if x != nil {
		return x.CLine
	}
	return nil
}

func (x *Image) GetCourtesyLine() []*CourtesyLine {
	if x != nil {
		return x.CourtesyLine
	}
	return nil
}

func (x *Image) GetCreationDate() *EventDateWithoutFlags {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *Image) GetFirstPublicationDate() []*FulfillmentDate {
	if x != nil {
		return x.FirstPublicationDate
	}
	return nil
}

func (x *Image) GetParentalWarningType() []*ParentalWarningTypeWithStandard {
	if x != nil {
		return x.ParentalWarningType
	}
	return nil
}

func (x *Image) GetRelatedRelease() []*RelatedRelease {
	if x != nil {
		return x.RelatedRelease
	}
	return nil
}

func (x *Image) GetRelatedResource() []*RelatedResource {
	if x != nil {
		return x.RelatedResource
	}
	return nil
}

func (x *Image) GetContainsAI() avs.ContainsAI {
	if x != nil {
		return x.ContainsAI
	}
	return avs.ContainsAI(0)
}

func (x *Image) GetContainsHiddenContent() bool {
	if x != nil {
		return x.ContainsHiddenContent
	}
	return false
}

func (x *Image) GetDescription() []*DescriptionWithTerritory {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Image) GetTechnicalDetails() []*TechnicalImageDetails {
	if x != nil {
		return x.TechnicalDetails
	}
	return nil
}

func (x *Image) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *Image) GetIsSupplemental() bool {
	if x != nil {
		return x.IsSupplemental
	}
	return false
}

type LinkedReleaseResourceReference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LinkDescription,attr"
	LinkDescription avs.LinkDescription `protobuf:"varint,2,opt,name=link_description,json=linkDescription,proto3,enum=ddex.avs.LinkDescription" json:"link_description,omitempty" xml:"LinkDescription,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,3,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,5,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	// @gotags: xml:"IsMultiFile,attr"
	IsMultiFile   bool `protobuf:"varint,7,opt,name=is_multi_file,json=isMultiFile,proto3" json:"is_multi_file,omitempty" xml:"IsMultiFile,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkedReleaseResourceReference) Reset() {
	*x = LinkedReleaseResourceReference{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkedReleaseResourceReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedReleaseResourceReference) ProtoMessage() {}

func (x *LinkedReleaseResourceReference) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedReleaseResourceReference.ProtoReflect.Descriptor instead.
func (*LinkedReleaseResourceReference) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{40}
}

func (x *LinkedReleaseResourceReference) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *LinkedReleaseResourceReference) GetLinkDescription() avs.LinkDescription {
	if x != nil {
		return x.LinkDescription
	}
	return avs.LinkDescription(0)
}

func (x *LinkedReleaseResourceReference) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *LinkedReleaseResourceReference) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *LinkedReleaseResourceReference) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

func (x *LinkedReleaseResourceReference) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *LinkedReleaseResourceReference) GetIsMultiFile() bool {
	if x != nil {
		return x.IsMultiFile
	}
	return false
}

type LocationAndDateOfSession struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"SessionType"
	SessionType []*SessionType `protobuf:"bytes,1,rep,name=session_type,json=sessionType,proto3" json:"session_type,omitempty" xml:"SessionType"`
	// @gotags: xml:"Period"
	Period *Period `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty" xml:"Period"`
	// @gotags: xml:"Venue"
	Venue []*Venue `protobuf:"bytes,3,rep,name=venue,proto3" json:"venue,omitempty" xml:"Venue"`
	// @gotags: xml:"Comment"
	Comment *TextWithFormat `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty" xml:"Comment"`
	// @gotags: xml:"Contributor"
	Contributor   []*PartyWithRole `protobuf:"bytes,5,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocationAndDateOfSession) Reset() {
	*x = LocationAndDateOfSession{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocationAndDateOfSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationAndDateOfSession) ProtoMessage() {}

func (x *LocationAndDateOfSession) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationAndDateOfSession.ProtoReflect.Descriptor instead.
func (*LocationAndDateOfSession) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{41}
}

func (x *LocationAndDateOfSession) GetSessionType() []*SessionType {
	if x != nil {
		return x.SessionType
	}
	return nil
}

func (x *LocationAndDateOfSession) GetPeriod() *Period {
	if x != nil {
		return x.Period
	}
	return nil
}

func (x *LocationAndDateOfSession) GetVenue() []*Venue {
	if x != nil {
		return x.Venue
	}
	return nil
}

func (x *LocationAndDateOfSession) GetComment() *TextWithFormat {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *LocationAndDateOfSession) GetContributor() []*PartyWithRole {
	if x != nil {
		return x.Contributor
	}
	return nil
}

type Party struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"PartyReference"
	PartyReference string `protobuf:"bytes,1,opt,name=party_reference,json=partyReference,proto3" json:"party_reference,omitempty" xml:"PartyReference"`
	// @gotags: xml:"Affiliation"
	Affiliation []*Affiliation `protobuf:"bytes,2,rep,name=affiliation,proto3" json:"affiliation,omitempty" xml:"Affiliation"`
	// @gotags: xml:"RelatedParty"
	RelatedParty []*RelatedParty `protobuf:"bytes,3,rep,name=related_party,json=relatedParty,proto3" json:"related_party,omitempty" xml:"RelatedParty"`
	// @gotags: xml:"ArtistProfilePage"
	ArtistProfilePage []string `protobuf:"bytes,4,rep,name=artist_profile_page,json=artistProfilePage,proto3" json:"artist_profile_page,omitempty" xml:"ArtistProfilePage"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Party) Reset() {
	*x = Party{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Party) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Party) ProtoMessage() {}

func (x *Party) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Party.ProtoReflect.Descriptor instead.
func (*Party) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{42}
}

func (x *Party) GetPartyReference() string {
	if x != nil {
		return x.PartyReference
	}
	return ""
}

func (x *Party) GetAffiliation() []*Affiliation {
	if x != nil {
		return x.Affiliation
	}
	return nil
}

func (x *Party) GetRelatedParty() []*RelatedParty {
	if x != nil {
		return x.RelatedParty
	}
	return nil
}

func (x *Party) GetArtistProfilePage() []string {
	if x != nil {
		return x.ArtistProfilePage
	}
	return nil
}

type PartyList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Party"
	Party []*Party `protobuf:"bytes,1,rep,name=party,proto3" json:"party,omitempty" xml:"Party"`
	// @gotags: xml:"Brand"
	Brand         []*Brand `protobuf:"bytes,2,rep,name=brand,proto3" json:"brand,omitempty" xml:"Brand"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartyList) Reset() {
	*x = PartyList{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyList) ProtoMessage() {}

func (x *PartyList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyList.ProtoReflect.Descriptor instead.
func (*PartyList) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{43}
}

func (x *PartyList) GetParty() []*Party {
	if x != nil {
		return x.Party
	}
	return nil
}

func (x *PartyList) GetBrand() []*Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

type PartyNameWithTerritory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"FullName"
	FullName *Name `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty" xml:"FullName"`
	// @gotags: xml:"FullNameAsciiTranscribed"
	FullNameAsciiTranscribed string `protobuf:"bytes,2,opt,name=full_name_ascii_transcribed,json=fullNameAsciiTranscribed,proto3" json:"full_name_ascii_transcribed,omitempty" xml:"FullNameAsciiTranscribed"`
	// @gotags: xml:"FullNameIndexed"
	FullNameIndexed *Name `protobuf:"bytes,3,opt,name=full_name_indexed,json=fullNameIndexed,proto3" json:"full_name_indexed,omitempty" xml:"FullNameIndexed"`
	// @gotags: xml:"NamesBeforeKeyName"
	NamesBeforeKeyName *Name `protobuf:"bytes,4,opt,name=names_before_key_name,json=namesBeforeKeyName,proto3" json:"names_before_key_name,omitempty" xml:"NamesBeforeKeyName"`
	// @gotags: xml:"KeyName"
	KeyName *Name `protobuf:"bytes,5,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty" xml:"KeyName"`
	// @gotags: xml:"NamesAfterKeyName"
	NamesAfterKeyName *Name `protobuf:"bytes,6,opt,name=names_after_key_name,json=namesAfterKeyName,proto3" json:"names_after_key_name,omitempty" xml:"NamesAfterKeyName"`
	// @gotags: xml:"AbbreviatedName"
	AbbreviatedName *Name `protobuf:"bytes,7,opt,name=abbreviated_name,json=abbreviatedName,proto3" json:"abbreviated_name,omitempty" xml:"AbbreviatedName"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,8,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"IsNickname,attr"
	IsNickname bool `protobuf:"varint,9,opt,name=is_nickname,json=isNickname,proto3" json:"is_nickname,omitempty" xml:"IsNickname,attr"`
	// @gotags: xml:"IsStageName,attr"
	IsStageName bool `protobuf:"varint,10,opt,name=is_stage_name,json=isStageName,proto3" json:"is_stage_name,omitempty" xml:"IsStageName,attr"`
	// @gotags: xml:"IsLegalName,attr"
	IsLegalName bool `protobuf:"varint,11,opt,name=is_legal_name,json=isLegalName,proto3" json:"is_legal_name,omitempty" xml:"IsLegalName,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,12,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,13,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"IsInOriginalLanguage,attr"
	IsInOriginalLanguage bool `protobuf:"varint,14,opt,name=is_in_original_language,json=isInOriginalLanguage,proto3" json:"is_in_original_language,omitempty" xml:"IsInOriginalLanguage,attr"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PartyNameWithTerritory) Reset() {
	*x = PartyNameWithTerritory{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyNameWithTerritory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameWithTerritory) ProtoMessage() {}

func (x *PartyNameWithTerritory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameWithTerritory.ProtoReflect.Descriptor instead.
func (*PartyNameWithTerritory) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{44}
}

func (x *PartyNameWithTerritory) GetFullName() *Name {
	if x != nil {
		return x.FullName
	}
	return nil
}

func (x *PartyNameWithTerritory) GetFullNameAsciiTranscribed() string {
	if x != nil {
		return x.FullNameAsciiTranscribed
	}
	return ""
}

func (x *PartyNameWithTerritory) GetFullNameIndexed() *Name {
	if x != nil {
		return x.FullNameIndexed
	}
	return nil
}

func (x *PartyNameWithTerritory) GetNamesBeforeKeyName() *Name {
	if x != nil {
		return x.NamesBeforeKeyName
	}
	return nil
}

func (x *PartyNameWithTerritory) GetKeyName() *Name {
	if x != nil {
		return x.KeyName
	}
	return nil
}

func (x *PartyNameWithTerritory) GetNamesAfterKeyName() *Name {
	if x != nil {
		return x.NamesAfterKeyName
	}
	return nil
}

func (x *PartyNameWithTerritory) GetAbbreviatedName() *Name {
	if x != nil {
		return x.AbbreviatedName
	}
	return nil
}

func (x *PartyNameWithTerritory) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *PartyNameWithTerritory) GetIsNickname() bool {
	if x != nil {
		return x.IsNickname
	}
	return false
}

func (x *PartyNameWithTerritory) GetIsStageName() bool {
	if x != nil {
		return x.IsStageName
	}
	return false
}

func (x *PartyNameWithTerritory) GetIsLegalName() bool {
	if x != nil {
		return x.IsLegalName
	}
	return false
}

func (x *PartyNameWithTerritory) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *PartyNameWithTerritory) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *PartyNameWithTerritory) GetIsInOriginalLanguage() bool {
	if x != nil {
		return x.IsInOriginalLanguage
	}
	return false
}

type PartyWithRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISNI"
	ISNI string `protobuf:"bytes,1,opt,name=i_s_n_i,json=iSNI,proto3" json:"i_s_n_i,omitempty" xml:"ISNI"`
	// @gotags: xml:"DPID"
	DPID string `protobuf:"bytes,2,opt,name=d_p_i_d,json=dPID,proto3" json:"d_p_i_d,omitempty" xml:"DPID"`
	// @gotags: xml:"IpiNameNumber"
	IpiNameNumber string `protobuf:"bytes,3,opt,name=ipi_name_number,json=ipiNameNumber,proto3" json:"ipi_name_number,omitempty" xml:"IpiNameNumber"`
	// @gotags: xml:"IPN"
	IPN string `protobuf:"bytes,4,opt,name=i_p_n,json=iPN,proto3" json:"i_p_n,omitempty" xml:"IPN"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,5,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"PartyName"
	PartyName *PartyNameWithTerritory `protobuf:"bytes,6,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty" xml:"PartyName"`
	// @gotags: xml:"Role"
	Role          *ResourceContributorRole `protobuf:"bytes,7,opt,name=role,proto3" json:"role,omitempty" xml:"Role"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartyWithRole) Reset() {
	*x = PartyWithRole{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyWithRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyWithRole) ProtoMessage() {}

func (x *PartyWithRole) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyWithRole.ProtoReflect.Descriptor instead.
func (*PartyWithRole) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{45}
}

func (x *PartyWithRole) GetISNI() string {
	if x != nil {
		return x.ISNI
	}
	return ""
}

func (x *PartyWithRole) GetDPID() string {
	if x != nil {
		return x.DPID
	}
	return ""
}

func (x *PartyWithRole) GetIpiNameNumber() string {
	if x != nil {
		return x.IpiNameNumber
	}
	return ""
}

func (x *PartyWithRole) GetIPN() string {
	if x != nil {
		return x.IPN
	}
	return ""
}

func (x *PartyWithRole) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *PartyWithRole) GetPartyName() *PartyNameWithTerritory {
	if x != nil {
		return x.PartyName
	}
	return nil
}

func (x *PartyWithRole) GetRole() *ResourceContributorRole {
	if x != nil {
		return x.Role
	}
	return nil
}

type PeriodWithStartDate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeriodWithStartDate) Reset() {
	*x = PeriodWithStartDate{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeriodWithStartDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodWithStartDate) ProtoMessage() {}

func (x *PeriodWithStartDate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodWithStartDate.ProtoReflect.Descriptor instead.
func (*PeriodWithStartDate) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{46}
}

type PeriodWithoutFlags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeriodWithoutFlags) Reset() {
	*x = PeriodWithoutFlags{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeriodWithoutFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeriodWithoutFlags) ProtoMessage() {}

func (x *PeriodWithoutFlags) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeriodWithoutFlags.ProtoReflect.Descriptor instead.
func (*PeriodWithoutFlags) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{47}
}

type PhysicalReturns struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"PhysicalReturnsAllowed"
	PhysicalReturnsAllowed bool `protobuf:"varint,1,opt,name=physical_returns_allowed,json=physicalReturnsAllowed,proto3" json:"physical_returns_allowed,omitempty" xml:"PhysicalReturnsAllowed"`
	// @gotags: xml:"LatestDateForPhysicalReturns"
	LatestDateForPhysicalReturns string `protobuf:"bytes,2,opt,name=latest_date_for_physical_returns,json=latestDateForPhysicalReturns,proto3" json:"latest_date_for_physical_returns,omitempty" xml:"LatestDateForPhysicalReturns"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *PhysicalReturns) Reset() {
	*x = PhysicalReturns{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PhysicalReturns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysicalReturns) ProtoMessage() {}

func (x *PhysicalReturns) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysicalReturns.ProtoReflect.Descriptor instead.
func (*PhysicalReturns) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{48}
}

func (x *PhysicalReturns) GetPhysicalReturnsAllowed() bool {
	if x != nil {
		return x.PhysicalReturnsAllowed
	}
	return false
}

func (x *PhysicalReturns) GetLatestDateForPhysicalReturns() string {
	if x != nil {
		return x.LatestDateForPhysicalReturns
	}
	return ""
}

type PriceInformation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"PriceCode"
	PriceCode *PriceType `protobuf:"bytes,1,opt,name=price_code,json=priceCode,proto3" json:"price_code,omitempty" xml:"PriceCode"`
	// @gotags: xml:"WholesalePricePerUnit"
	WholesalePricePerUnit *Price `protobuf:"bytes,2,opt,name=wholesale_price_per_unit,json=wholesalePricePerUnit,proto3" json:"wholesale_price_per_unit,omitempty" xml:"WholesalePricePerUnit"`
	// @gotags: xml:"BulkOrderWholesalePricePerUnit"
	BulkOrderWholesalePricePerUnit *Price `protobuf:"bytes,3,opt,name=bulk_order_wholesale_price_per_unit,json=bulkOrderWholesalePricePerUnit,proto3" json:"bulk_order_wholesale_price_per_unit,omitempty" xml:"BulkOrderWholesalePricePerUnit"`
	// @gotags: xml:"SuggestedRetailPrice"
	SuggestedRetailPrice *Price `protobuf:"bytes,4,opt,name=suggested_retail_price,json=suggestedRetailPrice,proto3" json:"suggested_retail_price,omitempty" xml:"SuggestedRetailPrice"`
	// @gotags: xml:"PriceType,attr"
	PriceType avs.PriceInformationType `protobuf:"varint,5,opt,name=price_type,json=priceType,proto3,enum=ddex.avs.PriceInformationType" json:"price_type,omitempty" xml:"PriceType,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,7,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PriceInformation) Reset() {
	*x = PriceInformation{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceInformation) ProtoMessage() {}

func (x *PriceInformation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceInformation.ProtoReflect.Descriptor instead.
func (*PriceInformation) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{49}
}

func (x *PriceInformation) GetPriceCode() *PriceType {
	if x != nil {
		return x.PriceCode
	}
	return nil
}

func (x *PriceInformation) GetWholesalePricePerUnit() *Price {
	if x != nil {
		return x.WholesalePricePerUnit
	}
	return nil
}

func (x *PriceInformation) GetBulkOrderWholesalePricePerUnit() *Price {
	if x != nil {
		return x.BulkOrderWholesalePricePerUnit
	}
	return nil
}

func (x *PriceInformation) GetSuggestedRetailPrice() *Price {
	if x != nil {
		return x.SuggestedRetailPrice
	}
	return nil
}

func (x *PriceInformation) GetPriceType() avs.PriceInformationType {
	if x != nil {
		return x.PriceType
	}
	return avs.PriceInformationType(0)
}

func (x *PriceInformation) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PriceInformation) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type PurgedRelease struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseId"
	ReleaseId *ReleaseId `protobuf:"bytes,1,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty" xml:"ReleaseId"`
	// @gotags: xml:"Title"
	Title []*Title `protobuf:"bytes,2,rep,name=title,proto3" json:"title,omitempty" xml:"Title"`
	// @gotags: xml:"Contributor"
	Contributor   []*DetailedResourceContributor `protobuf:"bytes,3,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PurgedRelease) Reset() {
	*x = PurgedRelease{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PurgedRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurgedRelease) ProtoMessage() {}

func (x *PurgedRelease) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurgedRelease.ProtoReflect.Descriptor instead.
func (*PurgedRelease) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{50}
}

func (x *PurgedRelease) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *PurgedRelease) GetTitle() []*Title {
	if x != nil {
		return x.Title
	}
	return nil
}

func (x *PurgedRelease) GetContributor() []*DetailedResourceContributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

type Raga struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,2,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Raga) Reset() {
	*x = Raga{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Raga) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Raga) ProtoMessage() {}

func (x *Raga) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Raga.ProtoReflect.Descriptor instead.
func (*Raga) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{51}
}

func (x *Raga) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Raga) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *Raga) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type RecordingFormat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RecordingFormat) Reset() {
	*x = RecordingFormat{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordingFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingFormat) ProtoMessage() {}

func (x *RecordingFormat) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingFormat.ProtoReflect.Descriptor instead.
func (*RecordingFormat) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{52}
}

func (x *RecordingFormat) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RecordingFormat) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RecordingFormat) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type RelatedRelease struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseRelationshipType"
	ReleaseRelationshipType *ReleaseRelationshipType `protobuf:"bytes,1,opt,name=release_relationship_type,json=releaseRelationshipType,proto3" json:"release_relationship_type,omitempty" xml:"ReleaseRelationshipType"`
	// @gotags: xml:"ReleaseId"
	ReleaseId *ReleaseId `protobuf:"bytes,2,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty" xml:"ReleaseId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,3,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,4,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,5,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,6,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithOriginalLanguage `protobuf:"bytes,7,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"ReleaseLabelReference"
	ReleaseLabelReference []*ReleaseLabelReference `protobuf:"bytes,8,rep,name=release_label_reference,json=releaseLabelReference,proto3" json:"release_label_reference,omitempty" xml:"ReleaseLabelReference"`
	// @gotags: xml:"ReleaseDate"
	ReleaseDate *EventDateWithoutFlags `protobuf:"bytes,9,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty" xml:"ReleaseDate"`
	// @gotags: xml:"OriginalReleaseDate"
	OriginalReleaseDate *EventDateWithoutFlags `protobuf:"bytes,10,opt,name=original_release_date,json=originalReleaseDate,proto3" json:"original_release_date,omitempty" xml:"OriginalReleaseDate"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RelatedRelease) Reset() {
	*x = RelatedRelease{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelatedRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedRelease) ProtoMessage() {}

func (x *RelatedRelease) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedRelease.ProtoReflect.Descriptor instead.
func (*RelatedRelease) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{53}
}

func (x *RelatedRelease) GetReleaseRelationshipType() *ReleaseRelationshipType {
	if x != nil {
		return x.ReleaseRelationshipType
	}
	return nil
}

func (x *RelatedRelease) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *RelatedRelease) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *RelatedRelease) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *RelatedRelease) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *RelatedRelease) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *RelatedRelease) GetDisplayArtistName() []*DisplayArtistNameWithOriginalLanguage {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *RelatedRelease) GetReleaseLabelReference() []*ReleaseLabelReference {
	if x != nil {
		return x.ReleaseLabelReference
	}
	return nil
}

func (x *RelatedRelease) GetReleaseDate() *EventDateWithoutFlags {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *RelatedRelease) GetOriginalReleaseDate() *EventDateWithoutFlags {
	if x != nil {
		return x.OriginalReleaseDate
	}
	return nil
}

type RelatedResource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceRelationshipType"
	ResourceRelationshipType avs.ResourceRelationshipType `protobuf:"varint,1,opt,name=resource_relationship_type,json=resourceRelationshipType,proto3,enum=ddex.avs.ResourceRelationshipType" json:"resource_relationship_type,omitempty" xml:"ResourceRelationshipType"`
	// @gotags: xml:"Timing"
	Timing        []*Timing `protobuf:"bytes,2,rep,name=timing,proto3" json:"timing,omitempty" xml:"Timing"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelatedResource) Reset() {
	*x = RelatedResource{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelatedResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedResource) ProtoMessage() {}

func (x *RelatedResource) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedResource.ProtoReflect.Descriptor instead.
func (*RelatedResource) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{54}
}

func (x *RelatedResource) GetResourceRelationshipType() avs.ResourceRelationshipType {
	if x != nil {
		return x.ResourceRelationshipType
	}
	return avs.ResourceRelationshipType(0)
}

func (x *RelatedResource) GetTiming() []*Timing {
	if x != nil {
		return x.Timing
	}
	return nil
}

type Release struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseReference"
	ReleaseReference string `protobuf:"bytes,1,opt,name=release_reference,json=releaseReference,proto3" json:"release_reference,omitempty" xml:"ReleaseReference"`
	// @gotags: xml:"ReleaseType"
	ReleaseType []*ReleaseTypeForReleaseNotification `protobuf:"bytes,2,rep,name=release_type,json=releaseType,proto3" json:"release_type,omitempty" xml:"ReleaseType"`
	// @gotags: xml:"ReleaseId"
	ReleaseId *ReleaseId `protobuf:"bytes,3,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty" xml:"ReleaseId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,4,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,5,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,6,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,7,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"VersionType"
	VersionType []*VersionType `protobuf:"bytes,8,rep,name=version_type,json=versionType,proto3" json:"version_type,omitempty" xml:"VersionType"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithOriginalLanguage `protobuf:"bytes,9,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*DisplayArtist `protobuf:"bytes,10,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"ReleaseLabelReference"
	ReleaseLabelReference []*ReleaseLabelReferenceWithParty `protobuf:"bytes,11,rep,name=release_label_reference,json=releaseLabelReference,proto3" json:"release_label_reference,omitempty" xml:"ReleaseLabelReference"`
	// @gotags: xml:"AdministratingRecordCompany"
	AdministratingRecordCompany []*AdministratingRecordCompany `protobuf:"bytes,12,rep,name=administrating_record_company,json=administratingRecordCompany,proto3" json:"administrating_record_company,omitempty" xml:"AdministratingRecordCompany"`
	// @gotags: xml:"PLine"
	PLine []*PLine `protobuf:"bytes,13,rep,name=p_line,json=pLine,proto3" json:"p_line,omitempty" xml:"PLine"`
	// @gotags: xml:"CLine"
	CLine []*CLine `protobuf:"bytes,14,rep,name=c_line,json=cLine,proto3" json:"c_line,omitempty" xml:"CLine"`
	// @gotags: xml:"CourtesyLine"
	CourtesyLine []*CourtesyLine `protobuf:"bytes,15,rep,name=courtesy_line,json=courtesyLine,proto3" json:"courtesy_line,omitempty" xml:"CourtesyLine"`
	// @gotags: xml:"Duration"
	Duration string `protobuf:"bytes,16,opt,name=duration,proto3" json:"duration,omitempty" xml:"Duration"`
	// @gotags: xml:"DisplayGenre"
	DisplayGenre []*GenreWithTerritory `protobuf:"bytes,17,rep,name=display_genre,json=displayGenre,proto3" json:"display_genre,omitempty" xml:"DisplayGenre"`
	// @gotags: xml:"ReleaseDate"
	ReleaseDate []*EventDateWithDefault `protobuf:"bytes,18,rep,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty" xml:"ReleaseDate"`
	// @gotags: xml:"OriginalReleaseDate"
	OriginalReleaseDate []*EventDateWithDefault `protobuf:"bytes,19,rep,name=original_release_date,json=originalReleaseDate,proto3" json:"original_release_date,omitempty" xml:"OriginalReleaseDate"`
	// @gotags: xml:"ReleaseVisibilityReference"
	ReleaseVisibilityReference []string `protobuf:"bytes,20,rep,name=release_visibility_reference,json=releaseVisibilityReference,proto3" json:"release_visibility_reference,omitempty" xml:"ReleaseVisibilityReference"`
	// @gotags: xml:"ParentalWarningType"
	ParentalWarningType []*ParentalWarningTypeWithStandard `protobuf:"bytes,21,rep,name=parental_warning_type,json=parentalWarningType,proto3" json:"parental_warning_type,omitempty" xml:"ParentalWarningType"`
	// @gotags: xml:"AvRating"
	AvRating []*AvRating `protobuf:"bytes,22,rep,name=av_rating,json=avRating,proto3" json:"av_rating,omitempty" xml:"AvRating"`
	// @gotags: xml:"RelatedRelease"
	RelatedRelease []*RelatedRelease `protobuf:"bytes,23,rep,name=related_release,json=relatedRelease,proto3" json:"related_release,omitempty" xml:"RelatedRelease"`
	// @gotags: xml:"RelatedResource"
	RelatedResource []*RelatedResource `protobuf:"bytes,24,rep,name=related_resource,json=relatedResource,proto3" json:"related_resource,omitempty" xml:"RelatedResource"`
	// @gotags: xml:"ResourceGroup"
	ResourceGroup *ResourceGroup `protobuf:"bytes,25,opt,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty" xml:"ResourceGroup"`
	// @gotags: xml:"ExternalResourceLink"
	ExternalResourceLink []*ExternalResourceLink `protobuf:"bytes,26,rep,name=external_resource_link,json=externalResourceLink,proto3" json:"external_resource_link,omitempty" xml:"ExternalResourceLink"`
	// @gotags: xml:"TargetURL"
	TargetURL string `protobuf:"bytes,27,opt,name=target_u_r_l,json=targetURL,proto3" json:"target_u_r_l,omitempty" xml:"TargetURL"`
	// @gotags: xml:"Keywords"
	Keywords []*KeywordsWithTerritory `protobuf:"bytes,28,rep,name=keywords,proto3" json:"keywords,omitempty" xml:"Keywords"`
	// @gotags: xml:"Synopsis"
	Synopsis []*SynopsisWithTerritory `protobuf:"bytes,29,rep,name=synopsis,proto3" json:"synopsis,omitempty" xml:"Synopsis"`
	// @gotags: xml:"Raga"
	Raga []*Raga `protobuf:"bytes,30,rep,name=raga,proto3" json:"raga,omitempty" xml:"Raga"`
	// @gotags: xml:"Tala"
	Tala []*Tala `protobuf:"bytes,31,rep,name=tala,proto3" json:"tala,omitempty" xml:"Tala"`
	// @gotags: xml:"Deity"
	Deity []*Deity `protobuf:"bytes,32,rep,name=deity,proto3" json:"deity,omitempty" xml:"Deity"`
	// @gotags: xml:"HiResMusicDescription"
	HiResMusicDescription string `protobuf:"bytes,33,opt,name=hi_res_music_description,json=hiResMusicDescription,proto3" json:"hi_res_music_description,omitempty" xml:"HiResMusicDescription"`
	// @gotags: xml:"ContainsAI"
	ContainsAI avs.ContainsAI `protobuf:"varint,34,opt,name=contains_a_i,json=containsAI,proto3,enum=ddex.avs.ContainsAI" json:"contains_a_i,omitempty" xml:"ContainsAI"`
	// @gotags: xml:"IsSoundtrack"
	IsSoundtrack bool `protobuf:"varint,35,opt,name=is_soundtrack,json=isSoundtrack,proto3" json:"is_soundtrack,omitempty" xml:"IsSoundtrack"`
	// @gotags: xml:"IsHiResMusic"
	IsHiResMusic bool `protobuf:"varint,36,opt,name=is_hi_res_music,json=isHiResMusic,proto3" json:"is_hi_res_music,omitempty" xml:"IsHiResMusic"`
	// @gotags: xml:"MarketingComment"
	MarketingComment []*MarketingComment `protobuf:"bytes,37,rep,name=marketing_comment,json=marketingComment,proto3" json:"marketing_comment,omitempty" xml:"MarketingComment"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,38,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Release) Reset() {
	*x = Release{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{55}
}

func (x *Release) GetReleaseReference() string {
	if x != nil {
		return x.ReleaseReference
	}
	return ""
}

func (x *Release) GetReleaseType() []*ReleaseTypeForReleaseNotification {
	if x != nil {
		return x.ReleaseType
	}
	return nil
}

func (x *Release) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *Release) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *Release) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *Release) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *Release) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *Release) GetVersionType() []*VersionType {
	if x != nil {
		return x.VersionType
	}
	return nil
}

func (x *Release) GetDisplayArtistName() []*DisplayArtistNameWithOriginalLanguage {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Release) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *Release) GetReleaseLabelReference() []*ReleaseLabelReferenceWithParty {
	if x != nil {
		return x.ReleaseLabelReference
	}
	return nil
}

func (x *Release) GetAdministratingRecordCompany() []*AdministratingRecordCompany {
	if x != nil {
		return x.AdministratingRecordCompany
	}
	return nil
}

func (x *Release) GetPLine() []*PLine {
	if x != nil {
		return x.PLine
	}
	return nil
}

func (x *Release) GetCLine() []*CLine {
	if x != nil {
		return x.CLine
	}
	return nil
}

func (x *Release) GetCourtesyLine() []*CourtesyLine {
	if x != nil {
		return x.CourtesyLine
	}
	return nil
}

func (x *Release) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Release) GetDisplayGenre() []*GenreWithTerritory {
	if x != nil {
		return x.DisplayGenre
	}
	return nil
}

func (x *Release) GetReleaseDate() []*EventDateWithDefault {
	if x != nil {
		return x.ReleaseDate
	}
	return nil
}

func (x *Release) GetOriginalReleaseDate() []*EventDateWithDefault {
	if x != nil {
		return x.OriginalReleaseDate
	}
	return nil
}

func (x *Release) GetReleaseVisibilityReference() []string {
	if x != nil {
		return x.ReleaseVisibilityReference
	}
	return nil
}

func (x *Release) GetParentalWarningType() []*ParentalWarningTypeWithStandard {
	if x != nil {
		return x.ParentalWarningType
	}
	return nil
}

func (x *Release) GetAvRating() []*AvRating {
	if x != nil {
		return x.AvRating
	}
	return nil
}

func (x *Release) GetRelatedRelease() []*RelatedRelease {
	if x != nil {
		return x.RelatedRelease
	}
	return nil
}

func (x *Release) GetRelatedResource() []*RelatedResource {
	if x != nil {
		return x.RelatedResource
	}
	return nil
}

func (x *Release) GetResourceGroup() *ResourceGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return nil
}

func (x *Release) GetExternalResourceLink() []*ExternalResourceLink {
	if x != nil {
		return x.ExternalResourceLink
	}
	return nil
}

func (x *Release) GetTargetURL() string {
	if x != nil {
		return x.TargetURL
	}
	return ""
}

func (x *Release) GetKeywords() []*KeywordsWithTerritory {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *Release) GetSynopsis() []*SynopsisWithTerritory {
	if x != nil {
		return x.Synopsis
	}
	return nil
}

func (x *Release) GetRaga() []*Raga {
	if x != nil {
		return x.Raga
	}
	return nil
}

func (x *Release) GetTala() []*Tala {
	if x != nil {
		return x.Tala
	}
	return nil
}

func (x *Release) GetDeity() []*Deity {
	if x != nil {
		return x.Deity
	}
	return nil
}

func (x *Release) GetHiResMusicDescription() string {
	if x != nil {
		return x.HiResMusicDescription
	}
	return ""
}

func (x *Release) GetContainsAI() avs.ContainsAI {
	if x != nil {
		return x.ContainsAI
	}
	return avs.ContainsAI(0)
}

func (x *Release) GetIsSoundtrack() bool {
	if x != nil {
		return x.IsSoundtrack
	}
	return false
}

func (x *Release) GetIsHiResMusic() bool {
	if x != nil {
		return x.IsHiResMusic
	}
	return false
}

func (x *Release) GetMarketingComment() []*MarketingComment {
	if x != nil {
		return x.MarketingComment
	}
	return nil
}

func (x *Release) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type ReleaseAdmin struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseAdminId"
	ReleaseAdminId string `protobuf:"bytes,1,opt,name=release_admin_id,json=releaseAdminId,proto3" json:"release_admin_id,omitempty" xml:"ReleaseAdminId"`
	// @gotags: xml:"PersonnelDescription"
	PersonnelDescription string `protobuf:"bytes,2,opt,name=personnel_description,json=personnelDescription,proto3" json:"personnel_description,omitempty" xml:"PersonnelDescription"`
	// @gotags: xml:"SystemDescription"
	SystemDescription []string `protobuf:"bytes,3,rep,name=system_description,json=systemDescription,proto3" json:"system_description,omitempty" xml:"SystemDescription"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReleaseAdmin) Reset() {
	*x = ReleaseAdmin{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseAdmin) ProtoMessage() {}

func (x *ReleaseAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseAdmin.ProtoReflect.Descriptor instead.
func (*ReleaseAdmin) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{56}
}

func (x *ReleaseAdmin) GetReleaseAdminId() string {
	if x != nil {
		return x.ReleaseAdminId
	}
	return ""
}

func (x *ReleaseAdmin) GetPersonnelDescription() string {
	if x != nil {
		return x.PersonnelDescription
	}
	return ""
}

func (x *ReleaseAdmin) GetSystemDescription() []string {
	if x != nil {
		return x.SystemDescription
	}
	return nil
}

type ReleaseDeal struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"DealReleaseReference"
	DealReleaseReference []string `protobuf:"bytes,1,rep,name=deal_release_reference,json=dealReleaseReference,proto3" json:"deal_release_reference,omitempty" xml:"DealReleaseReference"`
	// @gotags: xml:"Deal"
	Deal          []*Deal `protobuf:"bytes,2,rep,name=deal,proto3" json:"deal,omitempty" xml:"Deal"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseDeal) Reset() {
	*x = ReleaseDeal{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseDeal) ProtoMessage() {}

func (x *ReleaseDeal) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseDeal.ProtoReflect.Descriptor instead.
func (*ReleaseDeal) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{57}
}

func (x *ReleaseDeal) GetDealReleaseReference() []string {
	if x != nil {
		return x.DealReleaseReference
	}
	return nil
}

func (x *ReleaseDeal) GetDeal() []*Deal {
	if x != nil {
		return x.Deal
	}
	return nil
}

type ReleaseId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"GRid"
	GRid string `protobuf:"bytes,1,opt,name=g_rid,json=gRid,proto3" json:"g_rid,omitempty" xml:"GRid"`
	// @gotags: xml:"ICPN"
	ICPN string `protobuf:"bytes,2,opt,name=i_c_p_n,json=iCPN,proto3" json:"i_c_p_n,omitempty" xml:"ICPN"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber *CatalogNumber `protobuf:"bytes,3,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,4,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseId) Reset() {
	*x = ReleaseId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseId) ProtoMessage() {}

func (x *ReleaseId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseId.ProtoReflect.Descriptor instead.
func (*ReleaseId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{58}
}

func (x *ReleaseId) GetGRid() string {
	if x != nil {
		return x.GRid
	}
	return ""
}

func (x *ReleaseId) GetICPN() string {
	if x != nil {
		return x.ICPN
	}
	return ""
}

func (x *ReleaseId) GetCatalogNumber() *CatalogNumber {
	if x != nil {
		return x.CatalogNumber
	}
	return nil
}

func (x *ReleaseId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type ReleaseLabelReference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"LabelType,attr"
	LabelType avs.LabelType `protobuf:"varint,4,opt,name=label_type,json=labelType,proto3,enum=ddex.avs.LabelType" json:"label_type,omitempty" xml:"LabelType,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,6,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,7,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ReleaseLabelReference) Reset() {
	*x = ReleaseLabelReference{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseLabelReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseLabelReference) ProtoMessage() {}

func (x *ReleaseLabelReference) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseLabelReference.ProtoReflect.Descriptor instead.
func (*ReleaseLabelReference) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{59}
}

func (x *ReleaseLabelReference) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReleaseLabelReference) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *ReleaseLabelReference) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *ReleaseLabelReference) GetLabelType() avs.LabelType {
	if x != nil {
		return x.LabelType
	}
	return avs.LabelType(0)
}

func (x *ReleaseLabelReference) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ReleaseLabelReference) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

func (x *ReleaseLabelReference) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

type ReleaseLabelReferenceWithParty struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"LabelType,attr"
	LabelType avs.LabelType `protobuf:"varint,4,opt,name=label_type,json=labelType,proto3,enum=ddex.avs.LabelType" json:"label_type,omitempty" xml:"LabelType,attr"`
	// @gotags: xml:"AccessControlParty,attr"
	AccessControlParty string `protobuf:"bytes,5,opt,name=access_control_party,json=accessControlParty,proto3" json:"access_control_party,omitempty" xml:"AccessControlParty,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,7,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,8,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ReleaseLabelReferenceWithParty) Reset() {
	*x = ReleaseLabelReferenceWithParty{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseLabelReferenceWithParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseLabelReferenceWithParty) ProtoMessage() {}

func (x *ReleaseLabelReferenceWithParty) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseLabelReferenceWithParty.ProtoReflect.Descriptor instead.
func (*ReleaseLabelReferenceWithParty) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{60}
}

func (x *ReleaseLabelReferenceWithParty) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReleaseLabelReferenceWithParty) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *ReleaseLabelReferenceWithParty) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *ReleaseLabelReferenceWithParty) GetLabelType() avs.LabelType {
	if x != nil {
		return x.LabelType
	}
	return avs.LabelType(0)
}

func (x *ReleaseLabelReferenceWithParty) GetAccessControlParty() string {
	if x != nil {
		return x.AccessControlParty
	}
	return ""
}

func (x *ReleaseLabelReferenceWithParty) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ReleaseLabelReferenceWithParty) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

func (x *ReleaseLabelReferenceWithParty) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

type ReleaseList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Release"
	Release *Release `protobuf:"bytes,1,opt,name=release,proto3" json:"release,omitempty" xml:"Release"`
	// @gotags: xml:"TrackRelease"
	TrackRelease []*TrackRelease `protobuf:"bytes,2,rep,name=track_release,json=trackRelease,proto3" json:"track_release,omitempty" xml:"TrackRelease"`
	// @gotags: xml:"ClipRelease"
	ClipRelease   []*ClipRelease `protobuf:"bytes,3,rep,name=clip_release,json=clipRelease,proto3" json:"clip_release,omitempty" xml:"ClipRelease"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseList) Reset() {
	*x = ReleaseList{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseList) ProtoMessage() {}

func (x *ReleaseList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseList.ProtoReflect.Descriptor instead.
func (*ReleaseList) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{61}
}

func (x *ReleaseList) GetRelease() *Release {
	if x != nil {
		return x.Release
	}
	return nil
}

func (x *ReleaseList) GetTrackRelease() []*TrackRelease {
	if x != nil {
		return x.TrackRelease
	}
	return nil
}

func (x *ReleaseList) GetClipRelease() []*ClipRelease {
	if x != nil {
		return x.ClipRelease
	}
	return nil
}

type ReleaseVisibility struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"VisibilityReference"
	VisibilityReference string `protobuf:"bytes,1,opt,name=visibility_reference,json=visibilityReference,proto3" json:"visibility_reference,omitempty" xml:"VisibilityReference"`
	// @gotags: xml:"ReleaseDisplayStartDateTime"
	ReleaseDisplayStartDateTime string `protobuf:"bytes,2,opt,name=release_display_start_date_time,json=releaseDisplayStartDateTime,proto3" json:"release_display_start_date_time,omitempty" xml:"ReleaseDisplayStartDateTime"`
	// @gotags: xml:"CoverArtPreviewStartDateTime"
	CoverArtPreviewStartDateTime string `protobuf:"bytes,3,opt,name=cover_art_preview_start_date_time,json=coverArtPreviewStartDateTime,proto3" json:"cover_art_preview_start_date_time,omitempty" xml:"CoverArtPreviewStartDateTime"`
	// @gotags: xml:"FullTrackListingPreviewStartDateTime"
	FullTrackListingPreviewStartDateTime string `protobuf:"bytes,4,opt,name=full_track_listing_preview_start_date_time,json=fullTrackListingPreviewStartDateTime,proto3" json:"full_track_listing_preview_start_date_time,omitempty" xml:"FullTrackListingPreviewStartDateTime"`
	// @gotags: xml:"ClipPreviewStartDateTime"
	ClipPreviewStartDateTime string `protobuf:"bytes,5,opt,name=clip_preview_start_date_time,json=clipPreviewStartDateTime,proto3" json:"clip_preview_start_date_time,omitempty" xml:"ClipPreviewStartDateTime"`
	// @gotags: xml:"DoNotDisplayDates,attr"
	DoNotDisplayDates bool `protobuf:"varint,6,opt,name=do_not_display_dates,json=doNotDisplayDates,proto3" json:"do_not_display_dates,omitempty" xml:"DoNotDisplayDates,attr"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ReleaseVisibility) Reset() {
	*x = ReleaseVisibility{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseVisibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseVisibility) ProtoMessage() {}

func (x *ReleaseVisibility) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseVisibility.ProtoReflect.Descriptor instead.
func (*ReleaseVisibility) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{62}
}

func (x *ReleaseVisibility) GetVisibilityReference() string {
	if x != nil {
		return x.VisibilityReference
	}
	return ""
}

func (x *ReleaseVisibility) GetReleaseDisplayStartDateTime() string {
	if x != nil {
		return x.ReleaseDisplayStartDateTime
	}
	return ""
}

func (x *ReleaseVisibility) GetCoverArtPreviewStartDateTime() string {
	if x != nil {
		return x.CoverArtPreviewStartDateTime
	}
	return ""
}

func (x *ReleaseVisibility) GetFullTrackListingPreviewStartDateTime() string {
	if x != nil {
		return x.FullTrackListingPreviewStartDateTime
	}
	return ""
}

func (x *ReleaseVisibility) GetClipPreviewStartDateTime() string {
	if x != nil {
		return x.ClipPreviewStartDateTime
	}
	return ""
}

func (x *ReleaseVisibility) GetDoNotDisplayDates() bool {
	if x != nil {
		return x.DoNotDisplayDates
	}
	return false
}

type ResourceGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,1,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,2,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,3,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,4,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"SequenceNumber"
	SequenceNumber int32 `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*DisplayArtist `protobuf:"bytes,6,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"CarrierType"
	CarrierType []*CarrierType `protobuf:"bytes,7,rep,name=carrier_type,json=carrierType,proto3" json:"carrier_type,omitempty" xml:"CarrierType"`
	// @gotags: xml:"Duration"
	Duration string `protobuf:"bytes,8,opt,name=duration,proto3" json:"duration,omitempty" xml:"Duration"`
	// @gotags: xml:"ResourceGroup"
	ResourceGroup []*ResourceSubGroup `protobuf:"bytes,9,rep,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty" xml:"ResourceGroup"`
	// @gotags: xml:"ResourceGroupContentItem"
	ResourceGroupContentItem []*ResourceGroupContentItem `protobuf:"bytes,10,rep,name=resource_group_content_item,json=resourceGroupContentItem,proto3" json:"resource_group_content_item,omitempty" xml:"ResourceGroupContentItem"`
	// @gotags: xml:"LinkedReleaseResourceReference"
	LinkedReleaseResourceReference []*LinkedReleaseResourceReference `protobuf:"bytes,11,rep,name=linked_release_resource_reference,json=linkedReleaseResourceReference,proto3" json:"linked_release_resource_reference,omitempty" xml:"LinkedReleaseResourceReference"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *ResourceGroup) Reset() {
	*x = ResourceGroup{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceGroup) ProtoMessage() {}

func (x *ResourceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceGroup.ProtoReflect.Descriptor instead.
func (*ResourceGroup) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{63}
}

func (x *ResourceGroup) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *ResourceGroup) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *ResourceGroup) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *ResourceGroup) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *ResourceGroup) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ResourceGroup) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *ResourceGroup) GetCarrierType() []*CarrierType {
	if x != nil {
		return x.CarrierType
	}
	return nil
}

func (x *ResourceGroup) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *ResourceGroup) GetResourceGroup() []*ResourceSubGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return nil
}

func (x *ResourceGroup) GetResourceGroupContentItem() []*ResourceGroupContentItem {
	if x != nil {
		return x.ResourceGroupContentItem
	}
	return nil
}

func (x *ResourceGroup) GetLinkedReleaseResourceReference() []*LinkedReleaseResourceReference {
	if x != nil {
		return x.LinkedReleaseResourceReference
	}
	return nil
}

type ResourceGroupContentItem struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"SequenceNumber"
	SequenceNumber int32 `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber"`
	// @gotags: xml:"ReleaseResourceReference"
	ReleaseResourceReference string `protobuf:"bytes,2,opt,name=release_resource_reference,json=releaseResourceReference,proto3" json:"release_resource_reference,omitempty" xml:"ReleaseResourceReference"`
	// @gotags: xml:"LinkedReleaseResourceReference"
	LinkedReleaseResourceReference []*LinkedReleaseResourceReference `protobuf:"bytes,3,rep,name=linked_release_resource_reference,json=linkedReleaseResourceReference,proto3" json:"linked_release_resource_reference,omitempty" xml:"LinkedReleaseResourceReference"`
	// @gotags: xml:"IsBonusResource"
	IsBonusResource bool `protobuf:"varint,4,opt,name=is_bonus_resource,json=isBonusResource,proto3" json:"is_bonus_resource,omitempty" xml:"IsBonusResource"`
	// @gotags: xml:"IsInstantGratificationResource"
	IsInstantGratificationResource bool `protobuf:"varint,5,opt,name=is_instant_gratification_resource,json=isInstantGratificationResource,proto3" json:"is_instant_gratification_resource,omitempty" xml:"IsInstantGratificationResource"`
	// @gotags: xml:"IsPreOrderIncentiveResource"
	IsPreOrderIncentiveResource bool `protobuf:"varint,6,opt,name=is_pre_order_incentive_resource,json=isPreOrderIncentiveResource,proto3" json:"is_pre_order_incentive_resource,omitempty" xml:"IsPreOrderIncentiveResource"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ResourceGroupContentItem) Reset() {
	*x = ResourceGroupContentItem{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceGroupContentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceGroupContentItem) ProtoMessage() {}

func (x *ResourceGroupContentItem) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceGroupContentItem.ProtoReflect.Descriptor instead.
func (*ResourceGroupContentItem) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{64}
}

func (x *ResourceGroupContentItem) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ResourceGroupContentItem) GetReleaseResourceReference() string {
	if x != nil {
		return x.ReleaseResourceReference
	}
	return ""
}

func (x *ResourceGroupContentItem) GetLinkedReleaseResourceReference() []*LinkedReleaseResourceReference {
	if x != nil {
		return x.LinkedReleaseResourceReference
	}
	return nil
}

func (x *ResourceGroupContentItem) GetIsBonusResource() bool {
	if x != nil {
		return x.IsBonusResource
	}
	return false
}

func (x *ResourceGroupContentItem) GetIsInstantGratificationResource() bool {
	if x != nil {
		return x.IsInstantGratificationResource
	}
	return false
}

func (x *ResourceGroupContentItem) GetIsPreOrderIncentiveResource() bool {
	if x != nil {
		return x.IsPreOrderIncentiveResource
	}
	return false
}

type ResourceList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"SoundRecording"
	SoundRecording []*SoundRecording `protobuf:"bytes,1,rep,name=sound_recording,json=soundRecording,proto3" json:"sound_recording,omitempty" xml:"SoundRecording"`
	// @gotags: xml:"Video"
	Video []*Video `protobuf:"bytes,2,rep,name=video,proto3" json:"video,omitempty" xml:"Video"`
	// @gotags: xml:"Image"
	Image []*Image `protobuf:"bytes,3,rep,name=image,proto3" json:"image,omitempty" xml:"Image"`
	// @gotags: xml:"Text"
	Text []*Text `protobuf:"bytes,4,rep,name=text,proto3" json:"text,omitempty" xml:"Text"`
	// @gotags: xml:"SheetMusic"
	SheetMusic []*SheetMusic `protobuf:"bytes,5,rep,name=sheet_music,json=sheetMusic,proto3" json:"sheet_music,omitempty" xml:"SheetMusic"`
	// @gotags: xml:"Software"
	Software      []*Software `protobuf:"bytes,6,rep,name=software,proto3" json:"software,omitempty" xml:"Software"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceList) Reset() {
	*x = ResourceList{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceList) ProtoMessage() {}

func (x *ResourceList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceList.ProtoReflect.Descriptor instead.
func (*ResourceList) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{65}
}

func (x *ResourceList) GetSoundRecording() []*SoundRecording {
	if x != nil {
		return x.SoundRecording
	}
	return nil
}

func (x *ResourceList) GetVideo() []*Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *ResourceList) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ResourceList) GetText() []*Text {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *ResourceList) GetSheetMusic() []*SheetMusic {
	if x != nil {
		return x.SheetMusic
	}
	return nil
}

func (x *ResourceList) GetSoftware() []*Software {
	if x != nil {
		return x.Software
	}
	return nil
}

type ResourceRightsController struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"RightsControllerPartyReference"
	RightsControllerPartyReference string `protobuf:"bytes,1,opt,name=rights_controller_party_reference,json=rightsControllerPartyReference,proto3" json:"rights_controller_party_reference,omitempty" xml:"RightsControllerPartyReference"`
	// @gotags: xml:"RightsControlType"
	RightsControlType []avs.RightsControllerRole `protobuf:"varint,2,rep,packed,name=rights_control_type,json=rightsControlType,proto3,enum=ddex.avs.RightsControllerRole" json:"rights_control_type,omitempty" xml:"RightsControlType"`
	// @gotags: xml:"DelegatedUsageRights"
	DelegatedUsageRights []*DelegatedUsageRights `protobuf:"bytes,3,rep,name=delegated_usage_rights,json=delegatedUsageRights,proto3" json:"delegated_usage_rights,omitempty" xml:"DelegatedUsageRights"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResourceRightsController) Reset() {
	*x = ResourceRightsController{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceRightsController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRightsController) ProtoMessage() {}

func (x *ResourceRightsController) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRightsController.ProtoReflect.Descriptor instead.
func (*ResourceRightsController) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{66}
}

func (x *ResourceRightsController) GetRightsControllerPartyReference() string {
	if x != nil {
		return x.RightsControllerPartyReference
	}
	return ""
}

func (x *ResourceRightsController) GetRightsControlType() []avs.RightsControllerRole {
	if x != nil {
		return x.RightsControlType
	}
	return nil
}

func (x *ResourceRightsController) GetDelegatedUsageRights() []*DelegatedUsageRights {
	if x != nil {
		return x.DelegatedUsageRights
	}
	return nil
}

func (x *ResourceRightsController) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type ResourceSubGroup struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,1,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,2,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,3,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,4,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"SequenceNumber"
	SequenceNumber int32 `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*DisplayArtist `protobuf:"bytes,6,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"CarrierType"
	CarrierType []*CarrierType `protobuf:"bytes,7,rep,name=carrier_type,json=carrierType,proto3" json:"carrier_type,omitempty" xml:"CarrierType"`
	// @gotags: xml:"Duration"
	Duration string `protobuf:"bytes,8,opt,name=duration,proto3" json:"duration,omitempty" xml:"Duration"`
	// @gotags: xml:"ResourceGroup"
	ResourceGroup []*ResourceSubGroup `protobuf:"bytes,9,rep,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty" xml:"ResourceGroup"`
	// @gotags: xml:"ResourceGroupContentItem"
	ResourceGroupContentItem []*ResourceGroupContentItem `protobuf:"bytes,10,rep,name=resource_group_content_item,json=resourceGroupContentItem,proto3" json:"resource_group_content_item,omitempty" xml:"ResourceGroupContentItem"`
	// @gotags: xml:"LinkedReleaseResourceReference"
	LinkedReleaseResourceReference []*LinkedReleaseResourceReference `protobuf:"bytes,11,rep,name=linked_release_resource_reference,json=linkedReleaseResourceReference,proto3" json:"linked_release_resource_reference,omitempty" xml:"LinkedReleaseResourceReference"`
	// @gotags: xml:"ResourceGroupType,attr"
	ResourceGroupType avs.ResourceGroupType `protobuf:"varint,12,opt,name=resource_group_type,json=resourceGroupType,proto3,enum=ddex.avs.ResourceGroupType" json:"resource_group_type,omitempty" xml:"ResourceGroupType,attr"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ResourceSubGroup) Reset() {
	*x = ResourceSubGroup{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceSubGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSubGroup) ProtoMessage() {}

func (x *ResourceSubGroup) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSubGroup.ProtoReflect.Descriptor instead.
func (*ResourceSubGroup) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{67}
}

func (x *ResourceSubGroup) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *ResourceSubGroup) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *ResourceSubGroup) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *ResourceSubGroup) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *ResourceSubGroup) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *ResourceSubGroup) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *ResourceSubGroup) GetCarrierType() []*CarrierType {
	if x != nil {
		return x.CarrierType
	}
	return nil
}

func (x *ResourceSubGroup) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *ResourceSubGroup) GetResourceGroup() []*ResourceSubGroup {
	if x != nil {
		return x.ResourceGroup
	}
	return nil
}

func (x *ResourceSubGroup) GetResourceGroupContentItem() []*ResourceGroupContentItem {
	if x != nil {
		return x.ResourceGroupContentItem
	}
	return nil
}

func (x *ResourceSubGroup) GetLinkedReleaseResourceReference() []*LinkedReleaseResourceReference {
	if x != nil {
		return x.LinkedReleaseResourceReference
	}
	return nil
}

func (x *ResourceSubGroup) GetResourceGroupType() avs.ResourceGroupType {
	if x != nil {
		return x.ResourceGroupType
	}
	return avs.ResourceGroupType(0)
}

type RightsClaimPolicy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Condition"
	Condition []*ConditionForRightsClaimPolicy `protobuf:"bytes,1,rep,name=condition,proto3" json:"condition,omitempty" xml:"Condition"`
	// @gotags: xml:"RightsClaimPolicyType"
	RightsClaimPolicyType avs.RightsClaimPolicyType `protobuf:"varint,2,opt,name=rights_claim_policy_type,json=rightsClaimPolicyType,proto3,enum=ddex.avs.RightsClaimPolicyType" json:"rights_claim_policy_type,omitempty" xml:"RightsClaimPolicyType"`
	// @gotags: xml:"RightsClaimPolicyReason"
	RightsClaimPolicyReason *RightsClaimPolicyReason `protobuf:"bytes,3,opt,name=rights_claim_policy_reason,json=rightsClaimPolicyReason,proto3" json:"rights_claim_policy_reason,omitempty" xml:"RightsClaimPolicyReason"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *RightsClaimPolicy) Reset() {
	*x = RightsClaimPolicy{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RightsClaimPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RightsClaimPolicy) ProtoMessage() {}

func (x *RightsClaimPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RightsClaimPolicy.ProtoReflect.Descriptor instead.
func (*RightsClaimPolicy) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{68}
}

func (x *RightsClaimPolicy) GetCondition() []*ConditionForRightsClaimPolicy {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *RightsClaimPolicy) GetRightsClaimPolicyType() avs.RightsClaimPolicyType {
	if x != nil {
		return x.RightsClaimPolicyType
	}
	return avs.RightsClaimPolicyType(0)
}

func (x *RightsClaimPolicy) GetRightsClaimPolicyReason() *RightsClaimPolicyReason {
	if x != nil {
		return x.RightsClaimPolicyReason
	}
	return nil
}

type Segment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"StartTime"
	StartTime     string `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty" xml:"StartTime"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{69}
}

func (x *Segment) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

type ServiceException struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TradingName"
	TradingName *Name `protobuf:"bytes,1,opt,name=trading_name,json=tradingName,proto3" json:"trading_name,omitempty" xml:"TradingName"`
	// @gotags: xml:"URL"
	URL []string `protobuf:"bytes,2,rep,name=u_r_l,json=uRL,proto3" json:"u_r_l,omitempty" xml:"URL"`
	// @gotags: xml:"Channel"
	Channel       []*Channel `protobuf:"bytes,3,rep,name=channel,proto3" json:"channel,omitempty" xml:"Channel"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceException) Reset() {
	*x = ServiceException{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceException) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceException) ProtoMessage() {}

func (x *ServiceException) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceException.ProtoReflect.Descriptor instead.
func (*ServiceException) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{70}
}

func (x *ServiceException) GetTradingName() *Name {
	if x != nil {
		return x.TradingName
	}
	return nil
}

func (x *ServiceException) GetURL() []string {
	if x != nil {
		return x.URL
	}
	return nil
}

func (x *ServiceException) GetChannel() []*Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

type SheetMusic struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceReference"
	ResourceReference string `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3" json:"resource_reference,omitempty" xml:"ResourceReference"`
	// @gotags: xml:"Type"
	Type *SheetMusicType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"ResourceId"
	ResourceId []*SheetMusicId `protobuf:"bytes,3,rep,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"WorkId"
	WorkId []*MusicalWorkId `protobuf:"bytes,4,rep,name=work_id,json=workId,proto3" json:"work_id,omitempty" xml:"WorkId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,5,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,6,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,7,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,8,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"VersionType"
	VersionType []*VersionType `protobuf:"bytes,9,rep,name=version_type,json=versionType,proto3" json:"version_type,omitempty" xml:"VersionType"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithOriginalLanguage `protobuf:"bytes,10,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*DisplayArtist `protobuf:"bytes,11,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"Contributor"
	Contributor []*Contributor `protobuf:"bytes,12,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	// @gotags: xml:"ResourceRightsController"
	ResourceRightsController []*ResourceRightsController `protobuf:"bytes,13,rep,name=resource_rights_controller,json=resourceRightsController,proto3" json:"resource_rights_controller,omitempty" xml:"ResourceRightsController"`
	// @gotags: xml:"WorkRightsController"
	WorkRightsController []*WorkRightsController `protobuf:"bytes,14,rep,name=work_rights_controller,json=workRightsController,proto3" json:"work_rights_controller,omitempty" xml:"WorkRightsController"`
	// @gotags: xml:"CLine"
	CLine []*CLine `protobuf:"bytes,15,rep,name=c_line,json=cLine,proto3" json:"c_line,omitempty" xml:"CLine"`
	// @gotags: xml:"CourtesyLine"
	CourtesyLine []*CourtesyLine `protobuf:"bytes,16,rep,name=courtesy_line,json=courtesyLine,proto3" json:"courtesy_line,omitempty" xml:"CourtesyLine"`
	// @gotags: xml:"CreationDate"
	CreationDate *EventDateWithoutFlags `protobuf:"bytes,17,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty" xml:"CreationDate"`
	// @gotags: xml:"FirstPublicationDate"
	FirstPublicationDate []*FulfillmentDate `protobuf:"bytes,18,rep,name=first_publication_date,json=firstPublicationDate,proto3" json:"first_publication_date,omitempty" xml:"FirstPublicationDate"`
	// @gotags: xml:"ParentalWarningType"
	ParentalWarningType []*ParentalWarningTypeWithStandard `protobuf:"bytes,19,rep,name=parental_warning_type,json=parentalWarningType,proto3" json:"parental_warning_type,omitempty" xml:"ParentalWarningType"`
	// @gotags: xml:"RelatedRelease"
	RelatedRelease []*RelatedRelease `protobuf:"bytes,20,rep,name=related_release,json=relatedRelease,proto3" json:"related_release,omitempty" xml:"RelatedRelease"`
	// @gotags: xml:"RelatedResource"
	RelatedResource []*RelatedResource `protobuf:"bytes,21,rep,name=related_resource,json=relatedResource,proto3" json:"related_resource,omitempty" xml:"RelatedResource"`
	// @gotags: xml:"ContainsHiddenContent"
	ContainsHiddenContent bool `protobuf:"varint,22,opt,name=contains_hidden_content,json=containsHiddenContent,proto3" json:"contains_hidden_content,omitempty" xml:"ContainsHiddenContent"`
	// @gotags: xml:"LanguageOfLyrics"
	LanguageOfLyrics string `protobuf:"bytes,23,opt,name=language_of_lyrics,json=languageOfLyrics,proto3" json:"language_of_lyrics,omitempty" xml:"LanguageOfLyrics"`
	// @gotags: xml:"ResourceContainedResourceReferenceList"
	ResourceContainedResourceReferenceList *ResourceContainedResourceReferenceList `protobuf:"bytes,24,opt,name=resource_contained_resource_reference_list,json=resourceContainedResourceReferenceList,proto3" json:"resource_contained_resource_reference_list,omitempty" xml:"ResourceContainedResourceReferenceList"`
	// @gotags: xml:"TechnicalDetails"
	TechnicalDetails []*TechnicalSheetMusicDetails `protobuf:"bytes,25,rep,name=technical_details,json=technicalDetails,proto3" json:"technical_details,omitempty" xml:"TechnicalDetails"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,26,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"IsSupplemental,attr"
	IsSupplemental bool `protobuf:"varint,27,opt,name=is_supplemental,json=isSupplemental,proto3" json:"is_supplemental,omitempty" xml:"IsSupplemental,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SheetMusic) Reset() {
	*x = SheetMusic{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SheetMusic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SheetMusic) ProtoMessage() {}

func (x *SheetMusic) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SheetMusic.ProtoReflect.Descriptor instead.
func (*SheetMusic) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{71}
}

func (x *SheetMusic) GetResourceReference() string {
	if x != nil {
		return x.ResourceReference
	}
	return ""
}

func (x *SheetMusic) GetType() *SheetMusicType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *SheetMusic) GetResourceId() []*SheetMusicId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *SheetMusic) GetWorkId() []*MusicalWorkId {
	if x != nil {
		return x.WorkId
	}
	return nil
}

func (x *SheetMusic) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *SheetMusic) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *SheetMusic) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *SheetMusic) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *SheetMusic) GetVersionType() []*VersionType {
	if x != nil {
		return x.VersionType
	}
	return nil
}

func (x *SheetMusic) GetDisplayArtistName() []*DisplayArtistNameWithOriginalLanguage {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *SheetMusic) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *SheetMusic) GetContributor() []*Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

func (x *SheetMusic) GetResourceRightsController() []*ResourceRightsController {
	if x != nil {
		return x.ResourceRightsController
	}
	return nil
}

func (x *SheetMusic) GetWorkRightsController() []*WorkRightsController {
	if x != nil {
		return x.WorkRightsController
	}
	return nil
}

func (x *SheetMusic) GetCLine() []*CLine {
	if x != nil {
		return x.CLine
	}
	return nil
}

func (x *SheetMusic) GetCourtesyLine() []*CourtesyLine {
	if x != nil {
		return x.CourtesyLine
	}
	return nil
}

func (x *SheetMusic) GetCreationDate() *EventDateWithoutFlags {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *SheetMusic) GetFirstPublicationDate() []*FulfillmentDate {
	if x != nil {
		return x.FirstPublicationDate
	}
	return nil
}

func (x *SheetMusic) GetParentalWarningType() []*ParentalWarningTypeWithStandard {
	if x != nil {
		return x.ParentalWarningType
	}
	return nil
}

func (x *SheetMusic) GetRelatedRelease() []*RelatedRelease {
	if x != nil {
		return x.RelatedRelease
	}
	return nil
}

func (x *SheetMusic) GetRelatedResource() []*RelatedResource {
	if x != nil {
		return x.RelatedResource
	}
	return nil
}

func (x *SheetMusic) GetContainsHiddenContent() bool {
	if x != nil {
		return x.ContainsHiddenContent
	}
	return false
}

func (x *SheetMusic) GetLanguageOfLyrics() string {
	if x != nil {
		return x.LanguageOfLyrics
	}
	return ""
}

func (x *SheetMusic) GetResourceContainedResourceReferenceList() *ResourceContainedResourceReferenceList {
	if x != nil {
		return x.ResourceContainedResourceReferenceList
	}
	return nil
}

func (x *SheetMusic) GetTechnicalDetails() []*TechnicalSheetMusicDetails {
	if x != nil {
		return x.TechnicalDetails
	}
	return nil
}

func (x *SheetMusic) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *SheetMusic) GetIsSupplemental() bool {
	if x != nil {
		return x.IsSupplemental
	}
	return false
}

type Software struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceReference"
	ResourceReference string `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3" json:"resource_reference,omitempty" xml:"ResourceReference"`
	// @gotags: xml:"Type"
	Type *SoftwareType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"ResourceId"
	ResourceId []*ResourceProprietaryId `protobuf:"bytes,3,rep,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"WorkId"
	WorkId []*MusicalWorkId `protobuf:"bytes,4,rep,name=work_id,json=workId,proto3" json:"work_id,omitempty" xml:"WorkId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,5,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,6,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,7,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,8,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"VersionType"
	VersionType []*VersionType `protobuf:"bytes,9,rep,name=version_type,json=versionType,proto3" json:"version_type,omitempty" xml:"VersionType"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithOriginalLanguage `protobuf:"bytes,10,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*DisplayArtist `protobuf:"bytes,11,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"Contributor"
	Contributor []*Contributor `protobuf:"bytes,12,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	// @gotags: xml:"ResourceRightsController"
	ResourceRightsController []*ResourceRightsController `protobuf:"bytes,13,rep,name=resource_rights_controller,json=resourceRightsController,proto3" json:"resource_rights_controller,omitempty" xml:"ResourceRightsController"`
	// @gotags: xml:"WorkRightsController"
	WorkRightsController []*WorkRightsController `protobuf:"bytes,14,rep,name=work_rights_controller,json=workRightsController,proto3" json:"work_rights_controller,omitempty" xml:"WorkRightsController"`
	// @gotags: xml:"PLine"
	PLine []*PLine `protobuf:"bytes,15,rep,name=p_line,json=pLine,proto3" json:"p_line,omitempty" xml:"PLine"`
	// @gotags: xml:"CLine"
	CLine []*CLine `protobuf:"bytes,16,rep,name=c_line,json=cLine,proto3" json:"c_line,omitempty" xml:"CLine"`
	// @gotags: xml:"CourtesyLine"
	CourtesyLine []*CourtesyLine `protobuf:"bytes,17,rep,name=courtesy_line,json=courtesyLine,proto3" json:"courtesy_line,omitempty" xml:"CourtesyLine"`
	// @gotags: xml:"CreationDate"
	CreationDate *EventDateWithoutFlags `protobuf:"bytes,18,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty" xml:"CreationDate"`
	// @gotags: xml:"FirstPublicationDate"
	FirstPublicationDate []*FulfillmentDate `protobuf:"bytes,19,rep,name=first_publication_date,json=firstPublicationDate,proto3" json:"first_publication_date,omitempty" xml:"FirstPublicationDate"`
	// @gotags: xml:"ParentalWarningType"
	ParentalWarningType []*ParentalWarningTypeWithStandard `protobuf:"bytes,20,rep,name=parental_warning_type,json=parentalWarningType,proto3" json:"parental_warning_type,omitempty" xml:"ParentalWarningType"`
	// @gotags: xml:"RelatedRelease"
	RelatedRelease []*RelatedRelease `protobuf:"bytes,21,rep,name=related_release,json=relatedRelease,proto3" json:"related_release,omitempty" xml:"RelatedRelease"`
	// @gotags: xml:"RelatedResource"
	RelatedResource []*RelatedResource `protobuf:"bytes,22,rep,name=related_resource,json=relatedResource,proto3" json:"related_resource,omitempty" xml:"RelatedResource"`
	// @gotags: xml:"ContainsHiddenContent"
	ContainsHiddenContent bool `protobuf:"varint,23,opt,name=contains_hidden_content,json=containsHiddenContent,proto3" json:"contains_hidden_content,omitempty" xml:"ContainsHiddenContent"`
	// @gotags: xml:"ResourceContainedResourceReferenceList"
	ResourceContainedResourceReferenceList *ResourceContainedResourceReferenceList `protobuf:"bytes,24,opt,name=resource_contained_resource_reference_list,json=resourceContainedResourceReferenceList,proto3" json:"resource_contained_resource_reference_list,omitempty" xml:"ResourceContainedResourceReferenceList"`
	// @gotags: xml:"TechnicalDetails"
	TechnicalDetails []*TechnicalSoftwareDetails `protobuf:"bytes,25,rep,name=technical_details,json=technicalDetails,proto3" json:"technical_details,omitempty" xml:"TechnicalDetails"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,26,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"IsSupplemental,attr"
	IsSupplemental bool `protobuf:"varint,27,opt,name=is_supplemental,json=isSupplemental,proto3" json:"is_supplemental,omitempty" xml:"IsSupplemental,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Software) Reset() {
	*x = Software{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Software) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Software) ProtoMessage() {}

func (x *Software) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Software.ProtoReflect.Descriptor instead.
func (*Software) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{72}
}

func (x *Software) GetResourceReference() string {
	if x != nil {
		return x.ResourceReference
	}
	return ""
}

func (x *Software) GetType() *SoftwareType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Software) GetResourceId() []*ResourceProprietaryId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *Software) GetWorkId() []*MusicalWorkId {
	if x != nil {
		return x.WorkId
	}
	return nil
}

func (x *Software) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *Software) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *Software) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *Software) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *Software) GetVersionType() []*VersionType {
	if x != nil {
		return x.VersionType
	}
	return nil
}

func (x *Software) GetDisplayArtistName() []*DisplayArtistNameWithOriginalLanguage {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Software) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *Software) GetContributor() []*Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

func (x *Software) GetResourceRightsController() []*ResourceRightsController {
	if x != nil {
		return x.ResourceRightsController
	}
	return nil
}

func (x *Software) GetWorkRightsController() []*WorkRightsController {
	if x != nil {
		return x.WorkRightsController
	}
	return nil
}

func (x *Software) GetPLine() []*PLine {
	if x != nil {
		return x.PLine
	}
	return nil
}

func (x *Software) GetCLine() []*CLine {
	if x != nil {
		return x.CLine
	}
	return nil
}

func (x *Software) GetCourtesyLine() []*CourtesyLine {
	if x != nil {
		return x.CourtesyLine
	}
	return nil
}

func (x *Software) GetCreationDate() *EventDateWithoutFlags {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *Software) GetFirstPublicationDate() []*FulfillmentDate {
	if x != nil {
		return x.FirstPublicationDate
	}
	return nil
}

func (x *Software) GetParentalWarningType() []*ParentalWarningTypeWithStandard {
	if x != nil {
		return x.ParentalWarningType
	}
	return nil
}

func (x *Software) GetRelatedRelease() []*RelatedRelease {
	if x != nil {
		return x.RelatedRelease
	}
	return nil
}

func (x *Software) GetRelatedResource() []*RelatedResource {
	if x != nil {
		return x.RelatedResource
	}
	return nil
}

func (x *Software) GetContainsHiddenContent() bool {
	if x != nil {
		return x.ContainsHiddenContent
	}
	return false
}

func (x *Software) GetResourceContainedResourceReferenceList() *ResourceContainedResourceReferenceList {
	if x != nil {
		return x.ResourceContainedResourceReferenceList
	}
	return nil
}

func (x *Software) GetTechnicalDetails() []*TechnicalSoftwareDetails {
	if x != nil {
		return x.TechnicalDetails
	}
	return nil
}

func (x *Software) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *Software) GetIsSupplemental() bool {
	if x != nil {
		return x.IsSupplemental
	}
	return false
}

type SoundRecording struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceReference"
	ResourceReference string `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3" json:"resource_reference,omitempty" xml:"ResourceReference"`
	// @gotags: xml:"Type"
	Type *SoundRecordingType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"SoundRecordingEdition"
	SoundRecordingEdition []*SoundRecordingEdition `protobuf:"bytes,3,rep,name=sound_recording_edition,json=soundRecordingEdition,proto3" json:"sound_recording_edition,omitempty" xml:"SoundRecordingEdition"`
	// @gotags: xml:"RecordingFormat"
	RecordingFormat []*RecordingFormat `protobuf:"bytes,4,rep,name=recording_format,json=recordingFormat,proto3" json:"recording_format,omitempty" xml:"RecordingFormat"`
	// @gotags: xml:"WorkId"
	WorkId []*MusicalWorkId `protobuf:"bytes,5,rep,name=work_id,json=workId,proto3" json:"work_id,omitempty" xml:"WorkId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,6,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,7,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,8,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,9,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"VersionType"
	VersionType []*VersionType `protobuf:"bytes,10,rep,name=version_type,json=versionType,proto3" json:"version_type,omitempty" xml:"VersionType"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithOriginalLanguage `protobuf:"bytes,11,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*DisplayArtist `protobuf:"bytes,12,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"Contributor"
	Contributor []*Contributor `protobuf:"bytes,13,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	// @gotags: xml:"Character"
	Character []*Character `protobuf:"bytes,14,rep,name=character,proto3" json:"character,omitempty" xml:"Character"`
	// @gotags: xml:"ResourceRightsController"
	ResourceRightsController []*ResourceRightsController `protobuf:"bytes,15,rep,name=resource_rights_controller,json=resourceRightsController,proto3" json:"resource_rights_controller,omitempty" xml:"ResourceRightsController"`
	// @gotags: xml:"WorkRightsController"
	WorkRightsController []*WorkRightsController `protobuf:"bytes,16,rep,name=work_rights_controller,json=workRightsController,proto3" json:"work_rights_controller,omitempty" xml:"WorkRightsController"`
	// @gotags: xml:"CourtesyLine"
	CourtesyLine []*CourtesyLine `protobuf:"bytes,17,rep,name=courtesy_line,json=courtesyLine,proto3" json:"courtesy_line,omitempty" xml:"CourtesyLine"`
	// @gotags: xml:"Duration"
	Duration string `protobuf:"bytes,18,opt,name=duration,proto3" json:"duration,omitempty" xml:"Duration"`
	// @gotags: xml:"CreationDate"
	CreationDate *EventDateWithoutFlags `protobuf:"bytes,19,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty" xml:"CreationDate"`
	// @gotags: xml:"MasteredDate"
	MasteredDate *EventDateWithoutFlags `protobuf:"bytes,20,opt,name=mastered_date,json=masteredDate,proto3" json:"mastered_date,omitempty" xml:"MasteredDate"`
	// @gotags: xml:"RemasteredDate"
	RemasteredDate *EventDateWithoutFlags `protobuf:"bytes,21,opt,name=remastered_date,json=remasteredDate,proto3" json:"remastered_date,omitempty" xml:"RemasteredDate"`
	// @gotags: xml:"FirstPublicationDate"
	FirstPublicationDate []*FirstPublicationDate `protobuf:"bytes,22,rep,name=first_publication_date,json=firstPublicationDate,proto3" json:"first_publication_date,omitempty" xml:"FirstPublicationDate"`
	// @gotags: xml:"LocationAndDateOfSession"
	LocationAndDateOfSession []*LocationAndDateOfSession `protobuf:"bytes,23,rep,name=location_and_date_of_session,json=locationAndDateOfSession,proto3" json:"location_and_date_of_session,omitempty" xml:"LocationAndDateOfSession"`
	// @gotags: xml:"ParentalWarningType"
	ParentalWarningType []*ParentalWarningTypeWithStandard `protobuf:"bytes,24,rep,name=parental_warning_type,json=parentalWarningType,proto3" json:"parental_warning_type,omitempty" xml:"ParentalWarningType"`
	// @gotags: xml:"RelatedRelease"
	RelatedRelease []*RelatedRelease `protobuf:"bytes,25,rep,name=related_release,json=relatedRelease,proto3" json:"related_release,omitempty" xml:"RelatedRelease"`
	// @gotags: xml:"RelatedResource"
	RelatedResource []*RelatedResource `protobuf:"bytes,26,rep,name=related_resource,json=relatedResource,proto3" json:"related_resource,omitempty" xml:"RelatedResource"`
	// @gotags: xml:"CompositeMusicalWorkType"
	CompositeMusicalWorkType avs.CompositeMusicalWorkType `protobuf:"varint,27,opt,name=composite_musical_work_type,json=compositeMusicalWorkType,proto3,enum=ddex.avs.CompositeMusicalWorkType" json:"composite_musical_work_type,omitempty" xml:"CompositeMusicalWorkType"`
	// @gotags: xml:"ContainsAI"
	ContainsAI avs.ContainsAI `protobuf:"varint,28,opt,name=contains_a_i,json=containsAI,proto3,enum=ddex.avs.ContainsAI" json:"contains_a_i,omitempty" xml:"ContainsAI"`
	// @gotags: xml:"IsCover"
	IsCover bool `protobuf:"varint,29,opt,name=is_cover,json=isCover,proto3" json:"is_cover,omitempty" xml:"IsCover"`
	// @gotags: xml:"HasVocalPerformance"
	HasVocalPerformance bool `protobuf:"varint,30,opt,name=has_vocal_performance,json=hasVocalPerformance,proto3" json:"has_vocal_performance,omitempty" xml:"HasVocalPerformance"`
	// @gotags: xml:"HasForegroundVocalPerformance"
	HasForegroundVocalPerformance bool `protobuf:"varint,31,opt,name=has_foreground_vocal_performance,json=hasForegroundVocalPerformance,proto3" json:"has_foreground_vocal_performance,omitempty" xml:"HasForegroundVocalPerformance"`
	// @gotags: xml:"IsInstrumental"
	IsInstrumental bool `protobuf:"varint,32,opt,name=is_instrumental,json=isInstrumental,proto3" json:"is_instrumental,omitempty" xml:"IsInstrumental"`
	// @gotags: xml:"ContainsHiddenContent"
	ContainsHiddenContent bool `protobuf:"varint,33,opt,name=contains_hidden_content,json=containsHiddenContent,proto3" json:"contains_hidden_content,omitempty" xml:"ContainsHiddenContent"`
	// @gotags: xml:"IsRemastered"
	IsRemastered bool `protobuf:"varint,34,opt,name=is_remastered,json=isRemastered,proto3" json:"is_remastered,omitempty" xml:"IsRemastered"`
	// @gotags: xml:"IsHiResMusic"
	IsHiResMusic bool `protobuf:"varint,35,opt,name=is_hi_res_music,json=isHiResMusic,proto3" json:"is_hi_res_music,omitempty" xml:"IsHiResMusic"`
	// @gotags: xml:"DisableCrossfade"
	DisableCrossfade bool `protobuf:"varint,36,opt,name=disable_crossfade,json=disableCrossfade,proto3" json:"disable_crossfade,omitempty" xml:"DisableCrossfade"`
	// @gotags: xml:"DisableSearch"
	DisableSearch bool `protobuf:"varint,37,opt,name=disable_search,json=disableSearch,proto3" json:"disable_search,omitempty" xml:"DisableSearch"`
	// @gotags: xml:"DisplayCredits"
	DisplayCredits []*DisplayCredits `protobuf:"bytes,38,rep,name=display_credits,json=displayCredits,proto3" json:"display_credits,omitempty" xml:"DisplayCredits"`
	// @gotags: xml:"LanguageOfPerformance"
	LanguageOfPerformance []*Language `protobuf:"bytes,39,rep,name=language_of_performance,json=languageOfPerformance,proto3" json:"language_of_performance,omitempty" xml:"LanguageOfPerformance"`
	// @gotags: xml:"Raga"
	Raga []*Raga `protobuf:"bytes,40,rep,name=raga,proto3" json:"raga,omitempty" xml:"Raga"`
	// @gotags: xml:"Tala"
	Tala []*Tala `protobuf:"bytes,41,rep,name=tala,proto3" json:"tala,omitempty" xml:"Tala"`
	// @gotags: xml:"Deity"
	Deity []*Deity `protobuf:"bytes,42,rep,name=deity,proto3" json:"deity,omitempty" xml:"Deity"`
	// @gotags: xml:"AudioChapterReference"
	AudioChapterReference []string `protobuf:"bytes,43,rep,name=audio_chapter_reference,json=audioChapterReference,proto3" json:"audio_chapter_reference,omitempty" xml:"AudioChapterReference"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,44,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"IsSupplemental,attr"
	IsSupplemental bool `protobuf:"varint,45,opt,name=is_supplemental,json=isSupplemental,proto3" json:"is_supplemental,omitempty" xml:"IsSupplemental,attr"`
	// @gotags: xml:"ApplyClassicalProfileVariant,attr"
	ApplyClassicalProfileVariant bool `protobuf:"varint,46,opt,name=apply_classical_profile_variant,json=applyClassicalProfileVariant,proto3" json:"apply_classical_profile_variant,omitempty" xml:"ApplyClassicalProfileVariant,attr"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *SoundRecording) Reset() {
	*x = SoundRecording{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoundRecording) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundRecording) ProtoMessage() {}

func (x *SoundRecording) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundRecording.ProtoReflect.Descriptor instead.
func (*SoundRecording) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{73}
}

func (x *SoundRecording) GetResourceReference() string {
	if x != nil {
		return x.ResourceReference
	}
	return ""
}

func (x *SoundRecording) GetType() *SoundRecordingType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *SoundRecording) GetSoundRecordingEdition() []*SoundRecordingEdition {
	if x != nil {
		return x.SoundRecordingEdition
	}
	return nil
}

func (x *SoundRecording) GetRecordingFormat() []*RecordingFormat {
	if x != nil {
		return x.RecordingFormat
	}
	return nil
}

func (x *SoundRecording) GetWorkId() []*MusicalWorkId {
	if x != nil {
		return x.WorkId
	}
	return nil
}

func (x *SoundRecording) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *SoundRecording) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *SoundRecording) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *SoundRecording) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *SoundRecording) GetVersionType() []*VersionType {
	if x != nil {
		return x.VersionType
	}
	return nil
}

func (x *SoundRecording) GetDisplayArtistName() []*DisplayArtistNameWithOriginalLanguage {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *SoundRecording) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *SoundRecording) GetContributor() []*Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

func (x *SoundRecording) GetCharacter() []*Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *SoundRecording) GetResourceRightsController() []*ResourceRightsController {
	if x != nil {
		return x.ResourceRightsController
	}
	return nil
}

func (x *SoundRecording) GetWorkRightsController() []*WorkRightsController {
	if x != nil {
		return x.WorkRightsController
	}
	return nil
}

func (x *SoundRecording) GetCourtesyLine() []*CourtesyLine {
	if x != nil {
		return x.CourtesyLine
	}
	return nil
}

func (x *SoundRecording) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *SoundRecording) GetCreationDate() *EventDateWithoutFlags {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *SoundRecording) GetMasteredDate() *EventDateWithoutFlags {
	if x != nil {
		return x.MasteredDate
	}
	return nil
}

func (x *SoundRecording) GetRemasteredDate() *EventDateWithoutFlags {
	if x != nil {
		return x.RemasteredDate
	}
	return nil
}

func (x *SoundRecording) GetFirstPublicationDate() []*FirstPublicationDate {
	if x != nil {
		return x.FirstPublicationDate
	}
	return nil
}

func (x *SoundRecording) GetLocationAndDateOfSession() []*LocationAndDateOfSession {
	if x != nil {
		return x.LocationAndDateOfSession
	}
	return nil
}

func (x *SoundRecording) GetParentalWarningType() []*ParentalWarningTypeWithStandard {
	if x != nil {
		return x.ParentalWarningType
	}
	return nil
}

func (x *SoundRecording) GetRelatedRelease() []*RelatedRelease {
	if x != nil {
		return x.RelatedRelease
	}
	return nil
}

func (x *SoundRecording) GetRelatedResource() []*RelatedResource {
	if x != nil {
		return x.RelatedResource
	}
	return nil
}

func (x *SoundRecording) GetCompositeMusicalWorkType() avs.CompositeMusicalWorkType {
	if x != nil {
		return x.CompositeMusicalWorkType
	}
	return avs.CompositeMusicalWorkType(0)
}

func (x *SoundRecording) GetContainsAI() avs.ContainsAI {
	if x != nil {
		return x.ContainsAI
	}
	return avs.ContainsAI(0)
}

func (x *SoundRecording) GetIsCover() bool {
	if x != nil {
		return x.IsCover
	}
	return false
}

func (x *SoundRecording) GetHasVocalPerformance() bool {
	if x != nil {
		return x.HasVocalPerformance
	}
	return false
}

func (x *SoundRecording) GetHasForegroundVocalPerformance() bool {
	if x != nil {
		return x.HasForegroundVocalPerformance
	}
	return false
}

func (x *SoundRecording) GetIsInstrumental() bool {
	if x != nil {
		return x.IsInstrumental
	}
	return false
}

func (x *SoundRecording) GetContainsHiddenContent() bool {
	if x != nil {
		return x.ContainsHiddenContent
	}
	return false
}

func (x *SoundRecording) GetIsRemastered() bool {
	if x != nil {
		return x.IsRemastered
	}
	return false
}

func (x *SoundRecording) GetIsHiResMusic() bool {
	if x != nil {
		return x.IsHiResMusic
	}
	return false
}

func (x *SoundRecording) GetDisableCrossfade() bool {
	if x != nil {
		return x.DisableCrossfade
	}
	return false
}

func (x *SoundRecording) GetDisableSearch() bool {
	if x != nil {
		return x.DisableSearch
	}
	return false
}

func (x *SoundRecording) GetDisplayCredits() []*DisplayCredits {
	if x != nil {
		return x.DisplayCredits
	}
	return nil
}

func (x *SoundRecording) GetLanguageOfPerformance() []*Language {
	if x != nil {
		return x.LanguageOfPerformance
	}
	return nil
}

func (x *SoundRecording) GetRaga() []*Raga {
	if x != nil {
		return x.Raga
	}
	return nil
}

func (x *SoundRecording) GetTala() []*Tala {
	if x != nil {
		return x.Tala
	}
	return nil
}

func (x *SoundRecording) GetDeity() []*Deity {
	if x != nil {
		return x.Deity
	}
	return nil
}

func (x *SoundRecording) GetAudioChapterReference() []string {
	if x != nil {
		return x.AudioChapterReference
	}
	return nil
}

func (x *SoundRecording) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *SoundRecording) GetIsSupplemental() bool {
	if x != nil {
		return x.IsSupplemental
	}
	return false
}

func (x *SoundRecording) GetApplyClassicalProfileVariant() bool {
	if x != nil {
		return x.ApplyClassicalProfileVariant
	}
	return false
}

type SoundRecordingClipDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TechnicalResourceDetailsReference"
	TechnicalResourceDetailsReference string `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty" xml:"TechnicalResourceDetailsReference"`
	// @gotags: xml:"ClipType"
	ClipType *ClipType `protobuf:"bytes,2,opt,name=clip_type,json=clipType,proto3" json:"clip_type,omitempty" xml:"ClipType"`
	// @gotags: xml:"Timing"
	Timing []*Timing `protobuf:"bytes,3,rep,name=timing,proto3" json:"timing,omitempty" xml:"Timing"`
	// @gotags: xml:"ExpressionType"
	ExpressionType avs.ExpressionType `protobuf:"varint,4,opt,name=expression_type,json=expressionType,proto3,enum=ddex.avs.ExpressionType" json:"expression_type,omitempty" xml:"ExpressionType"`
	// @gotags: xml:"DeliveryFile"
	DeliveryFile  []*AudioDeliveryFile `protobuf:"bytes,5,rep,name=delivery_file,json=deliveryFile,proto3" json:"delivery_file,omitempty" xml:"DeliveryFile"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SoundRecordingClipDetails) Reset() {
	*x = SoundRecordingClipDetails{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoundRecordingClipDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundRecordingClipDetails) ProtoMessage() {}

func (x *SoundRecordingClipDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundRecordingClipDetails.ProtoReflect.Descriptor instead.
func (*SoundRecordingClipDetails) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{74}
}

func (x *SoundRecordingClipDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *SoundRecordingClipDetails) GetClipType() *ClipType {
	if x != nil {
		return x.ClipType
	}
	return nil
}

func (x *SoundRecordingClipDetails) GetTiming() []*Timing {
	if x != nil {
		return x.Timing
	}
	return nil
}

func (x *SoundRecordingClipDetails) GetExpressionType() avs.ExpressionType {
	if x != nil {
		return x.ExpressionType
	}
	return avs.ExpressionType(0)
}

func (x *SoundRecordingClipDetails) GetDeliveryFile() []*AudioDeliveryFile {
	if x != nil {
		return x.DeliveryFile
	}
	return nil
}

type SoundRecordingEdition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Type"
	Type avs.EditionType `protobuf:"varint,1,opt,name=type,proto3,enum=ddex.avs.EditionType" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"ResourceId"
	ResourceId []*SoundRecordingId `protobuf:"bytes,2,rep,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"EditionContributor"
	EditionContributor []*EditionContributor `protobuf:"bytes,3,rep,name=edition_contributor,json=editionContributor,proto3" json:"edition_contributor,omitempty" xml:"EditionContributor"`
	// @gotags: xml:"PLine"
	PLine []*PLine `protobuf:"bytes,4,rep,name=p_line,json=pLine,proto3" json:"p_line,omitempty" xml:"PLine"`
	// @gotags: xml:"RecordingMode"
	RecordingMode avs.RecordingMode `protobuf:"varint,5,opt,name=recording_mode,json=recordingMode,proto3,enum=ddex.avs.RecordingMode" json:"recording_mode,omitempty" xml:"RecordingMode"`
	// @gotags: xml:"TechnicalDetails"
	TechnicalDetails []*TechnicalSoundRecordingDetails `protobuf:"bytes,6,rep,name=technical_details,json=technicalDetails,proto3" json:"technical_details,omitempty" xml:"TechnicalDetails"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SoundRecordingEdition) Reset() {
	*x = SoundRecordingEdition{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoundRecordingEdition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundRecordingEdition) ProtoMessage() {}

func (x *SoundRecordingEdition) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundRecordingEdition.ProtoReflect.Descriptor instead.
func (*SoundRecordingEdition) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{75}
}

func (x *SoundRecordingEdition) GetType() avs.EditionType {
	if x != nil {
		return x.Type
	}
	return avs.EditionType(0)
}

func (x *SoundRecordingEdition) GetResourceId() []*SoundRecordingId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *SoundRecordingEdition) GetEditionContributor() []*EditionContributor {
	if x != nil {
		return x.EditionContributor
	}
	return nil
}

func (x *SoundRecordingEdition) GetPLine() []*PLine {
	if x != nil {
		return x.PLine
	}
	return nil
}

func (x *SoundRecordingEdition) GetRecordingMode() avs.RecordingMode {
	if x != nil {
		return x.RecordingMode
	}
	return avs.RecordingMode(0)
}

func (x *SoundRecordingEdition) GetTechnicalDetails() []*TechnicalSoundRecordingDetails {
	if x != nil {
		return x.TechnicalDetails
	}
	return nil
}

type SupplementalDocumentList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"SupplementalDocument"
	SupplementalDocument []*File `protobuf:"bytes,1,rep,name=supplemental_document,json=supplementalDocument,proto3" json:"supplemental_document,omitempty" xml:"SupplementalDocument"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *SupplementalDocumentList) Reset() {
	*x = SupplementalDocumentList{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SupplementalDocumentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupplementalDocumentList) ProtoMessage() {}

func (x *SupplementalDocumentList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupplementalDocumentList.ProtoReflect.Descriptor instead.
func (*SupplementalDocumentList) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{76}
}

func (x *SupplementalDocumentList) GetSupplementalDocument() []*File {
	if x != nil {
		return x.SupplementalDocument
	}
	return nil
}

type SynopsisWithTerritory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"IsShortSynopsis,attr"
	IsShortSynopsis bool `protobuf:"varint,5,opt,name=is_short_synopsis,json=isShortSynopsis,proto3" json:"is_short_synopsis,omitempty" xml:"IsShortSynopsis,attr"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SynopsisWithTerritory) Reset() {
	*x = SynopsisWithTerritory{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynopsisWithTerritory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynopsisWithTerritory) ProtoMessage() {}

func (x *SynopsisWithTerritory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynopsisWithTerritory.ProtoReflect.Descriptor instead.
func (*SynopsisWithTerritory) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{77}
}

func (x *SynopsisWithTerritory) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SynopsisWithTerritory) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *SynopsisWithTerritory) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *SynopsisWithTerritory) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *SynopsisWithTerritory) GetIsShortSynopsis() bool {
	if x != nil {
		return x.IsShortSynopsis
	}
	return false
}

type Tala struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,2,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tala) Reset() {
	*x = Tala{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tala) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tala) ProtoMessage() {}

func (x *Tala) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tala.ProtoReflect.Descriptor instead.
func (*Tala) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{78}
}

func (x *Tala) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Tala) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *Tala) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type TechnicalImageDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TechnicalResourceDetailsReference"
	TechnicalResourceDetailsReference string `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty" xml:"TechnicalResourceDetailsReference"`
	// @gotags: xml:"ImageCodecType"
	ImageCodecType *ImageCodecType `protobuf:"bytes,2,opt,name=image_codec_type,json=imageCodecType,proto3" json:"image_codec_type,omitempty" xml:"ImageCodecType"`
	// @gotags: xml:"ImageHeight"
	ImageHeight *Extent `protobuf:"bytes,3,opt,name=image_height,json=imageHeight,proto3" json:"image_height,omitempty" xml:"ImageHeight"`
	// @gotags: xml:"ImageWidth"
	ImageWidth *Extent `protobuf:"bytes,4,opt,name=image_width,json=imageWidth,proto3" json:"image_width,omitempty" xml:"ImageWidth"`
	// @gotags: xml:"AspectRatio"
	AspectRatio []*AspectRatio `protobuf:"bytes,5,rep,name=aspect_ratio,json=aspectRatio,proto3" json:"aspect_ratio,omitempty" xml:"AspectRatio"`
	// @gotags: xml:"ColorDepth"
	ColorDepth int32 `protobuf:"varint,6,opt,name=color_depth,json=colorDepth,proto3" json:"color_depth,omitempty" xml:"ColorDepth"`
	// @gotags: xml:"ImageResolution"
	ImageResolution int32 `protobuf:"varint,7,opt,name=image_resolution,json=imageResolution,proto3" json:"image_resolution,omitempty" xml:"ImageResolution"`
	// @gotags: xml:"BitDepth"
	BitDepth int32 `protobuf:"varint,8,opt,name=bit_depth,json=bitDepth,proto3" json:"bit_depth,omitempty" xml:"BitDepth"`
	// @gotags: xml:"IsClip"
	IsClip bool `protobuf:"varint,9,opt,name=is_clip,json=isClip,proto3" json:"is_clip,omitempty" xml:"IsClip"`
	// @gotags: xml:"ClipDetails"
	ClipDetails []*ClipDetails `protobuf:"bytes,10,rep,name=clip_details,json=clipDetails,proto3" json:"clip_details,omitempty" xml:"ClipDetails"`
	// @gotags: xml:"File"
	File *File `protobuf:"bytes,11,opt,name=file,proto3" json:"file,omitempty" xml:"File"`
	// @gotags: xml:"IsProvidedInDelivery"
	IsProvidedInDelivery bool `protobuf:"varint,12,opt,name=is_provided_in_delivery,json=isProvidedInDelivery,proto3" json:"is_provided_in_delivery,omitempty" xml:"IsProvidedInDelivery"`
	// @gotags: xml:"Fingerprint"
	Fingerprint []*Fingerprint `protobuf:"bytes,13,rep,name=fingerprint,proto3" json:"fingerprint,omitempty" xml:"Fingerprint"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,14,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,15,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,16,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TechnicalImageDetails) Reset() {
	*x = TechnicalImageDetails{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalImageDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalImageDetails) ProtoMessage() {}

func (x *TechnicalImageDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnicalImageDetails.ProtoReflect.Descriptor instead.
func (*TechnicalImageDetails) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{79}
}

func (x *TechnicalImageDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *TechnicalImageDetails) GetImageCodecType() *ImageCodecType {
	if x != nil {
		return x.ImageCodecType
	}
	return nil
}

func (x *TechnicalImageDetails) GetImageHeight() *Extent {
	if x != nil {
		return x.ImageHeight
	}
	return nil
}

func (x *TechnicalImageDetails) GetImageWidth() *Extent {
	if x != nil {
		return x.ImageWidth
	}
	return nil
}

func (x *TechnicalImageDetails) GetAspectRatio() []*AspectRatio {
	if x != nil {
		return x.AspectRatio
	}
	return nil
}

func (x *TechnicalImageDetails) GetColorDepth() int32 {
	if x != nil {
		return x.ColorDepth
	}
	return 0
}

func (x *TechnicalImageDetails) GetImageResolution() int32 {
	if x != nil {
		return x.ImageResolution
	}
	return 0
}

func (x *TechnicalImageDetails) GetBitDepth() int32 {
	if x != nil {
		return x.BitDepth
	}
	return 0
}

func (x *TechnicalImageDetails) GetIsClip() bool {
	if x != nil {
		return x.IsClip
	}
	return false
}

func (x *TechnicalImageDetails) GetClipDetails() []*ClipDetails {
	if x != nil {
		return x.ClipDetails
	}
	return nil
}

func (x *TechnicalImageDetails) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *TechnicalImageDetails) GetIsProvidedInDelivery() bool {
	if x != nil {
		return x.IsProvidedInDelivery
	}
	return false
}

func (x *TechnicalImageDetails) GetFingerprint() []*Fingerprint {
	if x != nil {
		return x.Fingerprint
	}
	return nil
}

func (x *TechnicalImageDetails) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TechnicalImageDetails) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *TechnicalImageDetails) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type TechnicalSheetMusicDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TechnicalResourceDetailsReference"
	TechnicalResourceDetailsReference string `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty" xml:"TechnicalResourceDetailsReference"`
	// @gotags: xml:"SheetMusicCodecType"
	SheetMusicCodecType *SheetMusicCodecType `protobuf:"bytes,2,opt,name=sheet_music_codec_type,json=sheetMusicCodecType,proto3" json:"sheet_music_codec_type,omitempty" xml:"SheetMusicCodecType"`
	// @gotags: xml:"BitDepth"
	BitDepth int32 `protobuf:"varint,3,opt,name=bit_depth,json=bitDepth,proto3" json:"bit_depth,omitempty" xml:"BitDepth"`
	// @gotags: xml:"IsClip"
	IsClip bool `protobuf:"varint,4,opt,name=is_clip,json=isClip,proto3" json:"is_clip,omitempty" xml:"IsClip"`
	// @gotags: xml:"ClipDetails"
	ClipDetails []*ClipDetails `protobuf:"bytes,5,rep,name=clip_details,json=clipDetails,proto3" json:"clip_details,omitempty" xml:"ClipDetails"`
	// @gotags: xml:"File"
	File *File `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty" xml:"File"`
	// @gotags: xml:"IsProvidedInDelivery"
	IsProvidedInDelivery bool `protobuf:"varint,7,opt,name=is_provided_in_delivery,json=isProvidedInDelivery,proto3" json:"is_provided_in_delivery,omitempty" xml:"IsProvidedInDelivery"`
	// @gotags: xml:"Fingerprint"
	Fingerprint []*Fingerprint `protobuf:"bytes,8,rep,name=fingerprint,proto3" json:"fingerprint,omitempty" xml:"Fingerprint"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,9,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,10,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,11,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TechnicalSheetMusicDetails) Reset() {
	*x = TechnicalSheetMusicDetails{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalSheetMusicDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalSheetMusicDetails) ProtoMessage() {}

func (x *TechnicalSheetMusicDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnicalSheetMusicDetails.ProtoReflect.Descriptor instead.
func (*TechnicalSheetMusicDetails) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{80}
}

func (x *TechnicalSheetMusicDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *TechnicalSheetMusicDetails) GetSheetMusicCodecType() *SheetMusicCodecType {
	if x != nil {
		return x.SheetMusicCodecType
	}
	return nil
}

func (x *TechnicalSheetMusicDetails) GetBitDepth() int32 {
	if x != nil {
		return x.BitDepth
	}
	return 0
}

func (x *TechnicalSheetMusicDetails) GetIsClip() bool {
	if x != nil {
		return x.IsClip
	}
	return false
}

func (x *TechnicalSheetMusicDetails) GetClipDetails() []*ClipDetails {
	if x != nil {
		return x.ClipDetails
	}
	return nil
}

func (x *TechnicalSheetMusicDetails) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *TechnicalSheetMusicDetails) GetIsProvidedInDelivery() bool {
	if x != nil {
		return x.IsProvidedInDelivery
	}
	return false
}

func (x *TechnicalSheetMusicDetails) GetFingerprint() []*Fingerprint {
	if x != nil {
		return x.Fingerprint
	}
	return nil
}

func (x *TechnicalSheetMusicDetails) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TechnicalSheetMusicDetails) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *TechnicalSheetMusicDetails) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type TechnicalSoftwareDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TechnicalResourceDetailsReference"
	TechnicalResourceDetailsReference string `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty" xml:"TechnicalResourceDetailsReference"`
	// @gotags: xml:"OperatingSystemType"
	OperatingSystemType *OperatingSystemType `protobuf:"bytes,2,opt,name=operating_system_type,json=operatingSystemType,proto3" json:"operating_system_type,omitempty" xml:"OperatingSystemType"`
	// @gotags: xml:"BitDepth"
	BitDepth int32 `protobuf:"varint,3,opt,name=bit_depth,json=bitDepth,proto3" json:"bit_depth,omitempty" xml:"BitDepth"`
	// @gotags: xml:"IsClip"
	IsClip bool `protobuf:"varint,4,opt,name=is_clip,json=isClip,proto3" json:"is_clip,omitempty" xml:"IsClip"`
	// @gotags: xml:"ClipDetails"
	ClipDetails []*ClipDetails `protobuf:"bytes,5,rep,name=clip_details,json=clipDetails,proto3" json:"clip_details,omitempty" xml:"ClipDetails"`
	// @gotags: xml:"File"
	File *File `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty" xml:"File"`
	// @gotags: xml:"IsProvidedInDelivery"
	IsProvidedInDelivery bool `protobuf:"varint,7,opt,name=is_provided_in_delivery,json=isProvidedInDelivery,proto3" json:"is_provided_in_delivery,omitempty" xml:"IsProvidedInDelivery"`
	// @gotags: xml:"Fingerprint"
	Fingerprint []*Fingerprint `protobuf:"bytes,8,rep,name=fingerprint,proto3" json:"fingerprint,omitempty" xml:"Fingerprint"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,9,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,10,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,11,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TechnicalSoftwareDetails) Reset() {
	*x = TechnicalSoftwareDetails{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalSoftwareDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalSoftwareDetails) ProtoMessage() {}

func (x *TechnicalSoftwareDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnicalSoftwareDetails.ProtoReflect.Descriptor instead.
func (*TechnicalSoftwareDetails) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{81}
}

func (x *TechnicalSoftwareDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *TechnicalSoftwareDetails) GetOperatingSystemType() *OperatingSystemType {
	if x != nil {
		return x.OperatingSystemType
	}
	return nil
}

func (x *TechnicalSoftwareDetails) GetBitDepth() int32 {
	if x != nil {
		return x.BitDepth
	}
	return 0
}

func (x *TechnicalSoftwareDetails) GetIsClip() bool {
	if x != nil {
		return x.IsClip
	}
	return false
}

func (x *TechnicalSoftwareDetails) GetClipDetails() []*ClipDetails {
	if x != nil {
		return x.ClipDetails
	}
	return nil
}

func (x *TechnicalSoftwareDetails) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *TechnicalSoftwareDetails) GetIsProvidedInDelivery() bool {
	if x != nil {
		return x.IsProvidedInDelivery
	}
	return false
}

func (x *TechnicalSoftwareDetails) GetFingerprint() []*Fingerprint {
	if x != nil {
		return x.Fingerprint
	}
	return nil
}

func (x *TechnicalSoftwareDetails) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TechnicalSoftwareDetails) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *TechnicalSoftwareDetails) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type TechnicalSoundRecordingDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TechnicalResourceDetailsReference"
	TechnicalResourceDetailsReference string `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty" xml:"TechnicalResourceDetailsReference"`
	// @gotags: xml:"DeliveryFile"
	DeliveryFile []*AudioDeliveryFile `protobuf:"bytes,2,rep,name=delivery_file,json=deliveryFile,proto3" json:"delivery_file,omitempty" xml:"DeliveryFile"`
	// @gotags: xml:"HasImmersiveAudioMetadata"
	HasImmersiveAudioMetadata bool `protobuf:"varint,3,opt,name=has_immersive_audio_metadata,json=hasImmersiveAudioMetadata,proto3" json:"has_immersive_audio_metadata,omitempty" xml:"HasImmersiveAudioMetadata"`
	// @gotags: xml:"IsClip"
	IsClip bool `protobuf:"varint,4,opt,name=is_clip,json=isClip,proto3" json:"is_clip,omitempty" xml:"IsClip"`
	// @gotags: xml:"ClipDetails"
	ClipDetails []*SoundRecordingClipDetails `protobuf:"bytes,5,rep,name=clip_details,json=clipDetails,proto3" json:"clip_details,omitempty" xml:"ClipDetails"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,6,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,7,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,8,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TechnicalSoundRecordingDetails) Reset() {
	*x = TechnicalSoundRecordingDetails{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalSoundRecordingDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalSoundRecordingDetails) ProtoMessage() {}

func (x *TechnicalSoundRecordingDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnicalSoundRecordingDetails.ProtoReflect.Descriptor instead.
func (*TechnicalSoundRecordingDetails) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{82}
}

func (x *TechnicalSoundRecordingDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *TechnicalSoundRecordingDetails) GetDeliveryFile() []*AudioDeliveryFile {
	if x != nil {
		return x.DeliveryFile
	}
	return nil
}

func (x *TechnicalSoundRecordingDetails) GetHasImmersiveAudioMetadata() bool {
	if x != nil {
		return x.HasImmersiveAudioMetadata
	}
	return false
}

func (x *TechnicalSoundRecordingDetails) GetIsClip() bool {
	if x != nil {
		return x.IsClip
	}
	return false
}

func (x *TechnicalSoundRecordingDetails) GetClipDetails() []*SoundRecordingClipDetails {
	if x != nil {
		return x.ClipDetails
	}
	return nil
}

func (x *TechnicalSoundRecordingDetails) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TechnicalSoundRecordingDetails) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *TechnicalSoundRecordingDetails) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type TechnicalTextDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TechnicalResourceDetailsReference"
	TechnicalResourceDetailsReference string `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty" xml:"TechnicalResourceDetailsReference"`
	// @gotags: xml:"TextCodecType"
	TextCodecType *TextCodecType `protobuf:"bytes,2,opt,name=text_codec_type,json=textCodecType,proto3" json:"text_codec_type,omitempty" xml:"TextCodecType"`
	// @gotags: xml:"BitDepth"
	BitDepth int32 `protobuf:"varint,3,opt,name=bit_depth,json=bitDepth,proto3" json:"bit_depth,omitempty" xml:"BitDepth"`
	// @gotags: xml:"IsClip"
	IsClip bool `protobuf:"varint,4,opt,name=is_clip,json=isClip,proto3" json:"is_clip,omitempty" xml:"IsClip"`
	// @gotags: xml:"ClipDetails"
	ClipDetails []*ClipDetails `protobuf:"bytes,5,rep,name=clip_details,json=clipDetails,proto3" json:"clip_details,omitempty" xml:"ClipDetails"`
	// @gotags: xml:"File"
	File *File `protobuf:"bytes,6,opt,name=file,proto3" json:"file,omitempty" xml:"File"`
	// @gotags: xml:"IsProvidedInDelivery"
	IsProvidedInDelivery bool `protobuf:"varint,7,opt,name=is_provided_in_delivery,json=isProvidedInDelivery,proto3" json:"is_provided_in_delivery,omitempty" xml:"IsProvidedInDelivery"`
	// @gotags: xml:"Fingerprint"
	Fingerprint []*Fingerprint `protobuf:"bytes,8,rep,name=fingerprint,proto3" json:"fingerprint,omitempty" xml:"Fingerprint"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,9,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,10,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,11,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TechnicalTextDetails) Reset() {
	*x = TechnicalTextDetails{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalTextDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalTextDetails) ProtoMessage() {}

func (x *TechnicalTextDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnicalTextDetails.ProtoReflect.Descriptor instead.
func (*TechnicalTextDetails) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{83}
}

func (x *TechnicalTextDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *TechnicalTextDetails) GetTextCodecType() *TextCodecType {
	if x != nil {
		return x.TextCodecType
	}
	return nil
}

func (x *TechnicalTextDetails) GetBitDepth() int32 {
	if x != nil {
		return x.BitDepth
	}
	return 0
}

func (x *TechnicalTextDetails) GetIsClip() bool {
	if x != nil {
		return x.IsClip
	}
	return false
}

func (x *TechnicalTextDetails) GetClipDetails() []*ClipDetails {
	if x != nil {
		return x.ClipDetails
	}
	return nil
}

func (x *TechnicalTextDetails) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *TechnicalTextDetails) GetIsProvidedInDelivery() bool {
	if x != nil {
		return x.IsProvidedInDelivery
	}
	return false
}

func (x *TechnicalTextDetails) GetFingerprint() []*Fingerprint {
	if x != nil {
		return x.Fingerprint
	}
	return nil
}

func (x *TechnicalTextDetails) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TechnicalTextDetails) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *TechnicalTextDetails) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type TechnicalVideoDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TechnicalResourceDetailsReference"
	TechnicalResourceDetailsReference string `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty" xml:"TechnicalResourceDetailsReference"`
	// @gotags: xml:"OverallBitRate"
	OverallBitRate *BitRate `protobuf:"bytes,2,opt,name=overall_bit_rate,json=overallBitRate,proto3" json:"overall_bit_rate,omitempty" xml:"OverallBitRate"`
	// @gotags: xml:"DeliveryFile"
	DeliveryFile []*VideoDeliveryFile `protobuf:"bytes,3,rep,name=delivery_file,json=deliveryFile,proto3" json:"delivery_file,omitempty" xml:"DeliveryFile"`
	// @gotags: xml:"IsClip"
	IsClip bool `protobuf:"varint,4,opt,name=is_clip,json=isClip,proto3" json:"is_clip,omitempty" xml:"IsClip"`
	// @gotags: xml:"ClipDetails"
	ClipDetails []*VideoClipDetails `protobuf:"bytes,5,rep,name=clip_details,json=clipDetails,proto3" json:"clip_details,omitempty" xml:"ClipDetails"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,6,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,7,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,8,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TechnicalVideoDetails) Reset() {
	*x = TechnicalVideoDetails{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TechnicalVideoDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TechnicalVideoDetails) ProtoMessage() {}

func (x *TechnicalVideoDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TechnicalVideoDetails.ProtoReflect.Descriptor instead.
func (*TechnicalVideoDetails) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{84}
}

func (x *TechnicalVideoDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *TechnicalVideoDetails) GetOverallBitRate() *BitRate {
	if x != nil {
		return x.OverallBitRate
	}
	return nil
}

func (x *TechnicalVideoDetails) GetDeliveryFile() []*VideoDeliveryFile {
	if x != nil {
		return x.DeliveryFile
	}
	return nil
}

func (x *TechnicalVideoDetails) GetIsClip() bool {
	if x != nil {
		return x.IsClip
	}
	return false
}

func (x *TechnicalVideoDetails) GetClipDetails() []*VideoClipDetails {
	if x != nil {
		return x.ClipDetails
	}
	return nil
}

func (x *TechnicalVideoDetails) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TechnicalVideoDetails) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *TechnicalVideoDetails) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type Text struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceReference"
	ResourceReference string `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3" json:"resource_reference,omitempty" xml:"ResourceReference"`
	// @gotags: xml:"Type"
	Type *TextType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"ResourceId"
	ResourceId []*TextId `protobuf:"bytes,3,rep,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"WorkId"
	WorkId []*MusicalWorkId `protobuf:"bytes,4,rep,name=work_id,json=workId,proto3" json:"work_id,omitempty" xml:"WorkId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,5,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,6,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,7,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,8,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"VersionType"
	VersionType []*VersionType `protobuf:"bytes,9,rep,name=version_type,json=versionType,proto3" json:"version_type,omitempty" xml:"VersionType"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithOriginalLanguage `protobuf:"bytes,10,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*DisplayArtist `protobuf:"bytes,11,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"Contributor"
	Contributor []*Contributor `protobuf:"bytes,12,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	// @gotags: xml:"ResourceRightsController"
	ResourceRightsController []*ResourceRightsController `protobuf:"bytes,13,rep,name=resource_rights_controller,json=resourceRightsController,proto3" json:"resource_rights_controller,omitempty" xml:"ResourceRightsController"`
	// @gotags: xml:"WorkRightsController"
	WorkRightsController []*WorkRightsController `protobuf:"bytes,14,rep,name=work_rights_controller,json=workRightsController,proto3" json:"work_rights_controller,omitempty" xml:"WorkRightsController"`
	// @gotags: xml:"CLine"
	CLine []*CLine `protobuf:"bytes,15,rep,name=c_line,json=cLine,proto3" json:"c_line,omitempty" xml:"CLine"`
	// @gotags: xml:"CourtesyLine"
	CourtesyLine []*CourtesyLine `protobuf:"bytes,16,rep,name=courtesy_line,json=courtesyLine,proto3" json:"courtesy_line,omitempty" xml:"CourtesyLine"`
	// @gotags: xml:"CreationDate"
	CreationDate *EventDateWithoutFlags `protobuf:"bytes,17,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty" xml:"CreationDate"`
	// @gotags: xml:"FirstPublicationDate"
	FirstPublicationDate []*FulfillmentDate `protobuf:"bytes,18,rep,name=first_publication_date,json=firstPublicationDate,proto3" json:"first_publication_date,omitempty" xml:"FirstPublicationDate"`
	// @gotags: xml:"ParentalWarningType"
	ParentalWarningType []*ParentalWarningTypeWithStandard `protobuf:"bytes,19,rep,name=parental_warning_type,json=parentalWarningType,proto3" json:"parental_warning_type,omitempty" xml:"ParentalWarningType"`
	// @gotags: xml:"RelatedRelease"
	RelatedRelease []*RelatedRelease `protobuf:"bytes,20,rep,name=related_release,json=relatedRelease,proto3" json:"related_release,omitempty" xml:"RelatedRelease"`
	// @gotags: xml:"RelatedResource"
	RelatedResource []*RelatedResource `protobuf:"bytes,21,rep,name=related_resource,json=relatedResource,proto3" json:"related_resource,omitempty" xml:"RelatedResource"`
	// @gotags: xml:"ContainsAI"
	ContainsAI avs.ContainsAI `protobuf:"varint,22,opt,name=contains_a_i,json=containsAI,proto3,enum=ddex.avs.ContainsAI" json:"contains_a_i,omitempty" xml:"ContainsAI"`
	// @gotags: xml:"ContainsHiddenContent"
	ContainsHiddenContent bool `protobuf:"varint,23,opt,name=contains_hidden_content,json=containsHiddenContent,proto3" json:"contains_hidden_content,omitempty" xml:"ContainsHiddenContent"`
	// @gotags: xml:"ResourceContainedResourceReferenceList"
	ResourceContainedResourceReferenceList *ResourceContainedResourceReferenceList `protobuf:"bytes,24,opt,name=resource_contained_resource_reference_list,json=resourceContainedResourceReferenceList,proto3" json:"resource_contained_resource_reference_list,omitempty" xml:"ResourceContainedResourceReferenceList"`
	// @gotags: xml:"TechnicalDetails"
	TechnicalDetails []*TechnicalTextDetails `protobuf:"bytes,25,rep,name=technical_details,json=technicalDetails,proto3" json:"technical_details,omitempty" xml:"TechnicalDetails"`
	// @gotags: xml:"LanguageOfText"
	LanguageOfText []*Language `protobuf:"bytes,26,rep,name=language_of_text,json=languageOfText,proto3" json:"language_of_text,omitempty" xml:"LanguageOfText"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,27,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"IsSupplemental,attr"
	IsSupplemental bool `protobuf:"varint,28,opt,name=is_supplemental,json=isSupplemental,proto3" json:"is_supplemental,omitempty" xml:"IsSupplemental,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Text) Reset() {
	*x = Text{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{85}
}

func (x *Text) GetResourceReference() string {
	if x != nil {
		return x.ResourceReference
	}
	return ""
}

func (x *Text) GetType() *TextType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Text) GetResourceId() []*TextId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *Text) GetWorkId() []*MusicalWorkId {
	if x != nil {
		return x.WorkId
	}
	return nil
}

func (x *Text) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *Text) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *Text) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *Text) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *Text) GetVersionType() []*VersionType {
	if x != nil {
		return x.VersionType
	}
	return nil
}

func (x *Text) GetDisplayArtistName() []*DisplayArtistNameWithOriginalLanguage {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Text) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *Text) GetContributor() []*Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

func (x *Text) GetResourceRightsController() []*ResourceRightsController {
	if x != nil {
		return x.ResourceRightsController
	}
	return nil
}

func (x *Text) GetWorkRightsController() []*WorkRightsController {
	if x != nil {
		return x.WorkRightsController
	}
	return nil
}

func (x *Text) GetCLine() []*CLine {
	if x != nil {
		return x.CLine
	}
	return nil
}

func (x *Text) GetCourtesyLine() []*CourtesyLine {
	if x != nil {
		return x.CourtesyLine
	}
	return nil
}

func (x *Text) GetCreationDate() *EventDateWithoutFlags {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *Text) GetFirstPublicationDate() []*FulfillmentDate {
	if x != nil {
		return x.FirstPublicationDate
	}
	return nil
}

func (x *Text) GetParentalWarningType() []*ParentalWarningTypeWithStandard {
	if x != nil {
		return x.ParentalWarningType
	}
	return nil
}

func (x *Text) GetRelatedRelease() []*RelatedRelease {
	if x != nil {
		return x.RelatedRelease
	}
	return nil
}

func (x *Text) GetRelatedResource() []*RelatedResource {
	if x != nil {
		return x.RelatedResource
	}
	return nil
}

func (x *Text) GetContainsAI() avs.ContainsAI {
	if x != nil {
		return x.ContainsAI
	}
	return avs.ContainsAI(0)
}

func (x *Text) GetContainsHiddenContent() bool {
	if x != nil {
		return x.ContainsHiddenContent
	}
	return false
}

func (x *Text) GetResourceContainedResourceReferenceList() *ResourceContainedResourceReferenceList {
	if x != nil {
		return x.ResourceContainedResourceReferenceList
	}
	return nil
}

func (x *Text) GetTechnicalDetails() []*TechnicalTextDetails {
	if x != nil {
		return x.TechnicalDetails
	}
	return nil
}

func (x *Text) GetLanguageOfText() []*Language {
	if x != nil {
		return x.LanguageOfText
	}
	return nil
}

func (x *Text) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *Text) GetIsSupplemental() bool {
	if x != nil {
		return x.IsSupplemental
	}
	return false
}

type Timing struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"StartPoint"
	StartPoint string `protobuf:"bytes,1,opt,name=start_point,json=startPoint,proto3" json:"start_point,omitempty" xml:"StartPoint"`
	// @gotags: xml:"EndPoint"
	EndPoint string `protobuf:"bytes,2,opt,name=end_point,json=endPoint,proto3" json:"end_point,omitempty" xml:"EndPoint"`
	// @gotags: xml:"DurationUsed"
	DurationUsed  []string `protobuf:"bytes,3,rep,name=duration_used,json=durationUsed,proto3" json:"duration_used,omitempty" xml:"DurationUsed"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timing) Reset() {
	*x = Timing{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timing) ProtoMessage() {}

func (x *Timing) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timing.ProtoReflect.Descriptor instead.
func (*Timing) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{86}
}

func (x *Timing) GetStartPoint() string {
	if x != nil {
		return x.StartPoint
	}
	return ""
}

func (x *Timing) GetEndPoint() string {
	if x != nil {
		return x.EndPoint
	}
	return ""
}

func (x *Timing) GetDurationUsed() []string {
	if x != nil {
		return x.DurationUsed
	}
	return nil
}

type Title struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TitleText"
	TitleText string `protobuf:"bytes,1,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty" xml:"TitleText"`
	// @gotags: xml:"SubTitle"
	SubTitle string `protobuf:"bytes,2,opt,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty" xml:"SubTitle"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,3,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"TitleType,attr"
	TitleType     avs.AdditionalTitleType `protobuf:"varint,4,opt,name=title_type,json=titleType,proto3,enum=ddex.avs.AdditionalTitleType" json:"title_type,omitempty" xml:"TitleType,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Title) Reset() {
	*x = Title{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Title) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Title) ProtoMessage() {}

func (x *Title) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Title.ProtoReflect.Descriptor instead.
func (*Title) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{87}
}

func (x *Title) GetTitleText() string {
	if x != nil {
		return x.TitleText
	}
	return ""
}

func (x *Title) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *Title) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *Title) GetTitleType() avs.AdditionalTitleType {
	if x != nil {
		return x.TitleType
	}
	return avs.AdditionalTitleType(0)
}

type TrackRelease struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ReleaseReference"
	ReleaseReference string `protobuf:"bytes,1,opt,name=release_reference,json=releaseReference,proto3" json:"release_reference,omitempty" xml:"ReleaseReference"`
	// @gotags: xml:"ReleaseId"
	ReleaseId *ReleaseId `protobuf:"bytes,2,opt,name=release_id,json=releaseId,proto3" json:"release_id,omitempty" xml:"ReleaseId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,3,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,4,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,5,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,6,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"ReleaseResourceReference"
	ReleaseResourceReference string `protobuf:"bytes,7,opt,name=release_resource_reference,json=releaseResourceReference,proto3" json:"release_resource_reference,omitempty" xml:"ReleaseResourceReference"`
	// @gotags: xml:"LinkedReleaseResourceReference"
	LinkedReleaseResourceReference []*LinkedReleaseResourceReference `protobuf:"bytes,8,rep,name=linked_release_resource_reference,json=linkedReleaseResourceReference,proto3" json:"linked_release_resource_reference,omitempty" xml:"LinkedReleaseResourceReference"`
	// @gotags: xml:"ReleaseLabelReference"
	ReleaseLabelReference []*ReleaseLabelReferenceWithParty `protobuf:"bytes,9,rep,name=release_label_reference,json=releaseLabelReference,proto3" json:"release_label_reference,omitempty" xml:"ReleaseLabelReference"`
	// @gotags: xml:"DisplayGenre"
	DisplayGenre []*GenreWithTerritory `protobuf:"bytes,10,rep,name=display_genre,json=displayGenre,proto3" json:"display_genre,omitempty" xml:"DisplayGenre"`
	// @gotags: xml:"ReleaseVisibilityReference"
	ReleaseVisibilityReference []string `protobuf:"bytes,11,rep,name=release_visibility_reference,json=releaseVisibilityReference,proto3" json:"release_visibility_reference,omitempty" xml:"ReleaseVisibilityReference"`
	// @gotags: xml:"RelatedRelease"
	RelatedRelease []*RelatedRelease `protobuf:"bytes,12,rep,name=related_release,json=relatedRelease,proto3" json:"related_release,omitempty" xml:"RelatedRelease"`
	// @gotags: xml:"RelatedResource"
	RelatedResource []*RelatedResource `protobuf:"bytes,13,rep,name=related_resource,json=relatedResource,proto3" json:"related_resource,omitempty" xml:"RelatedResource"`
	// @gotags: xml:"TargetURL"
	TargetURL string `protobuf:"bytes,14,opt,name=target_u_r_l,json=targetURL,proto3" json:"target_u_r_l,omitempty" xml:"TargetURL"`
	// @gotags: xml:"Keywords"
	Keywords []*KeywordsWithTerritory `protobuf:"bytes,15,rep,name=keywords,proto3" json:"keywords,omitempty" xml:"Keywords"`
	// @gotags: xml:"Synopsis"
	Synopsis []*SynopsisWithTerritory `protobuf:"bytes,16,rep,name=synopsis,proto3" json:"synopsis,omitempty" xml:"Synopsis"`
	// @gotags: xml:"MarketingComment"
	MarketingComment []*MarketingComment `protobuf:"bytes,17,rep,name=marketing_comment,json=marketingComment,proto3" json:"marketing_comment,omitempty" xml:"MarketingComment"`
	// @gotags: xml:"IsMainRelease,attr"
	IsMainRelease bool `protobuf:"varint,18,opt,name=is_main_release,json=isMainRelease,proto3" json:"is_main_release,omitempty" xml:"IsMainRelease,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrackRelease) Reset() {
	*x = TrackRelease{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackRelease) ProtoMessage() {}

func (x *TrackRelease) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackRelease.ProtoReflect.Descriptor instead.
func (*TrackRelease) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{88}
}

func (x *TrackRelease) GetReleaseReference() string {
	if x != nil {
		return x.ReleaseReference
	}
	return ""
}

func (x *TrackRelease) GetReleaseId() *ReleaseId {
	if x != nil {
		return x.ReleaseId
	}
	return nil
}

func (x *TrackRelease) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *TrackRelease) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *TrackRelease) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *TrackRelease) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *TrackRelease) GetReleaseResourceReference() string {
	if x != nil {
		return x.ReleaseResourceReference
	}
	return ""
}

func (x *TrackRelease) GetLinkedReleaseResourceReference() []*LinkedReleaseResourceReference {
	if x != nil {
		return x.LinkedReleaseResourceReference
	}
	return nil
}

func (x *TrackRelease) GetReleaseLabelReference() []*ReleaseLabelReferenceWithParty {
	if x != nil {
		return x.ReleaseLabelReference
	}
	return nil
}

func (x *TrackRelease) GetDisplayGenre() []*GenreWithTerritory {
	if x != nil {
		return x.DisplayGenre
	}
	return nil
}

func (x *TrackRelease) GetReleaseVisibilityReference() []string {
	if x != nil {
		return x.ReleaseVisibilityReference
	}
	return nil
}

func (x *TrackRelease) GetRelatedRelease() []*RelatedRelease {
	if x != nil {
		return x.RelatedRelease
	}
	return nil
}

func (x *TrackRelease) GetRelatedResource() []*RelatedResource {
	if x != nil {
		return x.RelatedResource
	}
	return nil
}

func (x *TrackRelease) GetTargetURL() string {
	if x != nil {
		return x.TargetURL
	}
	return ""
}

func (x *TrackRelease) GetKeywords() []*KeywordsWithTerritory {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *TrackRelease) GetSynopsis() []*SynopsisWithTerritory {
	if x != nil {
		return x.Synopsis
	}
	return nil
}

func (x *TrackRelease) GetMarketingComment() []*MarketingComment {
	if x != nil {
		return x.MarketingComment
	}
	return nil
}

func (x *TrackRelease) GetIsMainRelease() bool {
	if x != nil {
		return x.IsMainRelease
	}
	return false
}

type TrackReleaseVisibility struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"VisibilityReference"
	VisibilityReference string `protobuf:"bytes,1,opt,name=visibility_reference,json=visibilityReference,proto3" json:"visibility_reference,omitempty" xml:"VisibilityReference"`
	// @gotags: xml:"TrackListingPreviewStartDateTime"
	TrackListingPreviewStartDateTime string `protobuf:"bytes,2,opt,name=track_listing_preview_start_date_time,json=trackListingPreviewStartDateTime,proto3" json:"track_listing_preview_start_date_time,omitempty" xml:"TrackListingPreviewStartDateTime"`
	// @gotags: xml:"ClipPreviewStartDateTime"
	ClipPreviewStartDateTime string `protobuf:"bytes,3,opt,name=clip_preview_start_date_time,json=clipPreviewStartDateTime,proto3" json:"clip_preview_start_date_time,omitempty" xml:"ClipPreviewStartDateTime"`
	// @gotags: xml:"DoNotDisplayDates,attr"
	DoNotDisplayDates bool `protobuf:"varint,4,opt,name=do_not_display_dates,json=doNotDisplayDates,proto3" json:"do_not_display_dates,omitempty" xml:"DoNotDisplayDates,attr"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TrackReleaseVisibility) Reset() {
	*x = TrackReleaseVisibility{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrackReleaseVisibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackReleaseVisibility) ProtoMessage() {}

func (x *TrackReleaseVisibility) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackReleaseVisibility.ProtoReflect.Descriptor instead.
func (*TrackReleaseVisibility) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{89}
}

func (x *TrackReleaseVisibility) GetVisibilityReference() string {
	if x != nil {
		return x.VisibilityReference
	}
	return ""
}

func (x *TrackReleaseVisibility) GetTrackListingPreviewStartDateTime() string {
	if x != nil {
		return x.TrackListingPreviewStartDateTime
	}
	return ""
}

func (x *TrackReleaseVisibility) GetClipPreviewStartDateTime() string {
	if x != nil {
		return x.ClipPreviewStartDateTime
	}
	return ""
}

func (x *TrackReleaseVisibility) GetDoNotDisplayDates() bool {
	if x != nil {
		return x.DoNotDisplayDates
	}
	return false
}

type UseType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UseType) Reset() {
	*x = UseType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UseType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseType) ProtoMessage() {}

func (x *UseType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseType.ProtoReflect.Descriptor instead.
func (*UseType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{90}
}

func (x *UseType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UseType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UseType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type UserInterfaceType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UserInterfaceType) Reset() {
	*x = UserInterfaceType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInterfaceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInterfaceType) ProtoMessage() {}

func (x *UserInterfaceType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInterfaceType.ProtoReflect.Descriptor instead.
func (*UserInterfaceType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{91}
}

func (x *UserInterfaceType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *UserInterfaceType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UserInterfaceType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Video struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceReference"
	ResourceReference string `protobuf:"bytes,1,opt,name=resource_reference,json=resourceReference,proto3" json:"resource_reference,omitempty" xml:"ResourceReference"`
	// @gotags: xml:"Type"
	Type *VideoType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"VideoEdition"
	VideoEdition []*VideoEdition `protobuf:"bytes,3,rep,name=video_edition,json=videoEdition,proto3" json:"video_edition,omitempty" xml:"VideoEdition"`
	// @gotags: xml:"RecordingFormat"
	RecordingFormat []*RecordingFormat `protobuf:"bytes,4,rep,name=recording_format,json=recordingFormat,proto3" json:"recording_format,omitempty" xml:"RecordingFormat"`
	// @gotags: xml:"WorkId"
	WorkId []*MusicalWorkId `protobuf:"bytes,5,rep,name=work_id,json=workId,proto3" json:"work_id,omitempty" xml:"WorkId"`
	// @gotags: xml:"DisplayTitleText"
	DisplayTitleText []*DisplayTitleText `protobuf:"bytes,6,rep,name=display_title_text,json=displayTitleText,proto3" json:"display_title_text,omitempty" xml:"DisplayTitleText"`
	// @gotags: xml:"DisplayTitle"
	DisplayTitle []*DisplayTitle `protobuf:"bytes,7,rep,name=display_title,json=displayTitle,proto3" json:"display_title,omitempty" xml:"DisplayTitle"`
	// @gotags: xml:"FormalTitle"
	FormalTitle []*DisplayTitle `protobuf:"bytes,8,rep,name=formal_title,json=formalTitle,proto3" json:"formal_title,omitempty" xml:"FormalTitle"`
	// @gotags: xml:"GroupingTitle"
	GroupingTitle []*DisplayTitle `protobuf:"bytes,9,rep,name=grouping_title,json=groupingTitle,proto3" json:"grouping_title,omitempty" xml:"GroupingTitle"`
	// @gotags: xml:"VersionType"
	VersionType []*VersionType `protobuf:"bytes,10,rep,name=version_type,json=versionType,proto3" json:"version_type,omitempty" xml:"VersionType"`
	// @gotags: xml:"DisplayArtistName"
	DisplayArtistName []*DisplayArtistNameWithOriginalLanguage `protobuf:"bytes,11,rep,name=display_artist_name,json=displayArtistName,proto3" json:"display_artist_name,omitempty" xml:"DisplayArtistName"`
	// @gotags: xml:"DisplayArtist"
	DisplayArtist []*DisplayArtist `protobuf:"bytes,12,rep,name=display_artist,json=displayArtist,proto3" json:"display_artist,omitempty" xml:"DisplayArtist"`
	// @gotags: xml:"Contributor"
	Contributor []*Contributor `protobuf:"bytes,13,rep,name=contributor,proto3" json:"contributor,omitempty" xml:"Contributor"`
	// @gotags: xml:"Character"
	Character []*Character `protobuf:"bytes,14,rep,name=character,proto3" json:"character,omitempty" xml:"Character"`
	// @gotags: xml:"ResourceRightsController"
	ResourceRightsController []*ResourceRightsController `protobuf:"bytes,15,rep,name=resource_rights_controller,json=resourceRightsController,proto3" json:"resource_rights_controller,omitempty" xml:"ResourceRightsController"`
	// @gotags: xml:"WorkRightsController"
	WorkRightsController []*WorkRightsController `protobuf:"bytes,16,rep,name=work_rights_controller,json=workRightsController,proto3" json:"work_rights_controller,omitempty" xml:"WorkRightsController"`
	// @gotags: xml:"CourtesyLine"
	CourtesyLine []*CourtesyLine `protobuf:"bytes,17,rep,name=courtesy_line,json=courtesyLine,proto3" json:"courtesy_line,omitempty" xml:"CourtesyLine"`
	// @gotags: xml:"Duration"
	Duration string `protobuf:"bytes,18,opt,name=duration,proto3" json:"duration,omitempty" xml:"Duration"`
	// @gotags: xml:"CreationDate"
	CreationDate *EventDateWithoutFlags `protobuf:"bytes,19,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty" xml:"CreationDate"`
	// @gotags: xml:"MasteredDate"
	MasteredDate *EventDateWithoutFlags `protobuf:"bytes,20,opt,name=mastered_date,json=masteredDate,proto3" json:"mastered_date,omitempty" xml:"MasteredDate"`
	// @gotags: xml:"RemasteredDate"
	RemasteredDate []*EventDateWithoutFlags `protobuf:"bytes,21,rep,name=remastered_date,json=remasteredDate,proto3" json:"remastered_date,omitempty" xml:"RemasteredDate"`
	// @gotags: xml:"FirstPublicationDate"
	FirstPublicationDate []*FulfillmentDate `protobuf:"bytes,22,rep,name=first_publication_date,json=firstPublicationDate,proto3" json:"first_publication_date,omitempty" xml:"FirstPublicationDate"`
	// @gotags: xml:"ParentalWarningType"
	ParentalWarningType []*ParentalWarningTypeWithStandard `protobuf:"bytes,23,rep,name=parental_warning_type,json=parentalWarningType,proto3" json:"parental_warning_type,omitempty" xml:"ParentalWarningType"`
	// @gotags: xml:"AvRating"
	AvRating []*AvRating `protobuf:"bytes,24,rep,name=av_rating,json=avRating,proto3" json:"av_rating,omitempty" xml:"AvRating"`
	// @gotags: xml:"RelatedRelease"
	RelatedRelease []*RelatedRelease `protobuf:"bytes,25,rep,name=related_release,json=relatedRelease,proto3" json:"related_release,omitempty" xml:"RelatedRelease"`
	// @gotags: xml:"RelatedResource"
	RelatedResource []*RelatedResource `protobuf:"bytes,26,rep,name=related_resource,json=relatedResource,proto3" json:"related_resource,omitempty" xml:"RelatedResource"`
	// @gotags: xml:"CompositeMusicalWorkType"
	CompositeMusicalWorkType avs.CompositeMusicalWorkType `protobuf:"varint,27,opt,name=composite_musical_work_type,json=compositeMusicalWorkType,proto3,enum=ddex.avs.CompositeMusicalWorkType" json:"composite_musical_work_type,omitempty" xml:"CompositeMusicalWorkType"`
	// @gotags: xml:"ContainsAI"
	ContainsAI avs.ContainsAI `protobuf:"varint,28,opt,name=contains_a_i,json=containsAI,proto3,enum=ddex.avs.ContainsAI" json:"contains_a_i,omitempty" xml:"ContainsAI"`
	// @gotags: xml:"IsCover"
	IsCover bool `protobuf:"varint,29,opt,name=is_cover,json=isCover,proto3" json:"is_cover,omitempty" xml:"IsCover"`
	// @gotags: xml:"HasVocalPerformance"
	HasVocalPerformance bool `protobuf:"varint,30,opt,name=has_vocal_performance,json=hasVocalPerformance,proto3" json:"has_vocal_performance,omitempty" xml:"HasVocalPerformance"`
	// @gotags: xml:"HasForegroundVocalPerformance"
	HasForegroundVocalPerformance bool `protobuf:"varint,31,opt,name=has_foreground_vocal_performance,json=hasForegroundVocalPerformance,proto3" json:"has_foreground_vocal_performance,omitempty" xml:"HasForegroundVocalPerformance"`
	// @gotags: xml:"IsInstrumental"
	IsInstrumental bool `protobuf:"varint,32,opt,name=is_instrumental,json=isInstrumental,proto3" json:"is_instrumental,omitempty" xml:"IsInstrumental"`
	// @gotags: xml:"ContainsHiddenContent"
	ContainsHiddenContent bool `protobuf:"varint,33,opt,name=contains_hidden_content,json=containsHiddenContent,proto3" json:"contains_hidden_content,omitempty" xml:"ContainsHiddenContent"`
	// @gotags: xml:"IsRemastered"
	IsRemastered bool `protobuf:"varint,34,opt,name=is_remastered,json=isRemastered,proto3" json:"is_remastered,omitempty" xml:"IsRemastered"`
	// @gotags: xml:"DisplayCredits"
	DisplayCredits []*DisplayCredits `protobuf:"bytes,35,rep,name=display_credits,json=displayCredits,proto3" json:"display_credits,omitempty" xml:"DisplayCredits"`
	// @gotags: xml:"LanguageOfPerformance"
	LanguageOfPerformance []*Language `protobuf:"bytes,36,rep,name=language_of_performance,json=languageOfPerformance,proto3" json:"language_of_performance,omitempty" xml:"LanguageOfPerformance"`
	// @gotags: xml:"LanguageOfDubbing"
	LanguageOfDubbing []string `protobuf:"bytes,37,rep,name=language_of_dubbing,json=languageOfDubbing,proto3" json:"language_of_dubbing,omitempty" xml:"LanguageOfDubbing"`
	// @gotags: xml:"SubTitleLanguage"
	SubTitleLanguage []string `protobuf:"bytes,38,rep,name=sub_title_language,json=subTitleLanguage,proto3" json:"sub_title_language,omitempty" xml:"SubTitleLanguage"`
	// @gotags: xml:"ResourceContainedResourceReferenceList"
	ResourceContainedResourceReferenceList *ResourceContainedResourceReferenceList `protobuf:"bytes,39,opt,name=resource_contained_resource_reference_list,json=resourceContainedResourceReferenceList,proto3" json:"resource_contained_resource_reference_list,omitempty" xml:"ResourceContainedResourceReferenceList"`
	// @gotags: xml:"Raga"
	Raga []string `protobuf:"bytes,40,rep,name=raga,proto3" json:"raga,omitempty" xml:"Raga"`
	// @gotags: xml:"Tala"
	Tala []string `protobuf:"bytes,41,rep,name=tala,proto3" json:"tala,omitempty" xml:"Tala"`
	// @gotags: xml:"Deity"
	Deity []string `protobuf:"bytes,42,rep,name=deity,proto3" json:"deity,omitempty" xml:"Deity"`
	// @gotags: xml:"VideoChapterReference"
	VideoChapterReference []string `protobuf:"bytes,43,rep,name=video_chapter_reference,json=videoChapterReference,proto3" json:"video_chapter_reference,omitempty" xml:"VideoChapterReference"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,44,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"IsSupplemental,attr"
	IsSupplemental bool `protobuf:"varint,45,opt,name=is_supplemental,json=isSupplemental,proto3" json:"is_supplemental,omitempty" xml:"IsSupplemental,attr"`
	// @gotags: xml:"ApplyClassicalProfileVariant,attr"
	ApplyClassicalProfileVariant bool `protobuf:"varint,46,opt,name=apply_classical_profile_variant,json=applyClassicalProfileVariant,proto3" json:"apply_classical_profile_variant,omitempty" xml:"ApplyClassicalProfileVariant,attr"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *Video) Reset() {
	*x = Video{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{92}
}

func (x *Video) GetResourceReference() string {
	if x != nil {
		return x.ResourceReference
	}
	return ""
}

func (x *Video) GetType() *VideoType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Video) GetVideoEdition() []*VideoEdition {
	if x != nil {
		return x.VideoEdition
	}
	return nil
}

func (x *Video) GetRecordingFormat() []*RecordingFormat {
	if x != nil {
		return x.RecordingFormat
	}
	return nil
}

func (x *Video) GetWorkId() []*MusicalWorkId {
	if x != nil {
		return x.WorkId
	}
	return nil
}

func (x *Video) GetDisplayTitleText() []*DisplayTitleText {
	if x != nil {
		return x.DisplayTitleText
	}
	return nil
}

func (x *Video) GetDisplayTitle() []*DisplayTitle {
	if x != nil {
		return x.DisplayTitle
	}
	return nil
}

func (x *Video) GetFormalTitle() []*DisplayTitle {
	if x != nil {
		return x.FormalTitle
	}
	return nil
}

func (x *Video) GetGroupingTitle() []*DisplayTitle {
	if x != nil {
		return x.GroupingTitle
	}
	return nil
}

func (x *Video) GetVersionType() []*VersionType {
	if x != nil {
		return x.VersionType
	}
	return nil
}

func (x *Video) GetDisplayArtistName() []*DisplayArtistNameWithOriginalLanguage {
	if x != nil {
		return x.DisplayArtistName
	}
	return nil
}

func (x *Video) GetDisplayArtist() []*DisplayArtist {
	if x != nil {
		return x.DisplayArtist
	}
	return nil
}

func (x *Video) GetContributor() []*Contributor {
	if x != nil {
		return x.Contributor
	}
	return nil
}

func (x *Video) GetCharacter() []*Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *Video) GetResourceRightsController() []*ResourceRightsController {
	if x != nil {
		return x.ResourceRightsController
	}
	return nil
}

func (x *Video) GetWorkRightsController() []*WorkRightsController {
	if x != nil {
		return x.WorkRightsController
	}
	return nil
}

func (x *Video) GetCourtesyLine() []*CourtesyLine {
	if x != nil {
		return x.CourtesyLine
	}
	return nil
}

func (x *Video) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *Video) GetCreationDate() *EventDateWithoutFlags {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *Video) GetMasteredDate() *EventDateWithoutFlags {
	if x != nil {
		return x.MasteredDate
	}
	return nil
}

func (x *Video) GetRemasteredDate() []*EventDateWithoutFlags {
	if x != nil {
		return x.RemasteredDate
	}
	return nil
}

func (x *Video) GetFirstPublicationDate() []*FulfillmentDate {
	if x != nil {
		return x.FirstPublicationDate
	}
	return nil
}

func (x *Video) GetParentalWarningType() []*ParentalWarningTypeWithStandard {
	if x != nil {
		return x.ParentalWarningType
	}
	return nil
}

func (x *Video) GetAvRating() []*AvRating {
	if x != nil {
		return x.AvRating
	}
	return nil
}

func (x *Video) GetRelatedRelease() []*RelatedRelease {
	if x != nil {
		return x.RelatedRelease
	}
	return nil
}

func (x *Video) GetRelatedResource() []*RelatedResource {
	if x != nil {
		return x.RelatedResource
	}
	return nil
}

func (x *Video) GetCompositeMusicalWorkType() avs.CompositeMusicalWorkType {
	if x != nil {
		return x.CompositeMusicalWorkType
	}
	return avs.CompositeMusicalWorkType(0)
}

func (x *Video) GetContainsAI() avs.ContainsAI {
	if x != nil {
		return x.ContainsAI
	}
	return avs.ContainsAI(0)
}

func (x *Video) GetIsCover() bool {
	if x != nil {
		return x.IsCover
	}
	return false
}

func (x *Video) GetHasVocalPerformance() bool {
	if x != nil {
		return x.HasVocalPerformance
	}
	return false
}

func (x *Video) GetHasForegroundVocalPerformance() bool {
	if x != nil {
		return x.HasForegroundVocalPerformance
	}
	return false
}

func (x *Video) GetIsInstrumental() bool {
	if x != nil {
		return x.IsInstrumental
	}
	return false
}

func (x *Video) GetContainsHiddenContent() bool {
	if x != nil {
		return x.ContainsHiddenContent
	}
	return false
}

func (x *Video) GetIsRemastered() bool {
	if x != nil {
		return x.IsRemastered
	}
	return false
}

func (x *Video) GetDisplayCredits() []*DisplayCredits {
	if x != nil {
		return x.DisplayCredits
	}
	return nil
}

func (x *Video) GetLanguageOfPerformance() []*Language {
	if x != nil {
		return x.LanguageOfPerformance
	}
	return nil
}

func (x *Video) GetLanguageOfDubbing() []string {
	if x != nil {
		return x.LanguageOfDubbing
	}
	return nil
}

func (x *Video) GetSubTitleLanguage() []string {
	if x != nil {
		return x.SubTitleLanguage
	}
	return nil
}

func (x *Video) GetResourceContainedResourceReferenceList() *ResourceContainedResourceReferenceList {
	if x != nil {
		return x.ResourceContainedResourceReferenceList
	}
	return nil
}

func (x *Video) GetRaga() []string {
	if x != nil {
		return x.Raga
	}
	return nil
}

func (x *Video) GetTala() []string {
	if x != nil {
		return x.Tala
	}
	return nil
}

func (x *Video) GetDeity() []string {
	if x != nil {
		return x.Deity
	}
	return nil
}

func (x *Video) GetVideoChapterReference() []string {
	if x != nil {
		return x.VideoChapterReference
	}
	return nil
}

func (x *Video) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *Video) GetIsSupplemental() bool {
	if x != nil {
		return x.IsSupplemental
	}
	return false
}

func (x *Video) GetApplyClassicalProfileVariant() bool {
	if x != nil {
		return x.ApplyClassicalProfileVariant
	}
	return false
}

type VideoClipDetails struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TechnicalResourceDetailsReference"
	TechnicalResourceDetailsReference string `protobuf:"bytes,1,opt,name=technical_resource_details_reference,json=technicalResourceDetailsReference,proto3" json:"technical_resource_details_reference,omitempty" xml:"TechnicalResourceDetailsReference"`
	// @gotags: xml:"ClipType"
	ClipType *ClipType `protobuf:"bytes,2,opt,name=clip_type,json=clipType,proto3" json:"clip_type,omitempty" xml:"ClipType"`
	// @gotags: xml:"Timing"
	Timing []*Timing `protobuf:"bytes,3,rep,name=timing,proto3" json:"timing,omitempty" xml:"Timing"`
	// @gotags: xml:"TopLeftCorner"
	TopLeftCorner string `protobuf:"bytes,4,opt,name=top_left_corner,json=topLeftCorner,proto3" json:"top_left_corner,omitempty" xml:"TopLeftCorner"`
	// @gotags: xml:"BottomRightCorner"
	BottomRightCorner string `protobuf:"bytes,5,opt,name=bottom_right_corner,json=bottomRightCorner,proto3" json:"bottom_right_corner,omitempty" xml:"BottomRightCorner"`
	// @gotags: xml:"ExpressionType"
	ExpressionType avs.ExpressionType `protobuf:"varint,6,opt,name=expression_type,json=expressionType,proto3,enum=ddex.avs.ExpressionType" json:"expression_type,omitempty" xml:"ExpressionType"`
	// @gotags: xml:"DeliveryFile"
	DeliveryFile  []*VideoDeliveryFile `protobuf:"bytes,7,rep,name=delivery_file,json=deliveryFile,proto3" json:"delivery_file,omitempty" xml:"DeliveryFile"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoClipDetails) Reset() {
	*x = VideoClipDetails{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoClipDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoClipDetails) ProtoMessage() {}

func (x *VideoClipDetails) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoClipDetails.ProtoReflect.Descriptor instead.
func (*VideoClipDetails) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{93}
}

func (x *VideoClipDetails) GetTechnicalResourceDetailsReference() string {
	if x != nil {
		return x.TechnicalResourceDetailsReference
	}
	return ""
}

func (x *VideoClipDetails) GetClipType() *ClipType {
	if x != nil {
		return x.ClipType
	}
	return nil
}

func (x *VideoClipDetails) GetTiming() []*Timing {
	if x != nil {
		return x.Timing
	}
	return nil
}

func (x *VideoClipDetails) GetTopLeftCorner() string {
	if x != nil {
		return x.TopLeftCorner
	}
	return ""
}

func (x *VideoClipDetails) GetBottomRightCorner() string {
	if x != nil {
		return x.BottomRightCorner
	}
	return ""
}

func (x *VideoClipDetails) GetExpressionType() avs.ExpressionType {
	if x != nil {
		return x.ExpressionType
	}
	return avs.ExpressionType(0)
}

func (x *VideoClipDetails) GetDeliveryFile() []*VideoDeliveryFile {
	if x != nil {
		return x.DeliveryFile
	}
	return nil
}

type VideoDeliveryFile struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Type"
	Type avs.DeliveryFileType `protobuf:"varint,1,opt,name=type,proto3,enum=ddex.avs.DeliveryFileType" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"ContainerFormat"
	ContainerFormat *ContainerFormat `protobuf:"bytes,2,opt,name=container_format,json=containerFormat,proto3" json:"container_format,omitempty" xml:"ContainerFormat"`
	// @gotags: xml:"VideoCodecType"
	VideoCodecType *VideoCodecType `protobuf:"bytes,3,opt,name=video_codec_type,json=videoCodecType,proto3" json:"video_codec_type,omitempty" xml:"VideoCodecType"`
	// @gotags: xml:"VideoBitRate"
	VideoBitRate *BitRate `protobuf:"bytes,4,opt,name=video_bit_rate,json=videoBitRate,proto3" json:"video_bit_rate,omitempty" xml:"VideoBitRate"`
	// @gotags: xml:"FrameRate"
	FrameRate *FrameRate `protobuf:"bytes,5,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty" xml:"FrameRate"`
	// @gotags: xml:"ImageHeight"
	ImageHeight *Extent `protobuf:"bytes,6,opt,name=image_height,json=imageHeight,proto3" json:"image_height,omitempty" xml:"ImageHeight"`
	// @gotags: xml:"ImageWidth"
	ImageWidth *Extent `protobuf:"bytes,7,opt,name=image_width,json=imageWidth,proto3" json:"image_width,omitempty" xml:"ImageWidth"`
	// @gotags: xml:"AspectRatio"
	AspectRatio []*AspectRatio `protobuf:"bytes,8,rep,name=aspect_ratio,json=aspectRatio,proto3" json:"aspect_ratio,omitempty" xml:"AspectRatio"`
	// @gotags: xml:"CoreArea"
	CoreArea *CoreArea `protobuf:"bytes,9,opt,name=core_area,json=coreArea,proto3" json:"core_area,omitempty" xml:"CoreArea"`
	// @gotags: xml:"ColorDepth"
	ColorDepth int32 `protobuf:"varint,10,opt,name=color_depth,json=colorDepth,proto3" json:"color_depth,omitempty" xml:"ColorDepth"`
	// @gotags: xml:"VideoDefinitionType"
	VideoDefinitionType *VideoDefinitionType `protobuf:"bytes,11,opt,name=video_definition_type,json=videoDefinitionType,proto3" json:"video_definition_type,omitempty" xml:"VideoDefinitionType"`
	// @gotags: xml:"AudioCodecType"
	AudioCodecType *AudioCodecType `protobuf:"bytes,12,opt,name=audio_codec_type,json=audioCodecType,proto3" json:"audio_codec_type,omitempty" xml:"AudioCodecType"`
	// @gotags: xml:"HasImmersiveAudioMetadata"
	HasImmersiveAudioMetadata bool `protobuf:"varint,13,opt,name=has_immersive_audio_metadata,json=hasImmersiveAudioMetadata,proto3" json:"has_immersive_audio_metadata,omitempty" xml:"HasImmersiveAudioMetadata"`
	// @gotags: xml:"ElectroOpticalTransferFunctionType"
	ElectroOpticalTransferFunctionType avs.ElectroOpticalTransferFunctionType `protobuf:"varint,14,opt,name=electro_optical_transfer_function_type,json=electroOpticalTransferFunctionType,proto3,enum=ddex.avs.ElectroOpticalTransferFunctionType" json:"electro_optical_transfer_function_type,omitempty" xml:"ElectroOpticalTransferFunctionType"`
	// @gotags: xml:"PrimaryColorType"
	PrimaryColorType avs.PrimaryColorType `protobuf:"varint,15,opt,name=primary_color_type,json=primaryColorType,proto3,enum=ddex.avs.PrimaryColorType" json:"primary_color_type,omitempty" xml:"PrimaryColorType"`
	// @gotags: xml:"HdrVideoDynamicMetadataType"
	HdrVideoDynamicMetadataType *HdrVideoDynamicMetadataType `protobuf:"bytes,16,opt,name=hdr_video_dynamic_metadata_type,json=hdrVideoDynamicMetadataType,proto3" json:"hdr_video_dynamic_metadata_type,omitempty" xml:"HdrVideoDynamicMetadataType"`
	// @gotags: xml:"HdrVideoStaticMetadataType"
	HdrVideoStaticMetadataType avs.HdrVideoStaticMetadataType `protobuf:"varint,17,opt,name=hdr_video_static_metadata_type,json=hdrVideoStaticMetadataType,proto3,enum=ddex.avs.HdrVideoStaticMetadataType" json:"hdr_video_static_metadata_type,omitempty" xml:"HdrVideoStaticMetadataType"`
	// @gotags: xml:"AudioBitRate"
	AudioBitRate *BitRate `protobuf:"bytes,18,opt,name=audio_bit_rate,json=audioBitRate,proto3" json:"audio_bit_rate,omitempty" xml:"AudioBitRate"`
	// @gotags: xml:"NumberOfAudioChannels"
	NumberOfAudioChannels int32 `protobuf:"varint,19,opt,name=number_of_audio_channels,json=numberOfAudioChannels,proto3" json:"number_of_audio_channels,omitempty" xml:"NumberOfAudioChannels"`
	// @gotags: xml:"NumberOfAudioObjects"
	NumberOfAudioObjects int32 `protobuf:"varint,20,opt,name=number_of_audio_objects,json=numberOfAudioObjects,proto3" json:"number_of_audio_objects,omitempty" xml:"NumberOfAudioObjects"`
	// @gotags: xml:"AudioSamplingRate"
	AudioSamplingRate *SamplingRate `protobuf:"bytes,21,opt,name=audio_sampling_rate,json=audioSamplingRate,proto3" json:"audio_sampling_rate,omitempty" xml:"AudioSamplingRate"`
	// @gotags: xml:"AudioBitsPerSample"
	AudioBitsPerSample int32 `protobuf:"varint,22,opt,name=audio_bits_per_sample,json=audioBitsPerSample,proto3" json:"audio_bits_per_sample,omitempty" xml:"AudioBitsPerSample"`
	// @gotags: xml:"Duration"
	Duration string `protobuf:"bytes,23,opt,name=duration,proto3" json:"duration,omitempty" xml:"Duration"`
	// @gotags: xml:"BitDepth"
	BitDepth int32 `protobuf:"varint,24,opt,name=bit_depth,json=bitDepth,proto3" json:"bit_depth,omitempty" xml:"BitDepth"`
	// @gotags: xml:"File"
	File *File `protobuf:"bytes,25,opt,name=file,proto3" json:"file,omitempty" xml:"File"`
	// @gotags: xml:"Fingerprint"
	Fingerprint []*Fingerprint `protobuf:"bytes,26,rep,name=fingerprint,proto3" json:"fingerprint,omitempty" xml:"Fingerprint"`
	// @gotags: xml:"IsProvidedInDelivery"
	IsProvidedInDelivery bool `protobuf:"varint,27,opt,name=is_provided_in_delivery,json=isProvidedInDelivery,proto3" json:"is_provided_in_delivery,omitempty" xml:"IsProvidedInDelivery"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *VideoDeliveryFile) Reset() {
	*x = VideoDeliveryFile{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoDeliveryFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDeliveryFile) ProtoMessage() {}

func (x *VideoDeliveryFile) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoDeliveryFile.ProtoReflect.Descriptor instead.
func (*VideoDeliveryFile) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{94}
}

func (x *VideoDeliveryFile) GetType() avs.DeliveryFileType {
	if x != nil {
		return x.Type
	}
	return avs.DeliveryFileType(0)
}

func (x *VideoDeliveryFile) GetContainerFormat() *ContainerFormat {
	if x != nil {
		return x.ContainerFormat
	}
	return nil
}

func (x *VideoDeliveryFile) GetVideoCodecType() *VideoCodecType {
	if x != nil {
		return x.VideoCodecType
	}
	return nil
}

func (x *VideoDeliveryFile) GetVideoBitRate() *BitRate {
	if x != nil {
		return x.VideoBitRate
	}
	return nil
}

func (x *VideoDeliveryFile) GetFrameRate() *FrameRate {
	if x != nil {
		return x.FrameRate
	}
	return nil
}

func (x *VideoDeliveryFile) GetImageHeight() *Extent {
	if x != nil {
		return x.ImageHeight
	}
	return nil
}

func (x *VideoDeliveryFile) GetImageWidth() *Extent {
	if x != nil {
		return x.ImageWidth
	}
	return nil
}

func (x *VideoDeliveryFile) GetAspectRatio() []*AspectRatio {
	if x != nil {
		return x.AspectRatio
	}
	return nil
}

func (x *VideoDeliveryFile) GetCoreArea() *CoreArea {
	if x != nil {
		return x.CoreArea
	}
	return nil
}

func (x *VideoDeliveryFile) GetColorDepth() int32 {
	if x != nil {
		return x.ColorDepth
	}
	return 0
}

func (x *VideoDeliveryFile) GetVideoDefinitionType() *VideoDefinitionType {
	if x != nil {
		return x.VideoDefinitionType
	}
	return nil
}

func (x *VideoDeliveryFile) GetAudioCodecType() *AudioCodecType {
	if x != nil {
		return x.AudioCodecType
	}
	return nil
}

func (x *VideoDeliveryFile) GetHasImmersiveAudioMetadata() bool {
	if x != nil {
		return x.HasImmersiveAudioMetadata
	}
	return false
}

func (x *VideoDeliveryFile) GetElectroOpticalTransferFunctionType() avs.ElectroOpticalTransferFunctionType {
	if x != nil {
		return x.ElectroOpticalTransferFunctionType
	}
	return avs.ElectroOpticalTransferFunctionType(0)
}

func (x *VideoDeliveryFile) GetPrimaryColorType() avs.PrimaryColorType {
	if x != nil {
		return x.PrimaryColorType
	}
	return avs.PrimaryColorType(0)
}

func (x *VideoDeliveryFile) GetHdrVideoDynamicMetadataType() *HdrVideoDynamicMetadataType {
	if x != nil {
		return x.HdrVideoDynamicMetadataType
	}
	return nil
}

func (x *VideoDeliveryFile) GetHdrVideoStaticMetadataType() avs.HdrVideoStaticMetadataType {
	if x != nil {
		return x.HdrVideoStaticMetadataType
	}
	return avs.HdrVideoStaticMetadataType(0)
}

func (x *VideoDeliveryFile) GetAudioBitRate() *BitRate {
	if x != nil {
		return x.AudioBitRate
	}
	return nil
}

func (x *VideoDeliveryFile) GetNumberOfAudioChannels() int32 {
	if x != nil {
		return x.NumberOfAudioChannels
	}
	return 0
}

func (x *VideoDeliveryFile) GetNumberOfAudioObjects() int32 {
	if x != nil {
		return x.NumberOfAudioObjects
	}
	return 0
}

func (x *VideoDeliveryFile) GetAudioSamplingRate() *SamplingRate {
	if x != nil {
		return x.AudioSamplingRate
	}
	return nil
}

func (x *VideoDeliveryFile) GetAudioBitsPerSample() int32 {
	if x != nil {
		return x.AudioBitsPerSample
	}
	return 0
}

func (x *VideoDeliveryFile) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *VideoDeliveryFile) GetBitDepth() int32 {
	if x != nil {
		return x.BitDepth
	}
	return 0
}

func (x *VideoDeliveryFile) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *VideoDeliveryFile) GetFingerprint() []*Fingerprint {
	if x != nil {
		return x.Fingerprint
	}
	return nil
}

func (x *VideoDeliveryFile) GetIsProvidedInDelivery() bool {
	if x != nil {
		return x.IsProvidedInDelivery
	}
	return false
}

type VideoEdition struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Type"
	Type avs.EditionType `protobuf:"varint,1,opt,name=type,proto3,enum=ddex.avs.EditionType" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"ResourceId"
	ResourceId []*VideoId `protobuf:"bytes,2,rep,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty" xml:"ResourceId"`
	// @gotags: xml:"EditionContributor"
	EditionContributor []*EditionContributor `protobuf:"bytes,3,rep,name=edition_contributor,json=editionContributor,proto3" json:"edition_contributor,omitempty" xml:"EditionContributor"`
	// @gotags: xml:"PLine"
	PLine []*PLine `protobuf:"bytes,4,rep,name=p_line,json=pLine,proto3" json:"p_line,omitempty" xml:"PLine"`
	// @gotags: xml:"CLine"
	CLine []*CLine `protobuf:"bytes,5,rep,name=c_line,json=cLine,proto3" json:"c_line,omitempty" xml:"CLine"`
	// @gotags: xml:"RecordingMode"
	RecordingMode avs.RecordingMode `protobuf:"varint,6,opt,name=recording_mode,json=recordingMode,proto3,enum=ddex.avs.RecordingMode" json:"recording_mode,omitempty" xml:"RecordingMode"`
	// @gotags: xml:"TechnicalDetails"
	TechnicalDetails []*TechnicalVideoDetails `protobuf:"bytes,7,rep,name=technical_details,json=technicalDetails,proto3" json:"technical_details,omitempty" xml:"TechnicalDetails"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VideoEdition) Reset() {
	*x = VideoEdition{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoEdition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoEdition) ProtoMessage() {}

func (x *VideoEdition) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoEdition.ProtoReflect.Descriptor instead.
func (*VideoEdition) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{95}
}

func (x *VideoEdition) GetType() avs.EditionType {
	if x != nil {
		return x.Type
	}
	return avs.EditionType(0)
}

func (x *VideoEdition) GetResourceId() []*VideoId {
	if x != nil {
		return x.ResourceId
	}
	return nil
}

func (x *VideoEdition) GetEditionContributor() []*EditionContributor {
	if x != nil {
		return x.EditionContributor
	}
	return nil
}

func (x *VideoEdition) GetPLine() []*PLine {
	if x != nil {
		return x.PLine
	}
	return nil
}

func (x *VideoEdition) GetCLine() []*CLine {
	if x != nil {
		return x.CLine
	}
	return nil
}

func (x *VideoEdition) GetRecordingMode() avs.RecordingMode {
	if x != nil {
		return x.RecordingMode
	}
	return avs.RecordingMode(0)
}

func (x *VideoEdition) GetTechnicalDetails() []*TechnicalVideoDetails {
	if x != nil {
		return x.TechnicalDetails
	}
	return nil
}

type VideoType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VideoType) Reset() {
	*x = VideoType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoType) ProtoMessage() {}

func (x *VideoType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoType.ProtoReflect.Descriptor instead.
func (*VideoType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{96}
}

func (x *VideoType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *VideoType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *VideoType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type WorkRightsController struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"RightsControllerPartyReference"
	RightsControllerPartyReference string `protobuf:"bytes,1,opt,name=rights_controller_party_reference,json=rightsControllerPartyReference,proto3" json:"rights_controller_party_reference,omitempty" xml:"RightsControllerPartyReference"`
	// @gotags: xml:"RightsControlType"
	RightsControlType []avs.RightsControllerRole `protobuf:"varint,2,rep,packed,name=rights_control_type,json=rightsControlType,proto3,enum=ddex.avs.RightsControllerRole" json:"rights_control_type,omitempty" xml:"RightsControlType"`
	// @gotags: xml:"RightsControllerType"
	RightsControllerType avs.RightsControllerType `protobuf:"varint,3,opt,name=rights_controller_type,json=rightsControllerType,proto3,enum=ddex.avs.RightsControllerType" json:"rights_controller_type,omitempty" xml:"RightsControllerType"`
	// @gotags: xml:"Territory"
	Territory []*AllTerritoryCode `protobuf:"bytes,4,rep,name=territory,proto3" json:"territory,omitempty" xml:"Territory"`
	// @gotags: xml:"StartDate"
	StartDate string `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" xml:"StartDate"`
	// @gotags: xml:"EndDate"
	EndDate       string `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty" xml:"EndDate"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkRightsController) Reset() {
	*x = WorkRightsController{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkRightsController) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkRightsController) ProtoMessage() {}

func (x *WorkRightsController) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkRightsController.ProtoReflect.Descriptor instead.
func (*WorkRightsController) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{97}
}

func (x *WorkRightsController) GetRightsControllerPartyReference() string {
	if x != nil {
		return x.RightsControllerPartyReference
	}
	return ""
}

func (x *WorkRightsController) GetRightsControlType() []avs.RightsControllerRole {
	if x != nil {
		return x.RightsControlType
	}
	return nil
}

func (x *WorkRightsController) GetRightsControllerType() avs.RightsControllerType {
	if x != nil {
		return x.RightsControllerType
	}
	return avs.RightsControllerType(0)
}

func (x *WorkRightsController) GetTerritory() []*AllTerritoryCode {
	if x != nil {
		return x.Territory
	}
	return nil
}

func (x *WorkRightsController) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *WorkRightsController) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type AdministratingRecordCompanyRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AdministratingRecordCompanyRole) Reset() {
	*x = AdministratingRecordCompanyRole{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdministratingRecordCompanyRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdministratingRecordCompanyRole) ProtoMessage() {}

func (x *AdministratingRecordCompanyRole) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdministratingRecordCompanyRole.ProtoReflect.Descriptor instead.
func (*AdministratingRecordCompanyRole) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{98}
}

func (x *AdministratingRecordCompanyRole) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AdministratingRecordCompanyRole) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AdministratingRecordCompanyRole) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Affiliation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Type"
	Type avs.AffiliationType `protobuf:"varint,1,opt,name=type,proto3,enum=ddex.avs.AffiliationType" json:"type,omitempty" xml:"Type"`
	// @gotags: xml:"ValidityPeriod"
	ValidityPeriod *ValidityPeriod `protobuf:"bytes,2,opt,name=validity_period,json=validityPeriod,proto3" json:"validity_period,omitempty" xml:"ValidityPeriod"`
	// @gotags: xml:"RightsType"
	RightsType []*RightsType `protobuf:"bytes,3,rep,name=rights_type,json=rightsType,proto3" json:"rights_type,omitempty" xml:"RightsType"`
	// @gotags: xml:"PercentageOfRightsAssignment"
	PercentageOfRightsAssignment string `protobuf:"bytes,4,opt,name=percentage_of_rights_assignment,json=percentageOfRightsAssignment,proto3" json:"percentage_of_rights_assignment,omitempty" xml:"PercentageOfRightsAssignment"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *Affiliation) Reset() {
	*x = Affiliation{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Affiliation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Affiliation) ProtoMessage() {}

func (x *Affiliation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Affiliation.ProtoReflect.Descriptor instead.
func (*Affiliation) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{99}
}

func (x *Affiliation) GetType() avs.AffiliationType {
	if x != nil {
		return x.Type
	}
	return avs.AffiliationType(0)
}

func (x *Affiliation) GetValidityPeriod() *ValidityPeriod {
	if x != nil {
		return x.ValidityPeriod
	}
	return nil
}

func (x *Affiliation) GetRightsType() []*RightsType {
	if x != nil {
		return x.RightsType
	}
	return nil
}

func (x *Affiliation) GetPercentageOfRightsAssignment() string {
	if x != nil {
		return x.PercentageOfRightsAssignment
	}
	return ""
}

type AllTerritoryCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IdentifierType,attr"
	IdentifierType avs.TerritoryCodeTypeIncludingDeprecatedCodes `protobuf:"varint,2,opt,name=identifier_type,json=identifierType,proto3,enum=ddex.avs.TerritoryCodeTypeIncludingDeprecatedCodes" json:"identifier_type,omitempty" xml:"IdentifierType,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AllTerritoryCode) Reset() {
	*x = AllTerritoryCode{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllTerritoryCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTerritoryCode) ProtoMessage() {}

func (x *AllTerritoryCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTerritoryCode.ProtoReflect.Descriptor instead.
func (*AllTerritoryCode) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{100}
}

func (x *AllTerritoryCode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AllTerritoryCode) GetIdentifierType() avs.TerritoryCodeTypeIncludingDeprecatedCodes {
	if x != nil {
		return x.IdentifierType
	}
	return avs.TerritoryCodeTypeIncludingDeprecatedCodes(0)
}

type AspectRatio struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"AspectRatioType,attr"
	AspectRatioType avs.AspectRatioType `protobuf:"varint,2,opt,name=aspect_ratio_type,json=aspectRatioType,proto3,enum=ddex.avs.AspectRatioType" json:"aspect_ratio_type,omitempty" xml:"AspectRatioType,attr"`
	// @gotags: xml:"AppliesToCroppedResource,attr"
	AppliesToCroppedResource bool `protobuf:"varint,3,opt,name=applies_to_cropped_resource,json=appliesToCroppedResource,proto3" json:"applies_to_cropped_resource,omitempty" xml:"AppliesToCroppedResource,attr"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *AspectRatio) Reset() {
	*x = AspectRatio{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AspectRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AspectRatio) ProtoMessage() {}

func (x *AspectRatio) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AspectRatio.ProtoReflect.Descriptor instead.
func (*AspectRatio) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{101}
}

func (x *AspectRatio) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AspectRatio) GetAspectRatioType() avs.AspectRatioType {
	if x != nil {
		return x.AspectRatioType
	}
	return avs.AspectRatioType(0)
}

func (x *AspectRatio) GetAppliesToCroppedResource() bool {
	if x != nil {
		return x.AppliesToCroppedResource
	}
	return false
}

type AudioCodecType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Version,attr"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,4,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AudioCodecType) Reset() {
	*x = AudioCodecType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioCodecType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioCodecType) ProtoMessage() {}

func (x *AudioCodecType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioCodecType.ProtoReflect.Descriptor instead.
func (*AudioCodecType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{102}
}

func (x *AudioCodecType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AudioCodecType) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AudioCodecType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AudioCodecType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type BitRate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"UnitOfMeasure,attr"
	UnitOfMeasure avs.UnitOfBitRate `protobuf:"varint,2,opt,name=unit_of_measure,json=unitOfMeasure,proto3,enum=ddex.avs.UnitOfBitRate" json:"unit_of_measure,omitempty" xml:"UnitOfMeasure,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BitRate) Reset() {
	*x = BitRate{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BitRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BitRate) ProtoMessage() {}

func (x *BitRate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BitRate.ProtoReflect.Descriptor instead.
func (*BitRate) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{103}
}

func (x *BitRate) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *BitRate) GetUnitOfMeasure() avs.UnitOfBitRate {
	if x != nil {
		return x.UnitOfMeasure
	}
	return avs.UnitOfBitRate(0)
}

type CLine struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Year"
	Year string `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty" xml:"Year"`
	// @gotags: xml:"CLineCompany"
	CLineCompany string `protobuf:"bytes,2,opt,name=c_line_company,json=cLineCompany,proto3" json:"c_line_company,omitempty" xml:"CLineCompany"`
	// @gotags: xml:"CLineText"
	CLineText string `protobuf:"bytes,3,opt,name=c_line_text,json=cLineText,proto3" json:"c_line_text,omitempty" xml:"CLineText"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,4,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,5,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,6,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CLine) Reset() {
	*x = CLine{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CLine) ProtoMessage() {}

func (x *CLine) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CLine.ProtoReflect.Descriptor instead.
func (*CLine) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{104}
}

func (x *CLine) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *CLine) GetCLineCompany() string {
	if x != nil {
		return x.CLineCompany
	}
	return ""
}

func (x *CLine) GetCLineText() string {
	if x != nil {
		return x.CLineText
	}
	return ""
}

func (x *CLine) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *CLine) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *CLine) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type CarrierType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CarrierType) Reset() {
	*x = CarrierType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CarrierType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarrierType) ProtoMessage() {}

func (x *CarrierType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarrierType.ProtoReflect.Descriptor instead.
func (*CarrierType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{105}
}

func (x *CarrierType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CarrierType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CarrierType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CatalogNumber struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CatalogNumber) Reset() {
	*x = CatalogNumber{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CatalogNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CatalogNumber) ProtoMessage() {}

func (x *CatalogNumber) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CatalogNumber.ProtoReflect.Descriptor instead.
func (*CatalogNumber) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{106}
}

func (x *CatalogNumber) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CatalogNumber) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ChapterId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISRC"
	ISRC string `protobuf:"bytes,1,opt,name=i_s_r_c,json=iSRC,proto3" json:"i_s_r_c,omitempty" xml:"ISRC"`
	// @gotags: xml:"ISAN"
	ISAN string `protobuf:"bytes,2,opt,name=i_s_a_n,json=iSAN,proto3" json:"i_s_a_n,omitempty" xml:"ISAN"`
	// @gotags: xml:"VISAN"
	VISAN string `protobuf:"bytes,3,opt,name=v_i_s_a_n,json=vISAN,proto3" json:"v_i_s_a_n,omitempty" xml:"VISAN"`
	// @gotags: xml:"EIDR"
	EIDR []string `protobuf:"bytes,4,rep,name=e_i_d_r,json=eIDR,proto3" json:"e_i_d_r,omitempty" xml:"EIDR"`
	// @gotags: xml:"ISWC"
	ISWC string `protobuf:"bytes,5,opt,name=i_s_w_c,json=iSWC,proto3" json:"i_s_w_c,omitempty" xml:"ISWC"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber *CatalogNumber `protobuf:"bytes,6,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,7,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChapterId) Reset() {
	*x = ChapterId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChapterId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterId) ProtoMessage() {}

func (x *ChapterId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterId.ProtoReflect.Descriptor instead.
func (*ChapterId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{107}
}

func (x *ChapterId) GetISRC() string {
	if x != nil {
		return x.ISRC
	}
	return ""
}

func (x *ChapterId) GetISAN() string {
	if x != nil {
		return x.ISAN
	}
	return ""
}

func (x *ChapterId) GetVISAN() string {
	if x != nil {
		return x.VISAN
	}
	return ""
}

func (x *ChapterId) GetEIDR() []string {
	if x != nil {
		return x.EIDR
	}
	return nil
}

func (x *ChapterId) GetISWC() string {
	if x != nil {
		return x.ISWC
	}
	return ""
}

func (x *ChapterId) GetCatalogNumber() *CatalogNumber {
	if x != nil {
		return x.CatalogNumber
	}
	return nil
}

func (x *ChapterId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type ClipType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ClipType) Reset() {
	*x = ClipType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClipType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClipType) ProtoMessage() {}

func (x *ClipType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClipType.ProtoReflect.Descriptor instead.
func (*ClipType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{108}
}

func (x *ClipType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ClipType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ClipType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ContainerFormat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ContainerFormat) Reset() {
	*x = ContainerFormat{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerFormat) ProtoMessage() {}

func (x *ContainerFormat) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerFormat.ProtoReflect.Descriptor instead.
func (*ContainerFormat) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{109}
}

func (x *ContainerFormat) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ContainerFormat) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ContainerFormat) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Contributor struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Role"
	Role []*ContributorRole `protobuf:"bytes,1,rep,name=role,proto3" json:"role,omitempty" xml:"Role"`
	// @gotags: xml:"InstrumentType"
	InstrumentType []*InstrumentType `protobuf:"bytes,2,rep,name=instrument_type,json=instrumentType,proto3" json:"instrument_type,omitempty" xml:"InstrumentType"`
	// @gotags: xml:"AiContribution"
	AiContribution avs.ContainsAI `protobuf:"varint,3,opt,name=ai_contribution,json=aiContribution,proto3,enum=ddex.avs.ContainsAI" json:"ai_contribution,omitempty" xml:"AiContribution"`
	// @gotags: xml:"HasMadeFeaturedContribution"
	HasMadeFeaturedContribution bool `protobuf:"varint,4,opt,name=has_made_featured_contribution,json=hasMadeFeaturedContribution,proto3" json:"has_made_featured_contribution,omitempty" xml:"HasMadeFeaturedContribution"`
	// @gotags: xml:"HasMadeContractedContribution"
	HasMadeContractedContribution bool `protobuf:"varint,5,opt,name=has_made_contracted_contribution,json=hasMadeContractedContribution,proto3" json:"has_made_contracted_contribution,omitempty" xml:"HasMadeContractedContribution"`
	// @gotags: xml:"IsCredited"
	IsCredited *IsCredited `protobuf:"bytes,6,opt,name=is_credited,json=isCredited,proto3" json:"is_credited,omitempty" xml:"IsCredited"`
	// @gotags: xml:"DisplayCredits"
	DisplayCredits []*DisplayCredits `protobuf:"bytes,7,rep,name=display_credits,json=displayCredits,proto3" json:"display_credits,omitempty" xml:"DisplayCredits"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,8,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Contributor) Reset() {
	*x = Contributor{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Contributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contributor) ProtoMessage() {}

func (x *Contributor) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contributor.ProtoReflect.Descriptor instead.
func (*Contributor) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{110}
}

func (x *Contributor) GetRole() []*ContributorRole {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *Contributor) GetInstrumentType() []*InstrumentType {
	if x != nil {
		return x.InstrumentType
	}
	return nil
}

func (x *Contributor) GetAiContribution() avs.ContainsAI {
	if x != nil {
		return x.AiContribution
	}
	return avs.ContainsAI(0)
}

func (x *Contributor) GetHasMadeFeaturedContribution() bool {
	if x != nil {
		return x.HasMadeFeaturedContribution
	}
	return false
}

func (x *Contributor) GetHasMadeContractedContribution() bool {
	if x != nil {
		return x.HasMadeContractedContribution
	}
	return false
}

func (x *Contributor) GetIsCredited() *IsCredited {
	if x != nil {
		return x.IsCredited
	}
	return nil
}

func (x *Contributor) GetDisplayCredits() []*DisplayCredits {
	if x != nil {
		return x.DisplayCredits
	}
	return nil
}

func (x *Contributor) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type ContributorRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Value"
	Value *ContributorRoleValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"InstrumentType"
	InstrumentType []*InstrumentType `protobuf:"bytes,2,rep,name=instrument_type,json=instrumentType,proto3" json:"instrument_type,omitempty" xml:"InstrumentType"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ContributorRole) Reset() {
	*x = ContributorRole{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorRole) ProtoMessage() {}

func (x *ContributorRole) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorRole.ProtoReflect.Descriptor instead.
func (*ContributorRole) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{111}
}

func (x *ContributorRole) GetValue() *ContributorRoleValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ContributorRole) GetInstrumentType() []*InstrumentType {
	if x != nil {
		return x.InstrumentType
	}
	return nil
}

type ContributorRoleValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ContributorRoleValue) Reset() {
	*x = ContributorRoleValue{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContributorRoleValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContributorRoleValue) ProtoMessage() {}

func (x *ContributorRoleValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContributorRoleValue.ProtoReflect.Descriptor instead.
func (*ContributorRoleValue) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{112}
}

func (x *ContributorRoleValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ContributorRoleValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ContributorRoleValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CourtesyLine struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CourtesyLine) Reset() {
	*x = CourtesyLine{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CourtesyLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourtesyLine) ProtoMessage() {}

func (x *CourtesyLine) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourtesyLine.ProtoReflect.Descriptor instead.
func (*CourtesyLine) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{113}
}

func (x *CourtesyLine) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CourtesyLine) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *CourtesyLine) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *CourtesyLine) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type CueOrigin struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CueOrigin) Reset() {
	*x = CueOrigin{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CueOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CueOrigin) ProtoMessage() {}

func (x *CueOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CueOrigin.ProtoReflect.Descriptor instead.
func (*CueOrigin) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{114}
}

func (x *CueOrigin) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CueOrigin) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CueOrigin) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CueSheetType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CueSheetType) Reset() {
	*x = CueSheetType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CueSheetType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CueSheetType) ProtoMessage() {}

func (x *CueSheetType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CueSheetType.ProtoReflect.Descriptor instead.
func (*CueSheetType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{115}
}

func (x *CueSheetType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CueSheetType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CueSheetType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CueThemeType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CueThemeType) Reset() {
	*x = CueThemeType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CueThemeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CueThemeType) ProtoMessage() {}

func (x *CueThemeType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CueThemeType.ProtoReflect.Descriptor instead.
func (*CueThemeType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{116}
}

func (x *CueThemeType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CueThemeType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CueThemeType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CueUseType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CueUseType) Reset() {
	*x = CueUseType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CueUseType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CueUseType) ProtoMessage() {}

func (x *CueUseType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CueUseType.ProtoReflect.Descriptor instead.
func (*CueUseType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{117}
}

func (x *CueUseType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CueUseType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CueUseType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CueVisualPerceptionType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CueVisualPerceptionType) Reset() {
	*x = CueVisualPerceptionType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CueVisualPerceptionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CueVisualPerceptionType) ProtoMessage() {}

func (x *CueVisualPerceptionType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CueVisualPerceptionType.ProtoReflect.Descriptor instead.
func (*CueVisualPerceptionType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{118}
}

func (x *CueVisualPerceptionType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CueVisualPerceptionType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CueVisualPerceptionType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CueVocalType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CueVocalType) Reset() {
	*x = CueVocalType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CueVocalType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CueVocalType) ProtoMessage() {}

func (x *CueVocalType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CueVocalType.ProtoReflect.Descriptor instead.
func (*CueVocalType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{119}
}

func (x *CueVocalType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CueVocalType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CueVocalType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type CurrentTerritoryCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IdentifierType,attr"
	IdentifierType avs.TerritoryCodeType `protobuf:"varint,2,opt,name=identifier_type,json=identifierType,proto3,enum=ddex.avs.TerritoryCodeType" json:"identifier_type,omitempty" xml:"IdentifierType,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CurrentTerritoryCode) Reset() {
	*x = CurrentTerritoryCode{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentTerritoryCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentTerritoryCode) ProtoMessage() {}

func (x *CurrentTerritoryCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentTerritoryCode.ProtoReflect.Descriptor instead.
func (*CurrentTerritoryCode) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{120}
}

func (x *CurrentTerritoryCode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CurrentTerritoryCode) GetIdentifierType() avs.TerritoryCodeType {
	if x != nil {
		return x.IdentifierType
	}
	return avs.TerritoryCodeType(0)
}

type DSP struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TradingName"
	TradingName *Name `protobuf:"bytes,1,opt,name=trading_name,json=tradingName,proto3" json:"trading_name,omitempty" xml:"TradingName"`
	// @gotags: xml:"URL"
	URL           []string `protobuf:"bytes,2,rep,name=u_r_l,json=uRL,proto3" json:"u_r_l,omitempty" xml:"URL"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DSP) Reset() {
	*x = DSP{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DSP) ProtoMessage() {}

func (x *DSP) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DSP.ProtoReflect.Descriptor instead.
func (*DSP) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{121}
}

func (x *DSP) GetTradingName() *Name {
	if x != nil {
		return x.TradingName
	}
	return nil
}

func (x *DSP) GetURL() []string {
	if x != nil {
		return x.URL
	}
	return nil
}

type DetailedHashSum struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Algorithm"
	Algorithm *HashSumAlgorithmType `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty" xml:"Algorithm"`
	// @gotags: xml:"Version"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version"`
	// @gotags: xml:"Parameter"
	Parameter string `protobuf:"bytes,3,opt,name=parameter,proto3" json:"parameter,omitempty" xml:"Parameter"`
	// @gotags: xml:"DataType"
	DataType avs.BinaryDataType `protobuf:"varint,4,opt,name=data_type,json=dataType,proto3,enum=ddex.avs.BinaryDataType" json:"data_type,omitempty" xml:"DataType"`
	// @gotags: xml:"HashSumValue"
	HashSumValue  string `protobuf:"bytes,5,opt,name=hash_sum_value,json=hashSumValue,proto3" json:"hash_sum_value,omitempty" xml:"HashSumValue"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailedHashSum) Reset() {
	*x = DetailedHashSum{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedHashSum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedHashSum) ProtoMessage() {}

func (x *DetailedHashSum) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedHashSum.ProtoReflect.Descriptor instead.
func (*DetailedHashSum) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{122}
}

func (x *DetailedHashSum) GetAlgorithm() *HashSumAlgorithmType {
	if x != nil {
		return x.Algorithm
	}
	return nil
}

func (x *DetailedHashSum) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DetailedHashSum) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

func (x *DetailedHashSum) GetDataType() avs.BinaryDataType {
	if x != nil {
		return x.DataType
	}
	return avs.BinaryDataType(0)
}

func (x *DetailedHashSum) GetHashSumValue() string {
	if x != nil {
		return x.HashSumValue
	}
	return ""
}

type DetailedPartyId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISNI"
	ISNI string `protobuf:"bytes,1,opt,name=i_s_n_i,json=iSNI,proto3" json:"i_s_n_i,omitempty" xml:"ISNI"`
	// @gotags: xml:"DPID"
	DPID string `protobuf:"bytes,2,opt,name=d_p_i_d,json=dPID,proto3" json:"d_p_i_d,omitempty" xml:"DPID"`
	// @gotags: xml:"IpiNameNumber"
	IpiNameNumber string `protobuf:"bytes,3,opt,name=ipi_name_number,json=ipiNameNumber,proto3" json:"ipi_name_number,omitempty" xml:"IpiNameNumber"`
	// @gotags: xml:"IPN"
	IPN string `protobuf:"bytes,4,opt,name=i_p_n,json=iPN,proto3" json:"i_p_n,omitempty" xml:"IPN"`
	// @gotags: xml:"CisacSocietyId"
	CisacSocietyId string `protobuf:"bytes,5,opt,name=cisac_society_id,json=cisacSocietyId,proto3" json:"cisac_society_id,omitempty" xml:"CisacSocietyId"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,6,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DetailedPartyId) Reset() {
	*x = DetailedPartyId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DetailedPartyId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedPartyId) ProtoMessage() {}

func (x *DetailedPartyId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedPartyId.ProtoReflect.Descriptor instead.
func (*DetailedPartyId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{123}
}

func (x *DetailedPartyId) GetISNI() string {
	if x != nil {
		return x.ISNI
	}
	return ""
}

func (x *DetailedPartyId) GetDPID() string {
	if x != nil {
		return x.DPID
	}
	return ""
}

func (x *DetailedPartyId) GetIpiNameNumber() string {
	if x != nil {
		return x.IpiNameNumber
	}
	return ""
}

func (x *DetailedPartyId) GetIPN() string {
	if x != nil {
		return x.IPN
	}
	return ""
}

func (x *DetailedPartyId) GetCisacSocietyId() string {
	if x != nil {
		return x.CisacSocietyId
	}
	return ""
}

func (x *DetailedPartyId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

type DisplayArtistNameWithOriginalLanguage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"IsInOriginalLanguage,attr"
	IsInOriginalLanguage bool `protobuf:"varint,3,opt,name=is_in_original_language,json=isInOriginalLanguage,proto3" json:"is_in_original_language,omitempty" xml:"IsInOriginalLanguage,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,4,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayArtistNameWithOriginalLanguage) Reset() {
	*x = DisplayArtistNameWithOriginalLanguage{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayArtistNameWithOriginalLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayArtistNameWithOriginalLanguage) ProtoMessage() {}

func (x *DisplayArtistNameWithOriginalLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayArtistNameWithOriginalLanguage.ProtoReflect.Descriptor instead.
func (*DisplayArtistNameWithOriginalLanguage) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{124}
}

func (x *DisplayArtistNameWithOriginalLanguage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DisplayArtistNameWithOriginalLanguage) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DisplayArtistNameWithOriginalLanguage) GetIsInOriginalLanguage() bool {
	if x != nil {
		return x.IsInOriginalLanguage
	}
	return false
}

func (x *DisplayArtistNameWithOriginalLanguage) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *DisplayArtistNameWithOriginalLanguage) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type DisplayArtistRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DisplayArtistRole) Reset() {
	*x = DisplayArtistRole{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayArtistRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayArtistRole) ProtoMessage() {}

func (x *DisplayArtistRole) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayArtistRole.ProtoReflect.Descriptor instead.
func (*DisplayArtistRole) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{125}
}

func (x *DisplayArtistRole) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DisplayArtistRole) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DisplayArtistRole) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type DisplayCredits struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"DisplayCreditText"
	DisplayCreditText string `protobuf:"bytes,1,opt,name=display_credit_text,json=displayCreditText,proto3" json:"display_credit_text,omitempty" xml:"DisplayCreditText"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplayCredits) Reset() {
	*x = DisplayCredits{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayCredits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayCredits) ProtoMessage() {}

func (x *DisplayCredits) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayCredits.ProtoReflect.Descriptor instead.
func (*DisplayCredits) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{126}
}

func (x *DisplayCredits) GetDisplayCreditText() string {
	if x != nil {
		return x.DisplayCreditText
	}
	return ""
}

func (x *DisplayCredits) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DisplayCredits) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *DisplayCredits) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type DisplaySubTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	// @gotags: xml:"IsDisplayedInTitle,attr"
	IsDisplayedInTitle bool `protobuf:"varint,3,opt,name=is_displayed_in_title,json=isDisplayedInTitle,proto3" json:"is_displayed_in_title,omitempty" xml:"IsDisplayedInTitle,attr"`
	// @gotags: xml:"SubTitleType,attr"
	SubTitleType  avs.SubTitleType `protobuf:"varint,4,opt,name=sub_title_type,json=subTitleType,proto3,enum=ddex.avs.SubTitleType" json:"sub_title_type,omitempty" xml:"SubTitleType,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisplaySubTitle) Reset() {
	*x = DisplaySubTitle{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplaySubTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplaySubTitle) ProtoMessage() {}

func (x *DisplaySubTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplaySubTitle.ProtoReflect.Descriptor instead.
func (*DisplaySubTitle) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{127}
}

func (x *DisplaySubTitle) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DisplaySubTitle) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *DisplaySubTitle) GetIsDisplayedInTitle() bool {
	if x != nil {
		return x.IsDisplayedInTitle
	}
	return false
}

func (x *DisplaySubTitle) GetSubTitleType() avs.SubTitleType {
	if x != nil {
		return x.SubTitleType
	}
	return avs.SubTitleType(0)
}

type DisplayTitle struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"TitleText"
	TitleText string `protobuf:"bytes,1,opt,name=title_text,json=titleText,proto3" json:"title_text,omitempty" xml:"TitleText"`
	// @gotags: xml:"SubTitle"
	SubTitle []*DisplaySubTitle `protobuf:"bytes,2,rep,name=sub_title,json=subTitle,proto3" json:"sub_title,omitempty" xml:"SubTitle"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,3,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,4,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,5,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"IsInOriginalLanguage,attr"
	IsInOriginalLanguage bool `protobuf:"varint,6,opt,name=is_in_original_language,json=isInOriginalLanguage,proto3" json:"is_in_original_language,omitempty" xml:"IsInOriginalLanguage,attr"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *DisplayTitle) Reset() {
	*x = DisplayTitle{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[128]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisplayTitle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayTitle) ProtoMessage() {}

func (x *DisplayTitle) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[128]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayTitle.ProtoReflect.Descriptor instead.
func (*DisplayTitle) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{128}
}

func (x *DisplayTitle) GetTitleText() string {
	if x != nil {
		return x.TitleText
	}
	return ""
}

func (x *DisplayTitle) GetSubTitle() []*DisplaySubTitle {
	if x != nil {
		return x.SubTitle
	}
	return nil
}

func (x *DisplayTitle) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *DisplayTitle) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *DisplayTitle) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *DisplayTitle) GetIsInOriginalLanguage() bool {
	if x != nil {
		return x.IsInOriginalLanguage
	}
	return false
}

type EventDate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	// @gotags: xml:"IsBefore,attr"
	IsBefore bool `protobuf:"varint,3,opt,name=is_before,json=isBefore,proto3" json:"is_before,omitempty" xml:"IsBefore,attr"`
	// @gotags: xml:"IsAfter,attr"
	IsAfter bool `protobuf:"varint,4,opt,name=is_after,json=isAfter,proto3" json:"is_after,omitempty" xml:"IsAfter,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.AllTerritoryCode `protobuf:"varint,5,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.AllTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"LocationDescription,attr"
	LocationDescription string `protobuf:"bytes,6,opt,name=location_description,json=locationDescription,proto3" json:"location_description,omitempty" xml:"LocationDescription,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,7,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventDate) Reset() {
	*x = EventDate{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[129]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDate) ProtoMessage() {}

func (x *EventDate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[129]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDate.ProtoReflect.Descriptor instead.
func (*EventDate) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{129}
}

func (x *EventDate) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventDate) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

func (x *EventDate) GetIsBefore() bool {
	if x != nil {
		return x.IsBefore
	}
	return false
}

func (x *EventDate) GetIsAfter() bool {
	if x != nil {
		return x.IsAfter
	}
	return false
}

func (x *EventDate) GetApplicableTerritoryCode() avs.AllTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.AllTerritoryCode(0)
}

func (x *EventDate) GetLocationDescription() string {
	if x != nil {
		return x.LocationDescription
	}
	return ""
}

func (x *EventDate) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type EventDateTime struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsApproximate,attr"
	IsApproximate bool `protobuf:"varint,2,opt,name=is_approximate,json=isApproximate,proto3" json:"is_approximate,omitempty" xml:"IsApproximate,attr"`
	// @gotags: xml:"IsBefore,attr"
	IsBefore bool `protobuf:"varint,3,opt,name=is_before,json=isBefore,proto3" json:"is_before,omitempty" xml:"IsBefore,attr"`
	// @gotags: xml:"IsAfter,attr"
	IsAfter bool `protobuf:"varint,4,opt,name=is_after,json=isAfter,proto3" json:"is_after,omitempty" xml:"IsAfter,attr"`
	// @gotags: xml:"TerritoryCode,attr"
	TerritoryCode avs.AllTerritoryCode `protobuf:"varint,5,opt,name=territory_code,json=territoryCode,proto3,enum=ddex.avs.AllTerritoryCode" json:"territory_code,omitempty" xml:"TerritoryCode,attr"`
	// @gotags: xml:"LocationDescription,attr"
	LocationDescription string `protobuf:"bytes,6,opt,name=location_description,json=locationDescription,proto3" json:"location_description,omitempty" xml:"LocationDescription,attr"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,7,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *EventDateTime) Reset() {
	*x = EventDateTime{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventDateTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventDateTime) ProtoMessage() {}

func (x *EventDateTime) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventDateTime.ProtoReflect.Descriptor instead.
func (*EventDateTime) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{130}
}

func (x *EventDateTime) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *EventDateTime) GetIsApproximate() bool {
	if x != nil {
		return x.IsApproximate
	}
	return false
}

func (x *EventDateTime) GetIsBefore() bool {
	if x != nil {
		return x.IsBefore
	}
	return false
}

func (x *EventDateTime) GetIsAfter() bool {
	if x != nil {
		return x.IsAfter
	}
	return false
}

func (x *EventDateTime) GetTerritoryCode() avs.AllTerritoryCode {
	if x != nil {
		return x.TerritoryCode
	}
	return avs.AllTerritoryCode(0)
}

func (x *EventDateTime) GetLocationDescription() string {
	if x != nil {
		return x.LocationDescription
	}
	return ""
}

func (x *EventDateTime) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type Extent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"UnitOfMeasure,attr"
	UnitOfMeasure avs.UnitOfExtent `protobuf:"varint,2,opt,name=unit_of_measure,json=unitOfMeasure,proto3,enum=ddex.avs.UnitOfExtent" json:"unit_of_measure,omitempty" xml:"UnitOfMeasure,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Extent) Reset() {
	*x = Extent{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Extent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extent) ProtoMessage() {}

func (x *Extent) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extent.ProtoReflect.Descriptor instead.
func (*Extent) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{131}
}

func (x *Extent) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Extent) GetUnitOfMeasure() avs.UnitOfExtent {
	if x != nil {
		return x.UnitOfMeasure
	}
	return avs.UnitOfExtent(0)
}

type ExternallyLinkedResourceType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ExternallyLinkedResourceType) Reset() {
	*x = ExternallyLinkedResourceType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternallyLinkedResourceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternallyLinkedResourceType) ProtoMessage() {}

func (x *ExternallyLinkedResourceType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternallyLinkedResourceType.ProtoReflect.Descriptor instead.
func (*ExternallyLinkedResourceType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{132}
}

func (x *ExternallyLinkedResourceType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ExternallyLinkedResourceType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ExternallyLinkedResourceType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type File struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"URI"
	URI string `protobuf:"bytes,1,opt,name=u_r_i,json=uRI,proto3" json:"u_r_i,omitempty" xml:"URI"`
	// @gotags: xml:"HashSum"
	HashSum *DetailedHashSum `protobuf:"bytes,2,opt,name=hash_sum,json=hashSum,proto3" json:"hash_sum,omitempty" xml:"HashSum"`
	// @gotags: xml:"FileSize"
	FileSize      string `protobuf:"bytes,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty" xml:"FileSize"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{133}
}

func (x *File) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *File) GetHashSum() *DetailedHashSum {
	if x != nil {
		return x.HashSum
	}
	return nil
}

func (x *File) GetFileSize() string {
	if x != nil {
		return x.FileSize
	}
	return ""
}

type Fingerprint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Algorithm"
	Algorithm *FingerprintAlgorithmType `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty" xml:"Algorithm"`
	// @gotags: xml:"Version"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version"`
	// @gotags: xml:"Parameter"
	Parameter     string `protobuf:"bytes,3,opt,name=parameter,proto3" json:"parameter,omitempty" xml:"Parameter"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fingerprint) Reset() {
	*x = Fingerprint{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fingerprint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fingerprint) ProtoMessage() {}

func (x *Fingerprint) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fingerprint.ProtoReflect.Descriptor instead.
func (*Fingerprint) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{134}
}

func (x *Fingerprint) GetAlgorithm() *FingerprintAlgorithmType {
	if x != nil {
		return x.Algorithm
	}
	return nil
}

func (x *Fingerprint) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Fingerprint) GetParameter() string {
	if x != nil {
		return x.Parameter
	}
	return ""
}

type FingerprintAlgorithmType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FingerprintAlgorithmType) Reset() {
	*x = FingerprintAlgorithmType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FingerprintAlgorithmType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FingerprintAlgorithmType) ProtoMessage() {}

func (x *FingerprintAlgorithmType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FingerprintAlgorithmType.ProtoReflect.Descriptor instead.
func (*FingerprintAlgorithmType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{135}
}

func (x *FingerprintAlgorithmType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FingerprintAlgorithmType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FingerprintAlgorithmType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type FirstPublicationDate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,2,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirstPublicationDate) Reset() {
	*x = FirstPublicationDate{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirstPublicationDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirstPublicationDate) ProtoMessage() {}

func (x *FirstPublicationDate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirstPublicationDate.ProtoReflect.Descriptor instead.
func (*FirstPublicationDate) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{136}
}

func (x *FirstPublicationDate) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FirstPublicationDate) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *FirstPublicationDate) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type FrameRate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"UnitOfMeasure,attr"
	UnitOfMeasure avs.UnitOfFrameRate `protobuf:"varint,2,opt,name=unit_of_measure,json=unitOfMeasure,proto3,enum=ddex.avs.UnitOfFrameRate" json:"unit_of_measure,omitempty" xml:"UnitOfMeasure,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FrameRate) Reset() {
	*x = FrameRate{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FrameRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrameRate) ProtoMessage() {}

func (x *FrameRate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrameRate.ProtoReflect.Descriptor instead.
func (*FrameRate) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{137}
}

func (x *FrameRate) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FrameRate) GetUnitOfMeasure() avs.UnitOfFrameRate {
	if x != nil {
		return x.UnitOfMeasure
	}
	return avs.UnitOfFrameRate(0)
}

type FulfillmentDate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"FulfillmentDate"
	FulfillmentDate string `protobuf:"bytes,1,opt,name=fulfillment_date,json=fulfillmentDate,proto3" json:"fulfillment_date,omitempty" xml:"FulfillmentDate"`
	// @gotags: xml:"ResourceReleaseReference"
	ResourceReleaseReference []string `protobuf:"bytes,2,rep,name=resource_release_reference,json=resourceReleaseReference,proto3" json:"resource_release_reference,omitempty" xml:"ResourceReleaseReference"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FulfillmentDate) Reset() {
	*x = FulfillmentDate{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FulfillmentDate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FulfillmentDate) ProtoMessage() {}

func (x *FulfillmentDate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FulfillmentDate.ProtoReflect.Descriptor instead.
func (*FulfillmentDate) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{138}
}

func (x *FulfillmentDate) GetFulfillmentDate() string {
	if x != nil {
		return x.FulfillmentDate
	}
	return ""
}

func (x *FulfillmentDate) GetResourceReleaseReference() []string {
	if x != nil {
		return x.ResourceReleaseReference
	}
	return nil
}

func (x *FulfillmentDate) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *FulfillmentDate) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type GenreCategory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Value"
	Value *GenreCategoryValue `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Description"
	Description []*TextWithoutTerritory `protobuf:"bytes,2,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GenreCategory) Reset() {
	*x = GenreCategory{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenreCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenreCategory) ProtoMessage() {}

func (x *GenreCategory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenreCategory.ProtoReflect.Descriptor instead.
func (*GenreCategory) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{139}
}

func (x *GenreCategory) GetValue() *GenreCategoryValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GenreCategory) GetDescription() []*TextWithoutTerritory {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *GenreCategory) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

type GenreCategoryValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,4,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GenreCategoryValue) Reset() {
	*x = GenreCategoryValue{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenreCategoryValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenreCategoryValue) ProtoMessage() {}

func (x *GenreCategoryValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenreCategoryValue.ProtoReflect.Descriptor instead.
func (*GenreCategoryValue) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{140}
}

func (x *GenreCategoryValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GenreCategoryValue) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *GenreCategoryValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GenreCategoryValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type GenreWithTerritory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"GenreText"
	GenreText string `protobuf:"bytes,1,opt,name=genre_text,json=genreText,proto3" json:"genre_text,omitempty" xml:"GenreText"`
	// @gotags: xml:"SubGenre"
	SubGenre string `protobuf:"bytes,2,opt,name=sub_genre,json=subGenre,proto3" json:"sub_genre,omitempty" xml:"SubGenre"`
	// @gotags: xml:"GenreCategory"
	GenreCategory []*GenreCategory `protobuf:"bytes,3,rep,name=genre_category,json=genreCategory,proto3" json:"genre_category,omitempty" xml:"GenreCategory"`
	// @gotags: xml:"SubGenreCategory"
	SubGenreCategory []*SubGenreCategory `protobuf:"bytes,4,rep,name=sub_genre_category,json=subGenreCategory,proto3" json:"sub_genre_category,omitempty" xml:"SubGenreCategory"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,5,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,6,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,7,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenreWithTerritory) Reset() {
	*x = GenreWithTerritory{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenreWithTerritory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenreWithTerritory) ProtoMessage() {}

func (x *GenreWithTerritory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenreWithTerritory.ProtoReflect.Descriptor instead.
func (*GenreWithTerritory) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{141}
}

func (x *GenreWithTerritory) GetGenreText() string {
	if x != nil {
		return x.GenreText
	}
	return ""
}

func (x *GenreWithTerritory) GetSubGenre() string {
	if x != nil {
		return x.SubGenre
	}
	return ""
}

func (x *GenreWithTerritory) GetGenreCategory() []*GenreCategory {
	if x != nil {
		return x.GenreCategory
	}
	return nil
}

func (x *GenreWithTerritory) GetSubGenreCategory() []*SubGenreCategory {
	if x != nil {
		return x.SubGenreCategory
	}
	return nil
}

func (x *GenreWithTerritory) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *GenreWithTerritory) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *GenreWithTerritory) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type HashSumAlgorithmType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HashSumAlgorithmType) Reset() {
	*x = HashSumAlgorithmType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HashSumAlgorithmType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashSumAlgorithmType) ProtoMessage() {}

func (x *HashSumAlgorithmType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashSumAlgorithmType.ProtoReflect.Descriptor instead.
func (*HashSumAlgorithmType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{142}
}

func (x *HashSumAlgorithmType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *HashSumAlgorithmType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HashSumAlgorithmType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ImageCodecType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Version,attr"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,4,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ImageCodecType) Reset() {
	*x = ImageCodecType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageCodecType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageCodecType) ProtoMessage() {}

func (x *ImageCodecType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageCodecType.ProtoReflect.Descriptor instead.
func (*ImageCodecType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{143}
}

func (x *ImageCodecType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ImageCodecType) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ImageCodecType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageCodecType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ImageType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ImageType) Reset() {
	*x = ImageType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageType) ProtoMessage() {}

func (x *ImageType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageType.ProtoReflect.Descriptor instead.
func (*ImageType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{144}
}

func (x *ImageType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ImageType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ImageType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type InstrumentType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InstrumentType) Reset() {
	*x = InstrumentType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstrumentType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentType) ProtoMessage() {}

func (x *InstrumentType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentType.ProtoReflect.Descriptor instead.
func (*InstrumentType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{145}
}

func (x *InstrumentType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *InstrumentType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *InstrumentType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type IsCredited struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"MayBeShared,attr"
	MayBeShared   bool `protobuf:"varint,2,opt,name=may_be_shared,json=mayBeShared,proto3" json:"may_be_shared,omitempty" xml:"MayBeShared,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsCredited) Reset() {
	*x = IsCredited{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsCredited) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsCredited) ProtoMessage() {}

func (x *IsCredited) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsCredited.ProtoReflect.Descriptor instead.
func (*IsCredited) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{146}
}

func (x *IsCredited) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *IsCredited) GetMayBeShared() bool {
	if x != nil {
		return x.MayBeShared
	}
	return false
}

type KeywordsWithTerritory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeywordsWithTerritory) Reset() {
	*x = KeywordsWithTerritory{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeywordsWithTerritory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeywordsWithTerritory) ProtoMessage() {}

func (x *KeywordsWithTerritory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeywordsWithTerritory.ProtoReflect.Descriptor instead.
func (*KeywordsWithTerritory) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{147}
}

func (x *KeywordsWithTerritory) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *KeywordsWithTerritory) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *KeywordsWithTerritory) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *KeywordsWithTerritory) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type Language struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"IsMainLanguage,attr"
	IsMainLanguage bool `protobuf:"varint,2,opt,name=is_main_language,json=isMainLanguage,proto3" json:"is_main_language,omitempty" xml:"IsMainLanguage,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Language) Reset() {
	*x = Language{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[148]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[148]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{148}
}

func (x *Language) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Language) GetIsMainLanguage() bool {
	if x != nil {
		return x.IsMainLanguage
	}
	return false
}

type MarketingComment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketingComment) Reset() {
	*x = MarketingComment{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[149]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketingComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketingComment) ProtoMessage() {}

func (x *MarketingComment) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[149]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketingComment.ProtoReflect.Descriptor instead.
func (*MarketingComment) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{149}
}

func (x *MarketingComment) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *MarketingComment) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *MarketingComment) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *MarketingComment) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type MessageAuditTrail struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageAuditTrailEvent"
	MessageAuditTrailEvent []*MessageAuditTrailEvent `protobuf:"bytes,1,rep,name=message_audit_trail_event,json=messageAuditTrailEvent,proto3" json:"message_audit_trail_event,omitempty" xml:"MessageAuditTrailEvent"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MessageAuditTrail) Reset() {
	*x = MessageAuditTrail{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[150]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAuditTrail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAuditTrail) ProtoMessage() {}

func (x *MessageAuditTrail) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[150]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAuditTrail.ProtoReflect.Descriptor instead.
func (*MessageAuditTrail) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{150}
}

func (x *MessageAuditTrail) GetMessageAuditTrailEvent() []*MessageAuditTrailEvent {
	if x != nil {
		return x.MessageAuditTrailEvent
	}
	return nil
}

type MessageAuditTrailEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessagingPartyDescriptor"
	MessagingPartyDescriptor *MessagingPartyWithoutCode `protobuf:"bytes,1,opt,name=messaging_party_descriptor,json=messagingPartyDescriptor,proto3" json:"messaging_party_descriptor,omitempty" xml:"MessagingPartyDescriptor"`
	// @gotags: xml:"DateTime"
	DateTime      string `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty" xml:"DateTime"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageAuditTrailEvent) Reset() {
	*x = MessageAuditTrailEvent{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageAuditTrailEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAuditTrailEvent) ProtoMessage() {}

func (x *MessageAuditTrailEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAuditTrailEvent.ProtoReflect.Descriptor instead.
func (*MessageAuditTrailEvent) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{151}
}

func (x *MessageAuditTrailEvent) GetMessagingPartyDescriptor() *MessagingPartyWithoutCode {
	if x != nil {
		return x.MessagingPartyDescriptor
	}
	return nil
}

func (x *MessageAuditTrailEvent) GetDateTime() string {
	if x != nil {
		return x.DateTime
	}
	return ""
}

type MessageHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"MessageThreadId"
	MessageThreadId string `protobuf:"bytes,1,opt,name=message_thread_id,json=messageThreadId,proto3" json:"message_thread_id,omitempty" xml:"MessageThreadId"`
	// @gotags: xml:"MessageId"
	MessageId string `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty" xml:"MessageId"`
	// @gotags: xml:"MessageFileName"
	MessageFileName string `protobuf:"bytes,3,opt,name=message_file_name,json=messageFileName,proto3" json:"message_file_name,omitempty" xml:"MessageFileName"`
	// @gotags: xml:"MessageSender"
	MessageSender *MessagingPartyWithoutCode `protobuf:"bytes,4,opt,name=message_sender,json=messageSender,proto3" json:"message_sender,omitempty" xml:"MessageSender"`
	// @gotags: xml:"SentOnBehalfOf"
	SentOnBehalfOf *MessagingPartyWithoutCode `protobuf:"bytes,5,opt,name=sent_on_behalf_of,json=sentOnBehalfOf,proto3" json:"sent_on_behalf_of,omitempty" xml:"SentOnBehalfOf"`
	// @gotags: xml:"MessageRecipient"
	MessageRecipient []*MessagingPartyWithoutCode `protobuf:"bytes,6,rep,name=message_recipient,json=messageRecipient,proto3" json:"message_recipient,omitempty" xml:"MessageRecipient"`
	// @gotags: xml:"SentAsRequestedBy"
	SentAsRequestedBy *MessagingPartyWithoutCode `protobuf:"bytes,7,opt,name=sent_as_requested_by,json=sentAsRequestedBy,proto3" json:"sent_as_requested_by,omitempty" xml:"SentAsRequestedBy"`
	// @gotags: xml:"MessageCreatedDateTime"
	MessageCreatedDateTime string `protobuf:"bytes,8,opt,name=message_created_date_time,json=messageCreatedDateTime,proto3" json:"message_created_date_time,omitempty" xml:"MessageCreatedDateTime"`
	// @gotags: xml:"MessageAuditTrail"
	MessageAuditTrail *MessageAuditTrail `protobuf:"bytes,9,opt,name=message_audit_trail,json=messageAuditTrail,proto3" json:"message_audit_trail,omitempty" xml:"MessageAuditTrail"`
	// @gotags: xml:"MessageControlType"
	MessageControlType avs.MessageControlType `protobuf:"varint,10,opt,name=message_control_type,json=messageControlType,proto3,enum=ddex.avs.MessageControlType" json:"message_control_type,omitempty" xml:"MessageControlType"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MessageHeader) Reset() {
	*x = MessageHeader{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[152]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageHeader) ProtoMessage() {}

func (x *MessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[152]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageHeader.ProtoReflect.Descriptor instead.
func (*MessageHeader) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{152}
}

func (x *MessageHeader) GetMessageThreadId() string {
	if x != nil {
		return x.MessageThreadId
	}
	return ""
}

func (x *MessageHeader) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *MessageHeader) GetMessageFileName() string {
	if x != nil {
		return x.MessageFileName
	}
	return ""
}

func (x *MessageHeader) GetMessageSender() *MessagingPartyWithoutCode {
	if x != nil {
		return x.MessageSender
	}
	return nil
}

func (x *MessageHeader) GetSentOnBehalfOf() *MessagingPartyWithoutCode {
	if x != nil {
		return x.SentOnBehalfOf
	}
	return nil
}

func (x *MessageHeader) GetMessageRecipient() []*MessagingPartyWithoutCode {
	if x != nil {
		return x.MessageRecipient
	}
	return nil
}

func (x *MessageHeader) GetSentAsRequestedBy() *MessagingPartyWithoutCode {
	if x != nil {
		return x.SentAsRequestedBy
	}
	return nil
}

func (x *MessageHeader) GetMessageCreatedDateTime() string {
	if x != nil {
		return x.MessageCreatedDateTime
	}
	return ""
}

func (x *MessageHeader) GetMessageAuditTrail() *MessageAuditTrail {
	if x != nil {
		return x.MessageAuditTrail
	}
	return nil
}

func (x *MessageHeader) GetMessageControlType() avs.MessageControlType {
	if x != nil {
		return x.MessageControlType
	}
	return avs.MessageControlType(0)
}

type MessagingPartyWithoutCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"PartyId"
	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty" xml:"PartyId"`
	// @gotags: xml:"PartyName"
	PartyName *PartyNameWithoutCode `protobuf:"bytes,2,opt,name=party_name,json=partyName,proto3" json:"party_name,omitempty" xml:"PartyName"`
	// @gotags: xml:"TradingName"
	TradingName   string `protobuf:"bytes,3,opt,name=trading_name,json=tradingName,proto3" json:"trading_name,omitempty" xml:"TradingName"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessagingPartyWithoutCode) Reset() {
	*x = MessagingPartyWithoutCode{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[153]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessagingPartyWithoutCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagingPartyWithoutCode) ProtoMessage() {}

func (x *MessagingPartyWithoutCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[153]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagingPartyWithoutCode.ProtoReflect.Descriptor instead.
func (*MessagingPartyWithoutCode) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{153}
}

func (x *MessagingPartyWithoutCode) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *MessagingPartyWithoutCode) GetPartyName() *PartyNameWithoutCode {
	if x != nil {
		return x.PartyName
	}
	return nil
}

func (x *MessagingPartyWithoutCode) GetTradingName() string {
	if x != nil {
		return x.TradingName
	}
	return ""
}

type MusicalWorkId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISWC"
	ISWC string `protobuf:"bytes,1,opt,name=i_s_w_c,json=iSWC,proto3" json:"i_s_w_c,omitempty" xml:"ISWC"`
	// @gotags: xml:"OpusNumber"
	OpusNumber string `protobuf:"bytes,2,opt,name=opus_number,json=opusNumber,proto3" json:"opus_number,omitempty" xml:"OpusNumber"`
	// @gotags: xml:"ComposerCatalogNumber"
	ComposerCatalogNumber []string `protobuf:"bytes,3,rep,name=composer_catalog_number,json=composerCatalogNumber,proto3" json:"composer_catalog_number,omitempty" xml:"ComposerCatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,4,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"IsReplaced,attr"
	IsReplaced    bool `protobuf:"varint,5,opt,name=is_replaced,json=isReplaced,proto3" json:"is_replaced,omitempty" xml:"IsReplaced,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MusicalWorkId) Reset() {
	*x = MusicalWorkId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[154]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MusicalWorkId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MusicalWorkId) ProtoMessage() {}

func (x *MusicalWorkId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[154]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MusicalWorkId.ProtoReflect.Descriptor instead.
func (*MusicalWorkId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{154}
}

func (x *MusicalWorkId) GetISWC() string {
	if x != nil {
		return x.ISWC
	}
	return ""
}

func (x *MusicalWorkId) GetOpusNumber() string {
	if x != nil {
		return x.OpusNumber
	}
	return ""
}

func (x *MusicalWorkId) GetComposerCatalogNumber() []string {
	if x != nil {
		return x.ComposerCatalogNumber
	}
	return nil
}

func (x *MusicalWorkId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *MusicalWorkId) GetIsReplaced() bool {
	if x != nil {
		return x.IsReplaced
	}
	return false
}

type Name struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Name) Reset() {
	*x = Name{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[155]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[155]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{155}
}

func (x *Name) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Name) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type OperatingSystemType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Version,attr"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,4,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OperatingSystemType) Reset() {
	*x = OperatingSystemType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[156]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatingSystemType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatingSystemType) ProtoMessage() {}

func (x *OperatingSystemType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[156]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatingSystemType.ProtoReflect.Descriptor instead.
func (*OperatingSystemType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{156}
}

func (x *OperatingSystemType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *OperatingSystemType) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OperatingSystemType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *OperatingSystemType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type PLine struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Year"
	Year string `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty" xml:"Year"`
	// @gotags: xml:"PLineCompany"
	PLineCompany string `protobuf:"bytes,2,opt,name=p_line_company,json=pLineCompany,proto3" json:"p_line_company,omitempty" xml:"PLineCompany"`
	// @gotags: xml:"PLineText"
	PLineText string `protobuf:"bytes,3,opt,name=p_line_text,json=pLineText,proto3" json:"p_line_text,omitempty" xml:"PLineText"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,4,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,5,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault     bool `protobuf:"varint,6,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PLine) Reset() {
	*x = PLine{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[157]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PLine) ProtoMessage() {}

func (x *PLine) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[157]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PLine.ProtoReflect.Descriptor instead.
func (*PLine) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{157}
}

func (x *PLine) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *PLine) GetPLineCompany() string {
	if x != nil {
		return x.PLineCompany
	}
	return ""
}

func (x *PLine) GetPLineText() string {
	if x != nil {
		return x.PLineText
	}
	return ""
}

func (x *PLine) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *PLine) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *PLine) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

type ParentalWarningTypeWithStandard struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,2,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,3,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"TypeNamespace,attr"
	TypeNamespace string `protobuf:"bytes,4,opt,name=type_namespace,json=typeNamespace,proto3" json:"type_namespace,omitempty" xml:"TypeNamespace,attr"`
	// @gotags: xml:"TypeUserDefinedValue,attr"
	TypeUserDefinedValue string `protobuf:"bytes,5,opt,name=type_user_defined_value,json=typeUserDefinedValue,proto3" json:"type_user_defined_value,omitempty" xml:"TypeUserDefinedValue,attr"`
	// @gotags: xml:"ParentalWarningStandard,attr"
	ParentalWarningStandard avs.ParentalWarningStandard `protobuf:"varint,6,opt,name=parental_warning_standard,json=parentalWarningStandard,proto3,enum=ddex.avs.ParentalWarningStandard" json:"parental_warning_standard,omitempty" xml:"ParentalWarningStandard,attr"`
	// @gotags: xml:"StandardNamespace,attr"
	StandardNamespace string `protobuf:"bytes,7,opt,name=standard_namespace,json=standardNamespace,proto3" json:"standard_namespace,omitempty" xml:"StandardNamespace,attr"`
	// @gotags: xml:"StandardUserDefinedValue,attr"
	StandardUserDefinedValue string `protobuf:"bytes,8,opt,name=standard_user_defined_value,json=standardUserDefinedValue,proto3" json:"standard_user_defined_value,omitempty" xml:"StandardUserDefinedValue,attr"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ParentalWarningTypeWithStandard) Reset() {
	*x = ParentalWarningTypeWithStandard{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[158]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParentalWarningTypeWithStandard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParentalWarningTypeWithStandard) ProtoMessage() {}

func (x *ParentalWarningTypeWithStandard) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[158]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParentalWarningTypeWithStandard.ProtoReflect.Descriptor instead.
func (*ParentalWarningTypeWithStandard) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{158}
}

func (x *ParentalWarningTypeWithStandard) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ParentalWarningTypeWithStandard) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *ParentalWarningTypeWithStandard) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *ParentalWarningTypeWithStandard) GetTypeNamespace() string {
	if x != nil {
		return x.TypeNamespace
	}
	return ""
}

func (x *ParentalWarningTypeWithStandard) GetTypeUserDefinedValue() string {
	if x != nil {
		return x.TypeUserDefinedValue
	}
	return ""
}

func (x *ParentalWarningTypeWithStandard) GetParentalWarningStandard() avs.ParentalWarningStandard {
	if x != nil {
		return x.ParentalWarningStandard
	}
	return avs.ParentalWarningStandard(0)
}

func (x *ParentalWarningTypeWithStandard) GetStandardNamespace() string {
	if x != nil {
		return x.StandardNamespace
	}
	return ""
}

func (x *ParentalWarningTypeWithStandard) GetStandardUserDefinedValue() string {
	if x != nil {
		return x.StandardUserDefinedValue
	}
	return ""
}

type PartyName struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"FullName"
	FullName *Name `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty" xml:"FullName"`
	// @gotags: xml:"FullNameAsciiTranscribed"
	FullNameAsciiTranscribed string `protobuf:"bytes,2,opt,name=full_name_ascii_transcribed,json=fullNameAsciiTranscribed,proto3" json:"full_name_ascii_transcribed,omitempty" xml:"FullNameAsciiTranscribed"`
	// @gotags: xml:"FullNameIndexed"
	FullNameIndexed *Name `protobuf:"bytes,3,opt,name=full_name_indexed,json=fullNameIndexed,proto3" json:"full_name_indexed,omitempty" xml:"FullNameIndexed"`
	// @gotags: xml:"NamesBeforeKeyName"
	NamesBeforeKeyName *Name `protobuf:"bytes,4,opt,name=names_before_key_name,json=namesBeforeKeyName,proto3" json:"names_before_key_name,omitempty" xml:"NamesBeforeKeyName"`
	// @gotags: xml:"KeyName"
	KeyName *Name `protobuf:"bytes,5,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty" xml:"KeyName"`
	// @gotags: xml:"NamesAfterKeyName"
	NamesAfterKeyName *Name `protobuf:"bytes,6,opt,name=names_after_key_name,json=namesAfterKeyName,proto3" json:"names_after_key_name,omitempty" xml:"NamesAfterKeyName"`
	// @gotags: xml:"AbbreviatedName"
	AbbreviatedName *Name `protobuf:"bytes,7,opt,name=abbreviated_name,json=abbreviatedName,proto3" json:"abbreviated_name,omitempty" xml:"AbbreviatedName"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,8,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *PartyName) Reset() {
	*x = PartyName{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[159]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyName) ProtoMessage() {}

func (x *PartyName) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[159]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyName.ProtoReflect.Descriptor instead.
func (*PartyName) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{159}
}

func (x *PartyName) GetFullName() *Name {
	if x != nil {
		return x.FullName
	}
	return nil
}

func (x *PartyName) GetFullNameAsciiTranscribed() string {
	if x != nil {
		return x.FullNameAsciiTranscribed
	}
	return ""
}

func (x *PartyName) GetFullNameIndexed() *Name {
	if x != nil {
		return x.FullNameIndexed
	}
	return nil
}

func (x *PartyName) GetNamesBeforeKeyName() *Name {
	if x != nil {
		return x.NamesBeforeKeyName
	}
	return nil
}

func (x *PartyName) GetKeyName() *Name {
	if x != nil {
		return x.KeyName
	}
	return nil
}

func (x *PartyName) GetNamesAfterKeyName() *Name {
	if x != nil {
		return x.NamesAfterKeyName
	}
	return nil
}

func (x *PartyName) GetAbbreviatedName() *Name {
	if x != nil {
		return x.AbbreviatedName
	}
	return nil
}

func (x *PartyName) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type PartyNameWithoutCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"FullName"
	FullName string `protobuf:"bytes,1,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty" xml:"FullName"`
	// @gotags: xml:"FullNameAsciiTranscribed"
	FullNameAsciiTranscribed string `protobuf:"bytes,2,opt,name=full_name_ascii_transcribed,json=fullNameAsciiTranscribed,proto3" json:"full_name_ascii_transcribed,omitempty" xml:"FullNameAsciiTranscribed"`
	// @gotags: xml:"FullNameIndexed"
	FullNameIndexed string `protobuf:"bytes,3,opt,name=full_name_indexed,json=fullNameIndexed,proto3" json:"full_name_indexed,omitempty" xml:"FullNameIndexed"`
	// @gotags: xml:"NamesBeforeKeyName"
	NamesBeforeKeyName string `protobuf:"bytes,4,opt,name=names_before_key_name,json=namesBeforeKeyName,proto3" json:"names_before_key_name,omitempty" xml:"NamesBeforeKeyName"`
	// @gotags: xml:"KeyName"
	KeyName string `protobuf:"bytes,5,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty" xml:"KeyName"`
	// @gotags: xml:"NamesAfterKeyName"
	NamesAfterKeyName string `protobuf:"bytes,6,opt,name=names_after_key_name,json=namesAfterKeyName,proto3" json:"names_after_key_name,omitempty" xml:"NamesAfterKeyName"`
	// @gotags: xml:"AbbreviatedName"
	AbbreviatedName string `protobuf:"bytes,7,opt,name=abbreviated_name,json=abbreviatedName,proto3" json:"abbreviated_name,omitempty" xml:"AbbreviatedName"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PartyNameWithoutCode) Reset() {
	*x = PartyNameWithoutCode{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[160]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyNameWithoutCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyNameWithoutCode) ProtoMessage() {}

func (x *PartyNameWithoutCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[160]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyNameWithoutCode.ProtoReflect.Descriptor instead.
func (*PartyNameWithoutCode) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{160}
}

func (x *PartyNameWithoutCode) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetFullNameAsciiTranscribed() string {
	if x != nil {
		return x.FullNameAsciiTranscribed
	}
	return ""
}

func (x *PartyNameWithoutCode) GetFullNameIndexed() string {
	if x != nil {
		return x.FullNameIndexed
	}
	return ""
}

func (x *PartyNameWithoutCode) GetNamesBeforeKeyName() string {
	if x != nil {
		return x.NamesBeforeKeyName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetNamesAfterKeyName() string {
	if x != nil {
		return x.NamesAfterKeyName
	}
	return ""
}

func (x *PartyNameWithoutCode) GetAbbreviatedName() string {
	if x != nil {
		return x.AbbreviatedName
	}
	return ""
}

type PartyRelationshipType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	// @gotags: xml:"MayBeShared,attr"
	MayBeShared   bool `protobuf:"varint,4,opt,name=may_be_shared,json=mayBeShared,proto3" json:"may_be_shared,omitempty" xml:"MayBeShared,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartyRelationshipType) Reset() {
	*x = PartyRelationshipType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[161]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartyRelationshipType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartyRelationshipType) ProtoMessage() {}

func (x *PartyRelationshipType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[161]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartyRelationshipType.ProtoReflect.Descriptor instead.
func (*PartyRelationshipType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{161}
}

func (x *PartyRelationshipType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PartyRelationshipType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PartyRelationshipType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

func (x *PartyRelationshipType) GetMayBeShared() bool {
	if x != nil {
		return x.MayBeShared
	}
	return false
}

type Percentage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"HasMaxValueOfOne,attr"
	HasMaxValueOfOne bool `protobuf:"varint,2,opt,name=has_max_value_of_one,json=hasMaxValueOfOne,proto3" json:"has_max_value_of_one,omitempty" xml:"HasMaxValueOfOne,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Percentage) Reset() {
	*x = Percentage{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[162]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Percentage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Percentage) ProtoMessage() {}

func (x *Percentage) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[162]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Percentage.ProtoReflect.Descriptor instead.
func (*Percentage) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{162}
}

func (x *Percentage) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Percentage) GetHasMaxValueOfOne() bool {
	if x != nil {
		return x.HasMaxValueOfOne
	}
	return false
}

type Period struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Period) Reset() {
	*x = Period{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[163]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Period) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Period) ProtoMessage() {}

func (x *Period) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[163]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Period.ProtoReflect.Descriptor instead.
func (*Period) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{163}
}

type Prefix struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Prefix) Reset() {
	*x = Prefix{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[164]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Prefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prefix) ProtoMessage() {}

func (x *Prefix) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[164]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prefix.ProtoReflect.Descriptor instead.
func (*Prefix) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{164}
}

func (x *Prefix) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Prefix) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type Price struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"CurrencyCode,attr"
	CurrencyCode  avs.CurrencyCode `protobuf:"varint,2,opt,name=currency_code,json=currencyCode,proto3,enum=ddex.avs.CurrencyCode" json:"currency_code,omitempty" xml:"CurrencyCode,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Price) Reset() {
	*x = Price{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[165]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[165]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{165}
}

func (x *Price) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Price) GetCurrencyCode() avs.CurrencyCode {
	if x != nil {
		return x.CurrencyCode
	}
	return avs.CurrencyCode(0)
}

type PriceType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PriceType) Reset() {
	*x = PriceType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[166]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceType) ProtoMessage() {}

func (x *PriceType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[166]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceType.ProtoReflect.Descriptor instead.
func (*PriceType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{166}
}

func (x *PriceType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PriceType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type PromotionalCode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromotionalCode) Reset() {
	*x = PromotionalCode{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[167]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromotionalCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionalCode) ProtoMessage() {}

func (x *PromotionalCode) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[167]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionalCode.ProtoReflect.Descriptor instead.
func (*PromotionalCode) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{167}
}

func (x *PromotionalCode) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PromotionalCode) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type ProprietaryId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace     string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProprietaryId) Reset() {
	*x = ProprietaryId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[168]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProprietaryId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProprietaryId) ProtoMessage() {}

func (x *ProprietaryId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[168]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProprietaryId.ProtoReflect.Descriptor instead.
func (*ProprietaryId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{168}
}

func (x *ProprietaryId) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ProprietaryId) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type Purpose struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Purpose) Reset() {
	*x = Purpose{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[169]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Purpose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Purpose) ProtoMessage() {}

func (x *Purpose) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[169]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Purpose.ProtoReflect.Descriptor instead.
func (*Purpose) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{169}
}

func (x *Purpose) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Purpose) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Purpose) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type RatingAgency struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RatingAgency) Reset() {
	*x = RatingAgency{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[170]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RatingAgency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingAgency) ProtoMessage() {}

func (x *RatingAgency) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[170]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingAgency.ProtoReflect.Descriptor instead.
func (*RatingAgency) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{170}
}

func (x *RatingAgency) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RatingAgency) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RatingAgency) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type RatingReason struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RatingReason) Reset() {
	*x = RatingReason{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[171]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RatingReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingReason) ProtoMessage() {}

func (x *RatingReason) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[171]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingReason.ProtoReflect.Descriptor instead.
func (*RatingReason) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{171}
}

func (x *RatingReason) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RatingReason) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RatingReason) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type Reason struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Reason) Reset() {
	*x = Reason{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[172]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reason) ProtoMessage() {}

func (x *Reason) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[172]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reason.ProtoReflect.Descriptor instead.
func (*Reason) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{172}
}

func (x *Reason) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Reason) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

type RelatedParty struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"PartyRelatedPartyReference"
	PartyRelatedPartyReference string `protobuf:"bytes,1,opt,name=party_related_party_reference,json=partyRelatedPartyReference,proto3" json:"party_related_party_reference,omitempty" xml:"PartyRelatedPartyReference"`
	// @gotags: xml:"PartyRelationshipType"
	PartyRelationshipType *PartyRelationshipType `protobuf:"bytes,2,opt,name=party_relationship_type,json=partyRelationshipType,proto3" json:"party_relationship_type,omitempty" xml:"PartyRelationshipType"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RelatedParty) Reset() {
	*x = RelatedParty{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[173]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelatedParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelatedParty) ProtoMessage() {}

func (x *RelatedParty) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[173]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelatedParty.ProtoReflect.Descriptor instead.
func (*RelatedParty) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{173}
}

func (x *RelatedParty) GetPartyRelatedPartyReference() string {
	if x != nil {
		return x.PartyRelatedPartyReference
	}
	return ""
}

func (x *RelatedParty) GetPartyRelationshipType() *PartyRelationshipType {
	if x != nil {
		return x.PartyRelationshipType
	}
	return nil
}

type ReleaseRelationshipType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReleaseRelationshipType) Reset() {
	*x = ReleaseRelationshipType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[174]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseRelationshipType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseRelationshipType) ProtoMessage() {}

func (x *ReleaseRelationshipType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[174]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseRelationshipType.ProtoReflect.Descriptor instead.
func (*ReleaseRelationshipType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{174}
}

func (x *ReleaseRelationshipType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReleaseRelationshipType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ReleaseRelationshipType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ReleaseTypeForReleaseNotification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReleaseTypeForReleaseNotification) Reset() {
	*x = ReleaseTypeForReleaseNotification{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[175]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseTypeForReleaseNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseTypeForReleaseNotification) ProtoMessage() {}

func (x *ReleaseTypeForReleaseNotification) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[175]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseTypeForReleaseNotification.ProtoReflect.Descriptor instead.
func (*ReleaseTypeForReleaseNotification) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{175}
}

func (x *ReleaseTypeForReleaseNotification) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ReleaseTypeForReleaseNotification) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ReleaseTypeForReleaseNotification) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ResourceContainedResourceReference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceContainedResourceReference"
	ResourceContainedResourceReference string `protobuf:"bytes,1,opt,name=resource_contained_resource_reference,json=resourceContainedResourceReference,proto3" json:"resource_contained_resource_reference,omitempty" xml:"ResourceContainedResourceReference"`
	// @gotags: xml:"DurationUsed"
	DurationUsed string `protobuf:"bytes,2,opt,name=duration_used,json=durationUsed,proto3" json:"duration_used,omitempty" xml:"DurationUsed"`
	// @gotags: xml:"StartPoint"
	StartPoint string `protobuf:"bytes,3,opt,name=start_point,json=startPoint,proto3" json:"start_point,omitempty" xml:"StartPoint"`
	// @gotags: xml:"Purpose"
	Purpose       *Purpose `protobuf:"bytes,4,opt,name=purpose,proto3" json:"purpose,omitempty" xml:"Purpose"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceContainedResourceReference) Reset() {
	*x = ResourceContainedResourceReference{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[176]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceContainedResourceReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceContainedResourceReference) ProtoMessage() {}

func (x *ResourceContainedResourceReference) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[176]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceContainedResourceReference.ProtoReflect.Descriptor instead.
func (*ResourceContainedResourceReference) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{176}
}

func (x *ResourceContainedResourceReference) GetResourceContainedResourceReference() string {
	if x != nil {
		return x.ResourceContainedResourceReference
	}
	return ""
}

func (x *ResourceContainedResourceReference) GetDurationUsed() string {
	if x != nil {
		return x.DurationUsed
	}
	return ""
}

func (x *ResourceContainedResourceReference) GetStartPoint() string {
	if x != nil {
		return x.StartPoint
	}
	return ""
}

func (x *ResourceContainedResourceReference) GetPurpose() *Purpose {
	if x != nil {
		return x.Purpose
	}
	return nil
}

type ResourceContainedResourceReferenceList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ResourceContainedResourceReference"
	ResourceContainedResourceReference []*ResourceContainedResourceReference `protobuf:"bytes,1,rep,name=resource_contained_resource_reference,json=resourceContainedResourceReference,proto3" json:"resource_contained_resource_reference,omitempty" xml:"ResourceContainedResourceReference"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *ResourceContainedResourceReferenceList) Reset() {
	*x = ResourceContainedResourceReferenceList{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[177]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceContainedResourceReferenceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceContainedResourceReferenceList) ProtoMessage() {}

func (x *ResourceContainedResourceReferenceList) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[177]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceContainedResourceReferenceList.ProtoReflect.Descriptor instead.
func (*ResourceContainedResourceReferenceList) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{177}
}

func (x *ResourceContainedResourceReferenceList) GetResourceContainedResourceReference() []*ResourceContainedResourceReference {
	if x != nil {
		return x.ResourceContainedResourceReference
	}
	return nil
}

type ResourceContributorRole struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ResourceContributorRole) Reset() {
	*x = ResourceContributorRole{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[178]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceContributorRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceContributorRole) ProtoMessage() {}

func (x *ResourceContributorRole) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[178]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceContributorRole.ProtoReflect.Descriptor instead.
func (*ResourceContributorRole) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{178}
}

func (x *ResourceContributorRole) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ResourceContributorRole) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResourceContributorRole) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type ResourceId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISRC"
	ISRC string `protobuf:"bytes,1,opt,name=i_s_r_c,json=iSRC,proto3" json:"i_s_r_c,omitempty" xml:"ISRC"`
	// @gotags: xml:"ISMN"
	ISMN string `protobuf:"bytes,2,opt,name=i_s_m_n,json=iSMN,proto3" json:"i_s_m_n,omitempty" xml:"ISMN"`
	// @gotags: xml:"ISAN"
	ISAN string `protobuf:"bytes,3,opt,name=i_s_a_n,json=iSAN,proto3" json:"i_s_a_n,omitempty" xml:"ISAN"`
	// @gotags: xml:"VISAN"
	VISAN string `protobuf:"bytes,4,opt,name=v_i_s_a_n,json=vISAN,proto3" json:"v_i_s_a_n,omitempty" xml:"VISAN"`
	// @gotags: xml:"ISBN"
	ISBN string `protobuf:"bytes,5,opt,name=i_s_b_n,json=iSBN,proto3" json:"i_s_b_n,omitempty" xml:"ISBN"`
	// @gotags: xml:"ISSN"
	ISSN string `protobuf:"bytes,6,opt,name=i_s_s_n,json=iSSN,proto3" json:"i_s_s_n,omitempty" xml:"ISSN"`
	// @gotags: xml:"SICI"
	SICI string `protobuf:"bytes,7,opt,name=s_i_c_i,json=sICI,proto3" json:"s_i_c_i,omitempty" xml:"SICI"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber *CatalogNumber `protobuf:"bytes,8,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,9,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"IsReplaced,attr"
	IsReplaced    bool `protobuf:"varint,10,opt,name=is_replaced,json=isReplaced,proto3" json:"is_replaced,omitempty" xml:"IsReplaced,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceId) Reset() {
	*x = ResourceId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[179]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceId) ProtoMessage() {}

func (x *ResourceId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[179]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceId.ProtoReflect.Descriptor instead.
func (*ResourceId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{179}
}

func (x *ResourceId) GetISRC() string {
	if x != nil {
		return x.ISRC
	}
	return ""
}

func (x *ResourceId) GetISMN() string {
	if x != nil {
		return x.ISMN
	}
	return ""
}

func (x *ResourceId) GetISAN() string {
	if x != nil {
		return x.ISAN
	}
	return ""
}

func (x *ResourceId) GetVISAN() string {
	if x != nil {
		return x.VISAN
	}
	return ""
}

func (x *ResourceId) GetISBN() string {
	if x != nil {
		return x.ISBN
	}
	return ""
}

func (x *ResourceId) GetISSN() string {
	if x != nil {
		return x.ISSN
	}
	return ""
}

func (x *ResourceId) GetSICI() string {
	if x != nil {
		return x.SICI
	}
	return ""
}

func (x *ResourceId) GetCatalogNumber() *CatalogNumber {
	if x != nil {
		return x.CatalogNumber
	}
	return nil
}

func (x *ResourceId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *ResourceId) GetIsReplaced() bool {
	if x != nil {
		return x.IsReplaced
	}
	return false
}

type ResourceProprietaryId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,1,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"IsReplaced,attr"
	IsReplaced    bool `protobuf:"varint,2,opt,name=is_replaced,json=isReplaced,proto3" json:"is_replaced,omitempty" xml:"IsReplaced,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceProprietaryId) Reset() {
	*x = ResourceProprietaryId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[180]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceProprietaryId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceProprietaryId) ProtoMessage() {}

func (x *ResourceProprietaryId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[180]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceProprietaryId.ProtoReflect.Descriptor instead.
func (*ResourceProprietaryId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{180}
}

func (x *ResourceProprietaryId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *ResourceProprietaryId) GetIsReplaced() bool {
	if x != nil {
		return x.IsReplaced
	}
	return false
}

type RightsClaimPolicyReason struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RightsClaimPolicyReason) Reset() {
	*x = RightsClaimPolicyReason{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[181]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RightsClaimPolicyReason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RightsClaimPolicyReason) ProtoMessage() {}

func (x *RightsClaimPolicyReason) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[181]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RightsClaimPolicyReason.ProtoReflect.Descriptor instead.
func (*RightsClaimPolicyReason) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{181}
}

func (x *RightsClaimPolicyReason) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RightsClaimPolicyReason) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RightsClaimPolicyReason) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type RightsType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RightsType) Reset() {
	*x = RightsType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[182]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RightsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RightsType) ProtoMessage() {}

func (x *RightsType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[182]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RightsType.ProtoReflect.Descriptor instead.
func (*RightsType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{182}
}

func (x *RightsType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RightsType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RightsType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type SamplingRate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"UnitOfMeasure,attr"
	UnitOfMeasure avs.UnitOfFrequency `protobuf:"varint,2,opt,name=unit_of_measure,json=unitOfMeasure,proto3,enum=ddex.avs.UnitOfFrequency" json:"unit_of_measure,omitempty" xml:"UnitOfMeasure,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SamplingRate) Reset() {
	*x = SamplingRate{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[183]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SamplingRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SamplingRate) ProtoMessage() {}

func (x *SamplingRate) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[183]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SamplingRate.ProtoReflect.Descriptor instead.
func (*SamplingRate) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{183}
}

func (x *SamplingRate) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SamplingRate) GetUnitOfMeasure() avs.UnitOfFrequency {
	if x != nil {
		return x.UnitOfMeasure
	}
	return avs.UnitOfFrequency(0)
}

type SessionType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SessionType) Reset() {
	*x = SessionType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[184]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionType) ProtoMessage() {}

func (x *SessionType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[184]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionType.ProtoReflect.Descriptor instead.
func (*SessionType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{184}
}

func (x *SessionType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SessionType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SessionType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type SheetMusicCodecType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Version,attr"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,4,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SheetMusicCodecType) Reset() {
	*x = SheetMusicCodecType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[185]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SheetMusicCodecType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SheetMusicCodecType) ProtoMessage() {}

func (x *SheetMusicCodecType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[185]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SheetMusicCodecType.ProtoReflect.Descriptor instead.
func (*SheetMusicCodecType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{185}
}

func (x *SheetMusicCodecType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SheetMusicCodecType) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SheetMusicCodecType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SheetMusicCodecType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type SheetMusicId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISMN"
	ISMN string `protobuf:"bytes,1,opt,name=i_s_m_n,json=iSMN,proto3" json:"i_s_m_n,omitempty" xml:"ISMN"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,2,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"IsReplaced,attr"
	IsReplaced    bool `protobuf:"varint,3,opt,name=is_replaced,json=isReplaced,proto3" json:"is_replaced,omitempty" xml:"IsReplaced,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SheetMusicId) Reset() {
	*x = SheetMusicId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[186]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SheetMusicId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SheetMusicId) ProtoMessage() {}

func (x *SheetMusicId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[186]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SheetMusicId.ProtoReflect.Descriptor instead.
func (*SheetMusicId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{186}
}

func (x *SheetMusicId) GetISMN() string {
	if x != nil {
		return x.ISMN
	}
	return ""
}

func (x *SheetMusicId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *SheetMusicId) GetIsReplaced() bool {
	if x != nil {
		return x.IsReplaced
	}
	return false
}

type SheetMusicType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SheetMusicType) Reset() {
	*x = SheetMusicType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[187]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SheetMusicType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SheetMusicType) ProtoMessage() {}

func (x *SheetMusicType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[187]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SheetMusicType.ProtoReflect.Descriptor instead.
func (*SheetMusicType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{187}
}

func (x *SheetMusicType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SheetMusicType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SheetMusicType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type SoftwareType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SoftwareType) Reset() {
	*x = SoftwareType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[188]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoftwareType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoftwareType) ProtoMessage() {}

func (x *SoftwareType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[188]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoftwareType.ProtoReflect.Descriptor instead.
func (*SoftwareType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{188}
}

func (x *SoftwareType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SoftwareType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SoftwareType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type SoundRecordingId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISRC"
	ISRC string `protobuf:"bytes,1,opt,name=i_s_r_c,json=iSRC,proto3" json:"i_s_r_c,omitempty" xml:"ISRC"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber *CatalogNumber `protobuf:"bytes,2,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,3,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"IsReplaced,attr"
	IsReplaced    bool `protobuf:"varint,4,opt,name=is_replaced,json=isReplaced,proto3" json:"is_replaced,omitempty" xml:"IsReplaced,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SoundRecordingId) Reset() {
	*x = SoundRecordingId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[189]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoundRecordingId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundRecordingId) ProtoMessage() {}

func (x *SoundRecordingId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[189]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundRecordingId.ProtoReflect.Descriptor instead.
func (*SoundRecordingId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{189}
}

func (x *SoundRecordingId) GetISRC() string {
	if x != nil {
		return x.ISRC
	}
	return ""
}

func (x *SoundRecordingId) GetCatalogNumber() *CatalogNumber {
	if x != nil {
		return x.CatalogNumber
	}
	return nil
}

func (x *SoundRecordingId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *SoundRecordingId) GetIsReplaced() bool {
	if x != nil {
		return x.IsReplaced
	}
	return false
}

type SoundRecordingType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SoundRecordingType) Reset() {
	*x = SoundRecordingType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[190]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SoundRecordingType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SoundRecordingType) ProtoMessage() {}

func (x *SoundRecordingType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[190]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SoundRecordingType.ProtoReflect.Descriptor instead.
func (*SoundRecordingType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{190}
}

func (x *SoundRecordingType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SoundRecordingType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SoundRecordingType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type SpecialContributorType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SpecialContributorType) Reset() {
	*x = SpecialContributorType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[191]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpecialContributorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecialContributorType) ProtoMessage() {}

func (x *SpecialContributorType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[191]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecialContributorType.ProtoReflect.Descriptor instead.
func (*SpecialContributorType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{191}
}

func (x *SpecialContributorType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SpecialContributorType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SpecialContributorType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type SubGenreCategory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"Value"
	Value []*SubGenreCategoryValue `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" xml:"Value"`
	// @gotags: xml:"Description"
	Description   []*TextWithoutTerritory `protobuf:"bytes,2,rep,name=description,proto3" json:"description,omitempty" xml:"Description"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubGenreCategory) Reset() {
	*x = SubGenreCategory{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[192]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubGenreCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubGenreCategory) ProtoMessage() {}

func (x *SubGenreCategory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[192]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubGenreCategory.ProtoReflect.Descriptor instead.
func (*SubGenreCategory) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{192}
}

func (x *SubGenreCategory) GetValue() []*SubGenreCategoryValue {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SubGenreCategory) GetDescription() []*TextWithoutTerritory {
	if x != nil {
		return x.Description
	}
	return nil
}

type SubGenreCategoryValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SubGenreCategoryValue) Reset() {
	*x = SubGenreCategoryValue{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[193]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubGenreCategoryValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubGenreCategoryValue) ProtoMessage() {}

func (x *SubGenreCategoryValue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[193]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubGenreCategoryValue.ProtoReflect.Descriptor instead.
func (*SubGenreCategoryValue) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{193}
}

func (x *SubGenreCategoryValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SubGenreCategoryValue) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SubGenreCategoryValue) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TextCodecType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Version,attr"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,4,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TextCodecType) Reset() {
	*x = TextCodecType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[194]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextCodecType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextCodecType) ProtoMessage() {}

func (x *TextCodecType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[194]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextCodecType.ProtoReflect.Descriptor instead.
func (*TextCodecType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{194}
}

func (x *TextCodecType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TextCodecType) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *TextCodecType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TextCodecType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TextId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISBN"
	ISBN string `protobuf:"bytes,1,opt,name=i_s_b_n,json=iSBN,proto3" json:"i_s_b_n,omitempty" xml:"ISBN"`
	// @gotags: xml:"ISSN"
	ISSN string `protobuf:"bytes,2,opt,name=i_s_s_n,json=iSSN,proto3" json:"i_s_s_n,omitempty" xml:"ISSN"`
	// @gotags: xml:"SICI"
	SICI string `protobuf:"bytes,3,opt,name=s_i_c_i,json=sICI,proto3" json:"s_i_c_i,omitempty" xml:"SICI"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,4,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"IsReplaced,attr"
	IsReplaced    bool `protobuf:"varint,5,opt,name=is_replaced,json=isReplaced,proto3" json:"is_replaced,omitempty" xml:"IsReplaced,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextId) Reset() {
	*x = TextId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[195]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextId) ProtoMessage() {}

func (x *TextId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[195]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextId.ProtoReflect.Descriptor instead.
func (*TextId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{195}
}

func (x *TextId) GetISBN() string {
	if x != nil {
		return x.ISBN
	}
	return ""
}

func (x *TextId) GetISSN() string {
	if x != nil {
		return x.ISSN
	}
	return ""
}

func (x *TextId) GetSICI() string {
	if x != nil {
		return x.SICI
	}
	return ""
}

func (x *TextId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *TextId) GetIsReplaced() bool {
	if x != nil {
		return x.IsReplaced
	}
	return false
}

type TextType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TextType) Reset() {
	*x = TextType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[196]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextType) ProtoMessage() {}

func (x *TextType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[196]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextType.ProtoReflect.Descriptor instead.
func (*TextType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{196}
}

func (x *TextType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TextType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TextType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TextWithFormat struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"Format,attr"
	Format avs.TextCodecType `protobuf:"varint,5,opt,name=format,proto3,enum=ddex.avs.TextCodecType" json:"format,omitempty" xml:"Format,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,7,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TextWithFormat) Reset() {
	*x = TextWithFormat{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[197]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextWithFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextWithFormat) ProtoMessage() {}

func (x *TextWithFormat) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[197]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextWithFormat.ProtoReflect.Descriptor instead.
func (*TextWithFormat) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{197}
}

func (x *TextWithFormat) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TextWithFormat) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TextWithFormat) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *TextWithFormat) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *TextWithFormat) GetFormat() avs.TextCodecType {
	if x != nil {
		return x.Format
	}
	return avs.TextCodecType(0)
}

func (x *TextWithFormat) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TextWithFormat) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TextWithoutTerritory struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,2,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"ApplicableTerritoryCode,attr"
	ApplicableTerritoryCode avs.CurrentTerritoryCode `protobuf:"varint,3,opt,name=applicable_territory_code,json=applicableTerritoryCode,proto3,enum=ddex.avs.CurrentTerritoryCode" json:"applicable_territory_code,omitempty" xml:"ApplicableTerritoryCode,attr"`
	// @gotags: xml:"IsDefault,attr"
	IsDefault bool `protobuf:"varint,4,opt,name=is_default,json=isDefault,proto3" json:"is_default,omitempty" xml:"IsDefault,attr"`
	// @gotags: xml:"Format,attr"
	Format avs.TextCodecType `protobuf:"varint,5,opt,name=format,proto3,enum=ddex.avs.TextCodecType" json:"format,omitempty" xml:"Format,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,6,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,7,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TextWithoutTerritory) Reset() {
	*x = TextWithoutTerritory{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[198]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextWithoutTerritory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextWithoutTerritory) ProtoMessage() {}

func (x *TextWithoutTerritory) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[198]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextWithoutTerritory.ProtoReflect.Descriptor instead.
func (*TextWithoutTerritory) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{198}
}

func (x *TextWithoutTerritory) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TextWithoutTerritory) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TextWithoutTerritory) GetApplicableTerritoryCode() avs.CurrentTerritoryCode {
	if x != nil {
		return x.ApplicableTerritoryCode
	}
	return avs.CurrentTerritoryCode(0)
}

func (x *TextWithoutTerritory) GetIsDefault() bool {
	if x != nil {
		return x.IsDefault
	}
	return false
}

func (x *TextWithoutTerritory) GetFormat() avs.TextCodecType {
	if x != nil {
		return x.Format
	}
	return avs.TextCodecType(0)
}

func (x *TextWithoutTerritory) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TextWithoutTerritory) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type TitleDisplayInformation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"IsDisplayedInTitle"
	IsDisplayedInTitle bool `protobuf:"varint,1,opt,name=is_displayed_in_title,json=isDisplayedInTitle,proto3" json:"is_displayed_in_title,omitempty" xml:"IsDisplayedInTitle"`
	// @gotags: xml:"Prefix"
	Prefix []*Prefix `protobuf:"bytes,2,rep,name=prefix,proto3" json:"prefix,omitempty" xml:"Prefix"`
	// @gotags: xml:"LanguageAndScriptCode,attr"
	LanguageAndScriptCode string `protobuf:"bytes,3,opt,name=language_and_script_code,json=languageAndScriptCode,proto3" json:"language_and_script_code,omitempty" xml:"LanguageAndScriptCode,attr"`
	// @gotags: xml:"SequenceNumber,attr"
	SequenceNumber int32 `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty" xml:"SequenceNumber,attr"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TitleDisplayInformation) Reset() {
	*x = TitleDisplayInformation{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[199]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TitleDisplayInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TitleDisplayInformation) ProtoMessage() {}

func (x *TitleDisplayInformation) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[199]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TitleDisplayInformation.ProtoReflect.Descriptor instead.
func (*TitleDisplayInformation) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{199}
}

func (x *TitleDisplayInformation) GetIsDisplayedInTitle() bool {
	if x != nil {
		return x.IsDisplayedInTitle
	}
	return false
}

func (x *TitleDisplayInformation) GetPrefix() []*Prefix {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (x *TitleDisplayInformation) GetLanguageAndScriptCode() string {
	if x != nil {
		return x.LanguageAndScriptCode
	}
	return ""
}

func (x *TitleDisplayInformation) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

type ValidityPeriod struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"StartDate"
	StartDate *EventDate `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty" xml:"StartDate"`
	// @gotags: xml:"EndDate"
	EndDate       *EventDate `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty" xml:"EndDate"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ValidityPeriod) Reset() {
	*x = ValidityPeriod{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[200]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ValidityPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidityPeriod) ProtoMessage() {}

func (x *ValidityPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[200]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidityPeriod.ProtoReflect.Descriptor instead.
func (*ValidityPeriod) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{200}
}

func (x *ValidityPeriod) GetStartDate() *EventDate {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ValidityPeriod) GetEndDate() *EventDate {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type Venue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"VenueName"
	VenueName string `protobuf:"bytes,1,opt,name=venue_name,json=venueName,proto3" json:"venue_name,omitempty" xml:"VenueName"`
	// @gotags: xml:"VenueAddress"
	VenueAddress string `protobuf:"bytes,2,opt,name=venue_address,json=venueAddress,proto3" json:"venue_address,omitempty" xml:"VenueAddress"`
	// @gotags: xml:"TerritoryCode"
	TerritoryCode *AllTerritoryCode `protobuf:"bytes,3,opt,name=territory_code,json=territoryCode,proto3" json:"territory_code,omitempty" xml:"TerritoryCode"`
	// @gotags: xml:"LocationCode"
	LocationCode string `protobuf:"bytes,4,opt,name=location_code,json=locationCode,proto3" json:"location_code,omitempty" xml:"LocationCode"`
	// @gotags: xml:"VenueRoom"
	VenueRoom     string `protobuf:"bytes,5,opt,name=venue_room,json=venueRoom,proto3" json:"venue_room,omitempty" xml:"VenueRoom"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Venue) Reset() {
	*x = Venue{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[201]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Venue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Venue) ProtoMessage() {}

func (x *Venue) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[201]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Venue.ProtoReflect.Descriptor instead.
func (*Venue) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{201}
}

func (x *Venue) GetVenueName() string {
	if x != nil {
		return x.VenueName
	}
	return ""
}

func (x *Venue) GetVenueAddress() string {
	if x != nil {
		return x.VenueAddress
	}
	return ""
}

func (x *Venue) GetTerritoryCode() *AllTerritoryCode {
	if x != nil {
		return x.TerritoryCode
	}
	return nil
}

func (x *Venue) GetLocationCode() string {
	if x != nil {
		return x.LocationCode
	}
	return ""
}

func (x *Venue) GetVenueRoom() string {
	if x != nil {
		return x.VenueRoom
	}
	return ""
}

type VersionType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VersionType) Reset() {
	*x = VersionType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[202]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionType) ProtoMessage() {}

func (x *VersionType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[202]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionType.ProtoReflect.Descriptor instead.
func (*VersionType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{202}
}

func (x *VersionType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *VersionType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *VersionType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type VideoCodecType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Version,attr"
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" xml:"Version,attr"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,4,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VideoCodecType) Reset() {
	*x = VideoCodecType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[203]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoCodecType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoCodecType) ProtoMessage() {}

func (x *VideoCodecType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[203]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoCodecType.ProtoReflect.Descriptor instead.
func (*VideoCodecType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{203}
}

func (x *VideoCodecType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *VideoCodecType) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VideoCodecType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *VideoCodecType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type VideoDefinitionType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:",chardata"
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty" xml:",chardata"`
	// @gotags: xml:"Namespace,attr"
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty" xml:"Namespace,attr"`
	// @gotags: xml:"UserDefinedValue,attr"
	UserDefinedValue string `protobuf:"bytes,3,opt,name=user_defined_value,json=userDefinedValue,proto3" json:"user_defined_value,omitempty" xml:"UserDefinedValue,attr"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VideoDefinitionType) Reset() {
	*x = VideoDefinitionType{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[204]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoDefinitionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoDefinitionType) ProtoMessage() {}

func (x *VideoDefinitionType) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[204]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoDefinitionType.ProtoReflect.Descriptor instead.
func (*VideoDefinitionType) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{204}
}

func (x *VideoDefinitionType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *VideoDefinitionType) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *VideoDefinitionType) GetUserDefinedValue() string {
	if x != nil {
		return x.UserDefinedValue
	}
	return ""
}

type VideoId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @gotags: xml:"ISRC"
	ISRC string `protobuf:"bytes,1,opt,name=i_s_r_c,json=iSRC,proto3" json:"i_s_r_c,omitempty" xml:"ISRC"`
	// @gotags: xml:"ISAN"
	ISAN string `protobuf:"bytes,2,opt,name=i_s_a_n,json=iSAN,proto3" json:"i_s_a_n,omitempty" xml:"ISAN"`
	// @gotags: xml:"VISAN"
	VISAN string `protobuf:"bytes,3,opt,name=v_i_s_a_n,json=vISAN,proto3" json:"v_i_s_a_n,omitempty" xml:"VISAN"`
	// @gotags: xml:"CatalogNumber"
	CatalogNumber *CatalogNumber `protobuf:"bytes,4,opt,name=catalog_number,json=catalogNumber,proto3" json:"catalog_number,omitempty" xml:"CatalogNumber"`
	// @gotags: xml:"ProprietaryId"
	ProprietaryId []*ProprietaryId `protobuf:"bytes,5,rep,name=proprietary_id,json=proprietaryId,proto3" json:"proprietary_id,omitempty" xml:"ProprietaryId"`
	// @gotags: xml:"EIDR"
	EIDR []string `protobuf:"bytes,6,rep,name=e_i_d_r,json=eIDR,proto3" json:"e_i_d_r,omitempty" xml:"EIDR"`
	// @gotags: xml:"IsReplaced,attr"
	IsReplaced    bool `protobuf:"varint,7,opt,name=is_replaced,json=isReplaced,proto3" json:"is_replaced,omitempty" xml:"IsReplaced,attr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoId) Reset() {
	*x = VideoId{}
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[205]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoId) ProtoMessage() {}

func (x *VideoId) ProtoReflect() protoreflect.Message {
	mi := &file_ddex_ern_v432_v432_proto_msgTypes[205]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoId.ProtoReflect.Descriptor instead.
func (*VideoId) Descriptor() ([]byte, []int) {
	return file_ddex_ern_v432_v432_proto_rawDescGZIP(), []int{205}
}

func (x *VideoId) GetISRC() string {
	if x != nil {
		return x.ISRC
	}
	return ""
}

func (x *VideoId) GetISAN() string {
	if x != nil {
		return x.ISAN
	}
	return ""
}

func (x *VideoId) GetVISAN() string {
	if x != nil {
		return x.VISAN
	}
	return ""
}

func (x *VideoId) GetCatalogNumber() *CatalogNumber {
	if x != nil {
		return x.CatalogNumber
	}
	return nil
}

func (x *VideoId) GetProprietaryId() []*ProprietaryId {
	if x != nil {
		return x.ProprietaryId
	}
	return nil
}

func (x *VideoId) GetEIDR() []string {
	if x != nil {
		return x.EIDR
	}
	return nil
}

func (x *VideoId) GetIsReplaced() bool {
	if x != nil {
		return x.IsReplaced
	}
	return false
}

var File_ddex_ern_v432_v432_proto protoreflect.FileDescriptor

const file_ddex_ern_v432_v432_proto_rawDesc = "" +
	"\n" +
	"\x18ddex/ern/v432/v432.proto\x12\rddex.ern.v432\x1a\x12ddex/avs/avs.proto\"\xa8\a\n" +
	"\x11NewReleaseMessage\x12C\n" +
	"\x0emessage_header\x18\x01 \x01(\v2\x1c.ddex.ern.v432.MessageHeaderR\rmessageHeader\x12@\n" +
	"\rrelease_admin\x18\x02 \x03(\v2\x1b.ddex.ern.v432.ReleaseAdminR\freleaseAdmin\x127\n" +
	"\n" +
	"party_list\x18\x03 \x01(\v2\x18.ddex.ern.v432.PartyListR\tpartyList\x12A\n" +
	"\x0ecue_sheet_list\x18\x04 \x01(\v2\x1b.ddex.ern.v432.CueSheetListR\fcueSheetList\x12@\n" +
	"\rresource_list\x18\x05 \x01(\v2\x1b.ddex.ern.v432.ResourceListR\fresourceList\x12=\n" +
	"\fchapter_list\x18\x06 \x01(\v2\x1a.ddex.ern.v432.ChapterListR\vchapterList\x12=\n" +
	"\frelease_list\x18\a \x01(\v2\x1a.ddex.ern.v432.ReleaseListR\vreleaseList\x124\n" +
	"\tdeal_list\x18\b \x01(\v2\x17.ddex.ern.v432.DealListR\bdealList\x12e\n" +
	"\x1asupplemental_document_list\x18\t \x01(\v2'.ddex.ern.v432.SupplementalDocumentListR\x18supplementalDocumentList\x12^\n" +
	"\x1arelease_profile_version_id\x18\n" +
	" \x01(\x0e2!.ddex.avs.ReleaseProfileVersionIdR\x17releaseProfileVersionId\x12t\n" +
	"\"release_profile_variant_version_id\x18\v \x01(\x0e2(.ddex.avs.ReleaseProfileVariantVersionIdR\x1ereleaseProfileVariantVersionId\x12$\n" +
	"\x0eavs_version_id\x18\f \x01(\tR\favsVersionId\x127\n" +
	"\x18language_and_script_code\x18\r \x01(\tR\x15languageAndScriptCode\"\xfe\x01\n" +
	"\x13PurgeReleaseMessage\x12C\n" +
	"\x0emessage_header\x18\x01 \x01(\v2\x1c.ddex.ern.v432.MessageHeaderR\rmessageHeader\x12C\n" +
	"\x0epurged_release\x18\x02 \x01(\v2\x1c.ddex.ern.v432.PurgedReleaseR\rpurgedRelease\x12$\n" +
	"\x0eavs_version_id\x18\x03 \x01(\tR\favsVersionId\x127\n" +
	"\x18language_and_script_code\x18\x04 \x01(\tR\x15languageAndScriptCode\"\xa6\x01\n" +
	"\x1bAdministratingRecordCompany\x12C\n" +
	"\x1erecord_company_party_reference\x18\x01 \x01(\tR\x1brecordCompanyPartyReference\x12B\n" +
	"\x04role\x18\x02 \x01(\v2..ddex.ern.v432.AdministratingRecordCompanyRoleR\x04role\"\xab\x06\n" +
	"\x11AudioDeliveryFile\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12I\n" +
	"\x10container_format\x18\x02 \x01(\v2\x1e.ddex.ern.v432.ContainerFormatR\x0fcontainerFormat\x12G\n" +
	"\x10audio_codec_type\x18\x03 \x01(\v2\x1d.ddex.ern.v432.AudioCodecTypeR\x0eaudioCodecType\x121\n" +
	"\bbit_rate\x18\x04 \x01(\v2\x16.ddex.ern.v432.BitRateR\abitRate\x12B\n" +
	"\x11original_bit_rate\x18\x05 \x01(\v2\x16.ddex.ern.v432.BitRateR\x0foriginalBitRate\x12,\n" +
	"\x12number_of_channels\x18\x06 \x01(\tR\x10numberOfChannels\x125\n" +
	"\x17number_of_audio_objects\x18\a \x01(\x05R\x14numberOfAudioObjects\x12@\n" +
	"\rsampling_rate\x18\b \x01(\v2\x1b.ddex.ern.v432.SamplingRateR\fsamplingRate\x12Q\n" +
	"\x16original_sampling_rate\x18\t \x01(\v2\x1b.ddex.ern.v432.SamplingRateR\x14originalSamplingRate\x12&\n" +
	"\x0fbits_per_sample\x18\n" +
	" \x01(\x05R\rbitsPerSample\x12\x1a\n" +
	"\bduration\x18\v \x01(\tR\bduration\x12\x1b\n" +
	"\tbit_depth\x18\f \x01(\x05R\bbitDepth\x12'\n" +
	"\x04file\x18\r \x01(\v2\x13.ddex.ern.v432.FileR\x04file\x12<\n" +
	"\vfingerprint\x18\x0e \x03(\v2\x1a.ddex.ern.v432.FingerprintR\vfingerprint\x125\n" +
	"\x17is_provided_in_delivery\x18\x0f \x01(\bR\x14isProvidedInDelivery\"\x87\x02\n" +
	"\bAvRating\x12\x16\n" +
	"\x06rating\x18\x01 \x01(\tR\x06rating\x123\n" +
	"\x06agency\x18\x02 \x01(\v2\x1b.ddex.ern.v432.RatingAgencyR\x06agency\x123\n" +
	"\x06reason\x18\x03 \x01(\v2\x1b.ddex.ern.v432.RatingReasonR\x06reason\x12Z\n" +
	"\x19applicable_territory_code\x18\x04 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x05 \x01(\bR\tisDefault\"0\n" +
	"\x05Brand\x12'\n" +
	"\x0fbrand_reference\x18\x01 \x01(\tR\x0ebrandReference\"b\n" +
	"\aChannel\x12C\n" +
	"\x0eproprietary_id\x18\x01 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\x12\x12\n" +
	"\x05u_r_l\x18\x02 \x03(\tR\x03uRL\"\xf8\x05\n" +
	"\aChapter\x12+\n" +
	"\x11chapter_reference\x18\x01 \x01(\tR\x10chapterReference\x127\n" +
	"\n" +
	"chapter_id\x18\x02 \x03(\v2\x18.ddex.ern.v432.ChapterIdR\tchapterId\x12M\n" +
	"\x12display_title_text\x18\x03 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x04 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\x05 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\x06 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12'\n" +
	"\x0fsequence_number\x18\a \x01(\x05R\x0esequenceNumber\x12<\n" +
	"\vcontributor\x18\b \x03(\v2\x1a.ddex.ern.v432.ContributorR\vcontributor\x126\n" +
	"\tcharacter\x18\t \x03(\v2\x18.ddex.ern.v432.CharacterR\tcharacter\x12D\n" +
	"\x1erepresentative_image_reference\x18\n" +
	" \x01(\tR\x1crepresentativeImageReference\x12\x1d\n" +
	"\n" +
	"start_time\x18\v \x01(\tR\tstartTime\x12\x1a\n" +
	"\bduration\x18\f \x01(\tR\bduration\x12\x19\n" +
	"\bend_time\x18\r \x01(\tR\aendTime\x127\n" +
	"\x18language_and_script_code\x18\x0e \x01(\tR\x15languageAndScriptCode\"x\n" +
	"\vChapterList\x120\n" +
	"\achapter\x18\x01 \x03(\v2\x16.ddex.ern.v432.ChapterR\achapter\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"\xaa\x01\n" +
	"\tCharacter\x12:\n" +
	"\x19character_party_reference\x18\x01 \x01(\tR\x17characterPartyReference\x128\n" +
	"\tperformer\x18\x02 \x01(\v2\x1a.ddex.ern.v432.ContributorR\tperformer\x12'\n" +
	"\x0fsequence_number\x18\x03 \x01(\x05R\x0esequenceNumber\"\xde\x01\n" +
	"\vClipDetails\x124\n" +
	"\tclip_type\x18\x01 \x01(\v2\x17.ddex.ern.v432.ClipTypeR\bclipType\x12&\n" +
	"\x0ftop_left_corner\x18\x02 \x01(\tR\rtopLeftCorner\x12.\n" +
	"\x13bottom_right_corner\x18\x03 \x01(\tR\x11bottomRightCorner\x12A\n" +
	"\x0fexpression_type\x18\x04 \x01(\x0e2\x18.ddex.avs.ExpressionTypeR\x0eexpressionType\"\xbd\x05\n" +
	"\vClipRelease\x12+\n" +
	"\x11release_reference\x18\x01 \x01(\tR\x10releaseReference\x127\n" +
	"\n" +
	"release_id\x18\x02 \x01(\v2\x18.ddex.ern.v432.ReleaseIdR\treleaseId\x12M\n" +
	"\x12display_title_text\x18\x03 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x04 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\x05 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\x06 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12<\n" +
	"\x1arelease_resource_reference\x18\a \x01(\tR\x18releaseResourceReference\x12e\n" +
	"\x17release_label_reference\x18\b \x03(\v2-.ddex.ern.v432.ReleaseLabelReferenceWithPartyR\x15releaseLabelReference\x12F\n" +
	"\rdisplay_genre\x18\t \x03(\v2!.ddex.ern.v432.GenreWithTerritoryR\fdisplayGenre\x12F\n" +
	"\x0frelated_release\x18\n" +
	" \x03(\v2\x1d.ddex.ern.v432.RelatedReleaseR\x0erelatedRelease\"w\n" +
	"\x13CommercialModelType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xc7\x03\n" +
	"\x1dConditionForRightsClaimPolicy\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x122\n" +
	"\x04unit\x18\x02 \x01(\x0e2\x1e.ddex.avs.UnitOfConditionValueR\x04unit\x12J\n" +
	"\x12reference_creation\x18\x03 \x01(\x0e2\x1b.ddex.avs.ReferenceCreationR\x11referenceCreation\x12J\n" +
	"\x12relational_relator\x18\x04 \x01(\x0e2\x1b.ddex.avs.RelationalRelatorR\x11relationalRelator\x12D\n" +
	"\x10measurement_type\x18\x05 \x01(\x0e2\x19.ddex.avs.MeasurementTypeR\x0fmeasurementType\x120\n" +
	"\asegment\x18\x06 \x03(\v2\x16.ddex.ern.v432.SegmentR\asegment\x12L\n" +
	"\x11service_exception\x18\a \x03(\v2\x1f.ddex.ern.v432.ServiceExceptionR\x10serviceException\"b\n" +
	"\bCoreArea\x12&\n" +
	"\x0ftop_left_corner\x18\x01 \x01(\tR\rtopLeftCorner\x12.\n" +
	"\x13bottom_right_corner\x18\x02 \x01(\tR\x11bottomRightCorner\"\xb4\a\n" +
	"\x03Cue\x12;\n" +
	"\fcue_use_type\x18\x01 \x01(\v2\x19.ddex.ern.v432.CueUseTypeR\n" +
	"cueUseType\x12A\n" +
	"\x0ecue_theme_type\x18\x02 \x01(\v2\x1b.ddex.ern.v432.CueThemeTypeR\fcueThemeType\x12A\n" +
	"\x0ecue_vocal_type\x18\x03 \x01(\v2\x1b.ddex.ern.v432.CueVocalTypeR\fcueVocalType\x12c\n" +
	"\x1acue_visual_perception_type\x18\x04 \x01(\v2&.ddex.ern.v432.CueVisualPerceptionTypeR\x17cueVisualPerceptionType\x127\n" +
	"\n" +
	"cue_origin\x18\x05 \x01(\v2\x18.ddex.ern.v432.CueOriginR\tcueOrigin\x12M\n" +
	"\x12display_title_text\x18\x06 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\a \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\b \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\t \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12<\n" +
	"\vcontributor\x18\n" +
	" \x03(\v2\x1a.ddex.ern.v432.ContributorR\vcontributor\x12\x19\n" +
	"\bis_dance\x18\v \x01(\bR\aisDance\x12.\n" +
	"\x13has_musical_content\x18\f \x01(\bR\x11hasMusicalContent\x12+\n" +
	"\x06p_line\x18\r \x03(\v2\x14.ddex.ern.v432.PLineR\x05pLine\x12+\n" +
	"\x06c_line\x18\x0e \x03(\v2\x14.ddex.ern.v432.CLineR\x05cLine\x12\x1d\n" +
	"\n" +
	"start_time\x18\x0f \x01(\tR\tstartTime\x12\x1a\n" +
	"\bduration\x18\x10 \x01(\tR\bduration\x12\x19\n" +
	"\bend_time\x18\x11 \x01(\tR\aendTime\"\xe3\x01\n" +
	"\bCueSheet\x12>\n" +
	"\fcue_sheet_id\x18\x01 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\n" +
	"cueSheetId\x12.\n" +
	"\x13cue_sheet_reference\x18\x02 \x01(\tR\x11cueSheetReference\x12A\n" +
	"\x0ecue_sheet_type\x18\x03 \x01(\v2\x1b.ddex.ern.v432.CueSheetTypeR\fcueSheetType\x12$\n" +
	"\x03cue\x18\x04 \x03(\v2\x12.ddex.ern.v432.CueR\x03cue\"D\n" +
	"\fCueSheetList\x124\n" +
	"\tcue_sheet\x18\x01 \x03(\v2\x17.ddex.ern.v432.CueSheetR\bcueSheet\"\xa6\x03\n" +
	"\x04Deal\x12%\n" +
	"\x0edeal_reference\x18\x01 \x03(\tR\rdealReference\x12<\n" +
	"\x1bis_communicated_out_of_band\x18\x02 \x01(\bR\x17isCommunicatedOutOfBand\x127\n" +
	"\n" +
	"deal_terms\x18\x03 \x01(\v2\x18.ddex.ern.v432.DealTermsR\tdealTerms\x12\x9b\x01\n" +
	".deal_technical_resource_details_reference_list\x18\x04 \x01(\v28.ddex.ern.v432.DealTechnicalResourceDetailsReferenceListR)dealTechnicalResourceDetailsReferenceList\x12b\n" +
	"\x19distribution_channel_page\x18\x05 \x03(\v2&.ddex.ern.v432.DistributionChannelPageR\x17distributionChannelPage\"\xfb\x01\n" +
	"\bDealList\x12=\n" +
	"\frelease_deal\x18\x01 \x03(\v2\x1a.ddex.ern.v432.ReleaseDealR\vreleaseDeal\x12O\n" +
	"\x12release_visibility\x18\x02 \x03(\v2 .ddex.ern.v432.ReleaseVisibilityR\x11releaseVisibility\x12_\n" +
	"\x18track_release_visibility\x18\x03 \x03(\v2%.ddex.ern.v432.TrackReleaseVisibilityR\x16trackReleaseVisibility\"S\n" +
	"\x19DealResourceReferenceList\x126\n" +
	"\x17deal_resource_reference\x18\x01 \x03(\tR\x15dealResourceReference\"\x85\x01\n" +
	")DealTechnicalResourceDetailsReferenceList\x12X\n" +
	")deal_technical_resource_details_reference\x18\x01 \x03(\tR%dealTechnicalResourceDetailsReference\"\xe4\a\n" +
	"\tDealTerms\x12K\n" +
	"\x0fvalidity_period\x18\x01 \x03(\v2\".ddex.ern.v432.PeriodWithStartDateR\x0evalidityPeriod\x12V\n" +
	"\x15commercial_model_type\x18\x02 \x03(\v2\".ddex.ern.v432.CommercialModelTypeR\x13commercialModelType\x12=\n" +
	"\buse_type\x18\x03 \x03(\v2\".ddex.ern.v432.DiscoverableUseTypeR\auseType\x12P\n" +
	"\x13user_interface_type\x18\x04 \x03(\v2 .ddex.ern.v432.UserInterfaceTypeR\x11userInterfaceType\x12=\n" +
	"\fcarrier_type\x18\x05 \x03(\v2\x1a.ddex.ern.v432.CarrierTypeR\vcarrierType\x12g\n" +
	"\x17technical_instantiation\x18\x06 \x01(\v2..ddex.ern.v432.DealTermsTechnicalInstantiationR\x16technicalInstantiation\x12(\n" +
	"\x10number_of_usages\x18\a \x01(\x05R\x0enumberOfUsages\x12P\n" +
	"\x13rights_claim_policy\x18\b \x03(\v2 .ddex.ern.v432.RightsClaimPolicyR\x11rightsClaimPolicy\x12L\n" +
	"\x11price_information\x18\t \x03(\v2\x1f.ddex.ern.v432.PriceInformationR\x10priceInformation\x12)\n" +
	"\x11is_pre_order_deal\x18\n" +
	" \x01(\bR\x0eisPreOrderDeal\x12w\n" +
	"#instant_gratification_resource_list\x18\v \x01(\v2(.ddex.ern.v432.DealResourceReferenceListR instantGratificationResourceList\x12I\n" +
	"\x10physical_returns\x18\f \x01(\v2\x1e.ddex.ern.v432.PhysicalReturnsR\x0fphysicalReturns\x12@\n" +
	"\x1dnumber_of_products_per_carton\x18\r \x01(\x05R\x19numberOfProductsPerCarton\"\xe3\x01\n" +
	"\x1fDealTermsTechnicalInstantiation\x12V\n" +
	"\x15video_definition_type\x18\x01 \x01(\v2\".ddex.ern.v432.VideoDefinitionTypeR\x13videoDefinitionType\x125\n" +
	"\vcoding_type\x18\x02 \x01(\x0e2\x14.ddex.avs.CodingTypeR\n" +
	"codingType\x121\n" +
	"\bbit_rate\x18\x03 \x01(\v2\x16.ddex.ern.v432.BitRateR\abitRate\"\x98\x01\n" +
	"\x05Deity\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12Z\n" +
	"\x19applicable_territory_code\x18\x02 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x03 \x01(\bR\tisDefault\"\x85\x02\n" +
	"\x14DelegatedUsageRights\x121\n" +
	"\buse_type\x18\x01 \x03(\v2\x16.ddex.ern.v432.UseTypeR\auseType\x12T\n" +
	"\x1bperiod_of_rights_delegation\x18\x02 \x01(\v2\x15.ddex.ern.v432.PeriodR\x18periodOfRightsDelegation\x12d\n" +
	"\x1eterritory_of_rights_delegation\x18\x03 \x03(\v2\x1f.ddex.ern.v432.AllTerritoryCodeR\x1bterritoryOfRightsDelegation\"\xe4\x01\n" +
	"\x18DescriptionWithTerritory\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\"\x98\x03\n" +
	"\x1bDetailedResourceContributor\x122\n" +
	"\x04role\x18\x01 \x03(\v2\x1e.ddex.ern.v432.ContributorRoleR\x04role\x12F\n" +
	"\x0finstrument_type\x18\x02 \x03(\v2\x1d.ddex.ern.v432.InstrumentTypeR\x0einstrumentType\x12C\n" +
	"\x1ehas_made_featured_contribution\x18\x03 \x01(\bR\x1bhasMadeFeaturedContribution\x12G\n" +
	" has_made_contracted_contribution\x18\x04 \x01(\bR\x1dhasMadeContractedContribution\x12F\n" +
	"\x0fdisplay_credits\x18\x05 \x03(\v2\x1d.ddex.ern.v432.DisplayCreditsR\x0edisplayCredits\x12'\n" +
	"\x0fsequence_number\x18\x06 \x01(\x05R\x0esequenceNumber\"\xa0\x01\n" +
	"\x13DiscoverableUseType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12'\n" +
	"\x0fis_discoverable\x18\x03 \x01(\bR\x0eisDiscoverable\x12,\n" +
	"\x12user_defined_value\x18\x04 \x01(\tR\x10userDefinedValue\"\xa9\x02\n" +
	"\rDisplayArtist\x12C\n" +
	"\rartistic_role\x18\x01 \x03(\v2\x1e.ddex.ern.v432.ContributorRoleR\fartisticRole\x12b\n" +
	"\x19title_display_information\x18\x02 \x03(\v2&.ddex.ern.v432.TitleDisplayInformationR\x17titleDisplayInformation\x12F\n" +
	"\x0fdisplay_credits\x18\x03 \x03(\v2\x1d.ddex.ern.v432.DisplayCreditsR\x0edisplayCredits\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x05R\x0esequenceNumber\"\x93\x02\n" +
	"\x10DisplayTitleText\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\x125\n" +
	"\x17is_in_original_language\x18\x05 \x01(\bR\x14isInOriginalLanguage\"\xb7\x01\n" +
	"\x17DistributionChannelPage\x129\n" +
	"\bparty_id\x18\x01 \x03(\v2\x1e.ddex.ern.v432.DetailedPartyIdR\apartyId\x120\n" +
	"\tpage_name\x18\x02 \x01(\v2\x13.ddex.ern.v432.NameR\bpageName\x12\x12\n" +
	"\x05u_r_l\x18\x03 \x01(\tR\x03uRL\x12\x1b\n" +
	"\tuser_name\x18\x04 \x01(\tR\buserName\"\xc2\x03\n" +
	"\x12EditionContributor\x122\n" +
	"\x04role\x18\x01 \x03(\v2\x1e.ddex.ern.v432.ContributorRoleR\x04role\x12=\n" +
	"\x0fai_contribution\x18\x02 \x01(\x0e2\x14.ddex.avs.ContainsAIR\x0eaiContribution\x12C\n" +
	"\x1ehas_made_featured_contribution\x18\x03 \x01(\bR\x1bhasMadeFeaturedContribution\x12G\n" +
	" has_made_contracted_contribution\x18\x04 \x01(\bR\x1dhasMadeContractedContribution\x12:\n" +
	"\vis_credited\x18\x05 \x01(\v2\x19.ddex.ern.v432.IsCreditedR\n" +
	"isCredited\x12F\n" +
	"\x0fdisplay_credits\x18\x06 \x03(\v2\x1d.ddex.ern.v432.DisplayCreditsR\x0edisplayCredits\x12'\n" +
	"\x0fsequence_number\x18\a \x01(\x05R\x0esequenceNumber\"\xa0\x02\n" +
	"\x19EventDateTimeWithoutFlags\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x121\n" +
	"\x14location_description\x18\x04 \x01(\tR\x13locationDescription\x127\n" +
	"\x18language_and_script_code\x18\x05 \x01(\tR\x15languageAndScriptCode\"\xa4\x02\n" +
	"\x1dEventDateWithCurrentTerritory\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x121\n" +
	"\x14location_description\x18\x04 \x01(\tR\x13locationDescription\x127\n" +
	"\x18language_and_script_code\x18\x05 \x01(\tR\x15languageAndScriptCode\"\xca\x01\n" +
	"\x14EventDateWithDefault\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\x12V\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1a.ddex.avs.AllTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\"\x98\x02\n" +
	"\x15EventDateWithoutFlags\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\x12V\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1a.ddex.avs.AllTerritoryCodeR\x17applicableTerritoryCode\x121\n" +
	"\x14location_description\x18\x04 \x01(\tR\x13locationDescription\x127\n" +
	"\x18language_and_script_code\x18\x05 \x01(\tR\x15languageAndScriptCode\"\xb0\x02\n" +
	"\x14ExternalResourceLink\x12\x12\n" +
	"\x05u_r_l\x18\x01 \x03(\tR\x03uRL\x12J\n" +
	"\x0fvalidity_period\x18\x02 \x01(\v2!.ddex.ern.v432.PeriodWithoutFlagsR\x0evalidityPeriod\x12#\n" +
	"\rexternal_link\x18\x03 \x01(\tR\fexternalLink\x12r\n" +
	"\x1fexternally_linked_resource_type\x18\x04 \x03(\v2+.ddex.ern.v432.ExternallyLinkedResourceTypeR\x1cexternallyLinkedResourceType\x12\x1f\n" +
	"\vfile_format\x18\x05 \x01(\tR\n" +
	"fileFormat\"\x87\x01\n" +
	"\x1bHdrVideoDynamicMetadataType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x128\n" +
	"\x18sdr_derivation_permitted\x18\x03 \x01(\bR\x16sdrDerivationPermitted\"\xa1\x0e\n" +
	"\x05Image\x12-\n" +
	"\x12resource_reference\x18\x01 \x01(\tR\x11resourceReference\x12,\n" +
	"\x04type\x18\x02 \x01(\v2\x18.ddex.ern.v432.ImageTypeR\x04type\x12E\n" +
	"\vresource_id\x18\x03 \x03(\v2$.ddex.ern.v432.ResourceProprietaryIdR\n" +
	"resourceId\x12M\n" +
	"\x12display_title_text\x18\x04 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x05 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\x06 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\a \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12=\n" +
	"\fversion_type\x18\b \x03(\v2\x1a.ddex.ern.v432.VersionTypeR\vversionType\x12d\n" +
	"\x13display_artist_name\x18\t \x03(\v24.ddex.ern.v432.DisplayArtistNameWithOriginalLanguageR\x11displayArtistName\x12C\n" +
	"\x0edisplay_artist\x18\n" +
	" \x03(\v2\x1c.ddex.ern.v432.DisplayArtistR\rdisplayArtist\x12<\n" +
	"\vcontributor\x18\v \x03(\v2\x1a.ddex.ern.v432.ContributorR\vcontributor\x12e\n" +
	"\x1aresource_rights_controller\x18\f \x03(\v2'.ddex.ern.v432.ResourceRightsControllerR\x18resourceRightsController\x12Y\n" +
	"\x16work_rights_controller\x18\r \x03(\v2#.ddex.ern.v432.WorkRightsControllerR\x14workRightsController\x12+\n" +
	"\x06c_line\x18\x0e \x03(\v2\x14.ddex.ern.v432.CLineR\x05cLine\x12@\n" +
	"\rcourtesy_line\x18\x0f \x03(\v2\x1b.ddex.ern.v432.CourtesyLineR\fcourtesyLine\x12I\n" +
	"\rcreation_date\x18\x10 \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\fcreationDate\x12T\n" +
	"\x16first_publication_date\x18\x11 \x03(\v2\x1e.ddex.ern.v432.FulfillmentDateR\x14firstPublicationDate\x12b\n" +
	"\x15parental_warning_type\x18\x12 \x03(\v2..ddex.ern.v432.ParentalWarningTypeWithStandardR\x13parentalWarningType\x12F\n" +
	"\x0frelated_release\x18\x13 \x03(\v2\x1d.ddex.ern.v432.RelatedReleaseR\x0erelatedRelease\x12I\n" +
	"\x10related_resource\x18\x14 \x03(\v2\x1e.ddex.ern.v432.RelatedResourceR\x0frelatedResource\x126\n" +
	"\fcontains_a_i\x18\x15 \x01(\x0e2\x14.ddex.avs.ContainsAIR\n" +
	"containsAI\x126\n" +
	"\x17contains_hidden_content\x18\x16 \x01(\bR\x15containsHiddenContent\x12I\n" +
	"\vdescription\x18\x17 \x03(\v2'.ddex.ern.v432.DescriptionWithTerritoryR\vdescription\x12Q\n" +
	"\x11technical_details\x18\x18 \x03(\v2$.ddex.ern.v432.TechnicalImageDetailsR\x10technicalDetails\x127\n" +
	"\x18language_and_script_code\x18\x19 \x01(\tR\x15languageAndScriptCode\x12'\n" +
	"\x0fis_supplemental\x18\x1a \x01(\bR\x0eisSupplemental\"\xce\x02\n" +
	"\x1eLinkedReleaseResourceReference\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12D\n" +
	"\x10link_description\x18\x02 \x01(\x0e2\x19.ddex.avs.LinkDescriptionR\x0flinkDescription\x127\n" +
	"\x18language_and_script_code\x18\x03 \x01(\tR\x15languageAndScriptCode\x12\x1c\n" +
	"\tnamespace\x18\x04 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x05 \x01(\tR\x10userDefinedValue\x12'\n" +
	"\x0fsequence_number\x18\x06 \x01(\x05R\x0esequenceNumber\x12\"\n" +
	"\ris_multi_file\x18\a \x01(\bR\visMultiFile\"\xad\x02\n" +
	"\x18LocationAndDateOfSession\x12=\n" +
	"\fsession_type\x18\x01 \x03(\v2\x1a.ddex.ern.v432.SessionTypeR\vsessionType\x12-\n" +
	"\x06period\x18\x02 \x01(\v2\x15.ddex.ern.v432.PeriodR\x06period\x12*\n" +
	"\x05venue\x18\x03 \x03(\v2\x14.ddex.ern.v432.VenueR\x05venue\x127\n" +
	"\acomment\x18\x04 \x01(\v2\x1d.ddex.ern.v432.TextWithFormatR\acomment\x12>\n" +
	"\vcontributor\x18\x05 \x03(\v2\x1c.ddex.ern.v432.PartyWithRoleR\vcontributor\"\xe0\x01\n" +
	"\x05Party\x12'\n" +
	"\x0fparty_reference\x18\x01 \x01(\tR\x0epartyReference\x12<\n" +
	"\vaffiliation\x18\x02 \x03(\v2\x1a.ddex.ern.v432.AffiliationR\vaffiliation\x12@\n" +
	"\rrelated_party\x18\x03 \x03(\v2\x1b.ddex.ern.v432.RelatedPartyR\frelatedParty\x12.\n" +
	"\x13artist_profile_page\x18\x04 \x03(\tR\x11artistProfilePage\"c\n" +
	"\tPartyList\x12*\n" +
	"\x05party\x18\x01 \x03(\v2\x14.ddex.ern.v432.PartyR\x05party\x12*\n" +
	"\x05brand\x18\x02 \x03(\v2\x14.ddex.ern.v432.BrandR\x05brand\"\x9c\x06\n" +
	"\x16PartyNameWithTerritory\x120\n" +
	"\tfull_name\x18\x01 \x01(\v2\x13.ddex.ern.v432.NameR\bfullName\x12=\n" +
	"\x1bfull_name_ascii_transcribed\x18\x02 \x01(\tR\x18fullNameAsciiTranscribed\x12?\n" +
	"\x11full_name_indexed\x18\x03 \x01(\v2\x13.ddex.ern.v432.NameR\x0ffullNameIndexed\x12F\n" +
	"\x15names_before_key_name\x18\x04 \x01(\v2\x13.ddex.ern.v432.NameR\x12namesBeforeKeyName\x12.\n" +
	"\bkey_name\x18\x05 \x01(\v2\x13.ddex.ern.v432.NameR\akeyName\x12D\n" +
	"\x14names_after_key_name\x18\x06 \x01(\v2\x13.ddex.ern.v432.NameR\x11namesAfterKeyName\x12>\n" +
	"\x10abbreviated_name\x18\a \x01(\v2\x13.ddex.ern.v432.NameR\x0fabbreviatedName\x127\n" +
	"\x18language_and_script_code\x18\b \x01(\tR\x15languageAndScriptCode\x12\x1f\n" +
	"\vis_nickname\x18\t \x01(\bR\n" +
	"isNickname\x12\"\n" +
	"\ris_stage_name\x18\n" +
	" \x01(\bR\visStageName\x12\"\n" +
	"\ris_legal_name\x18\v \x01(\bR\visLegalName\x12Z\n" +
	"\x19applicable_territory_code\x18\f \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\r \x01(\bR\tisDefault\x125\n" +
	"\x17is_in_original_language\x18\x0e \x01(\bR\x14isInOriginalLanguage\"\xc0\x02\n" +
	"\rPartyWithRole\x12\x15\n" +
	"\ai_s_n_i\x18\x01 \x01(\tR\x04iSNI\x12\x15\n" +
	"\ad_p_i_d\x18\x02 \x01(\tR\x04dPID\x12&\n" +
	"\x0fipi_name_number\x18\x03 \x01(\tR\ripiNameNumber\x12\x12\n" +
	"\x05i_p_n\x18\x04 \x01(\tR\x03iPN\x12C\n" +
	"\x0eproprietary_id\x18\x05 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\x12D\n" +
	"\n" +
	"party_name\x18\x06 \x01(\v2%.ddex.ern.v432.PartyNameWithTerritoryR\tpartyName\x12:\n" +
	"\x04role\x18\a \x01(\v2&.ddex.ern.v432.ResourceContributorRoleR\x04role\"\x15\n" +
	"\x13PeriodWithStartDate\"\x14\n" +
	"\x12PeriodWithoutFlags\"\x93\x01\n" +
	"\x0fPhysicalReturns\x128\n" +
	"\x18physical_returns_allowed\x18\x01 \x01(\bR\x16physicalReturnsAllowed\x12F\n" +
	" latest_date_for_physical_returns\x18\x02 \x01(\tR\x1clatestDateForPhysicalReturns\"\xd4\x03\n" +
	"\x10PriceInformation\x127\n" +
	"\n" +
	"price_code\x18\x01 \x01(\v2\x18.ddex.ern.v432.PriceTypeR\tpriceCode\x12M\n" +
	"\x18wholesale_price_per_unit\x18\x02 \x01(\v2\x14.ddex.ern.v432.PriceR\x15wholesalePricePerUnit\x12a\n" +
	"#bulk_order_wholesale_price_per_unit\x18\x03 \x01(\v2\x14.ddex.ern.v432.PriceR\x1ebulkOrderWholesalePricePerUnit\x12J\n" +
	"\x16suggested_retail_price\x18\x04 \x01(\v2\x14.ddex.ern.v432.PriceR\x14suggestedRetailPrice\x12=\n" +
	"\n" +
	"price_type\x18\x05 \x01(\x0e2\x1e.ddex.avs.PriceInformationTypeR\tpriceType\x12\x1c\n" +
	"\tnamespace\x18\x06 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\a \x01(\tR\x10userDefinedValue\"\xc2\x01\n" +
	"\rPurgedRelease\x127\n" +
	"\n" +
	"release_id\x18\x01 \x01(\v2\x18.ddex.ern.v432.ReleaseIdR\treleaseId\x12*\n" +
	"\x05title\x18\x02 \x03(\v2\x14.ddex.ern.v432.TitleR\x05title\x12L\n" +
	"\vcontributor\x18\x03 \x03(\v2*.ddex.ern.v432.DetailedResourceContributorR\vcontributor\"\x97\x01\n" +
	"\x04Raga\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12Z\n" +
	"\x19applicable_territory_code\x18\x02 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x03 \x01(\bR\tisDefault\"s\n" +
	"\x0fRecordingFormat\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xa9\x06\n" +
	"\x0eRelatedRelease\x12b\n" +
	"\x19release_relationship_type\x18\x01 \x01(\v2&.ddex.ern.v432.ReleaseRelationshipTypeR\x17releaseRelationshipType\x127\n" +
	"\n" +
	"release_id\x18\x02 \x01(\v2\x18.ddex.ern.v432.ReleaseIdR\treleaseId\x12M\n" +
	"\x12display_title_text\x18\x03 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x04 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\x05 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\x06 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12d\n" +
	"\x13display_artist_name\x18\a \x03(\v24.ddex.ern.v432.DisplayArtistNameWithOriginalLanguageR\x11displayArtistName\x12\\\n" +
	"\x17release_label_reference\x18\b \x03(\v2$.ddex.ern.v432.ReleaseLabelReferenceR\x15releaseLabelReference\x12G\n" +
	"\frelease_date\x18\t \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\vreleaseDate\x12X\n" +
	"\x15original_release_date\x18\n" +
	" \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\x13originalReleaseDate\"\xa2\x01\n" +
	"\x0fRelatedResource\x12`\n" +
	"\x1aresource_relationship_type\x18\x01 \x01(\x0e2\".ddex.avs.ResourceRelationshipTypeR\x18resourceRelationshipType\x12-\n" +
	"\x06timing\x18\x02 \x03(\v2\x15.ddex.ern.v432.TimingR\x06timing\"\xb1\x13\n" +
	"\aRelease\x12+\n" +
	"\x11release_reference\x18\x01 \x01(\tR\x10releaseReference\x12S\n" +
	"\frelease_type\x18\x02 \x03(\v20.ddex.ern.v432.ReleaseTypeForReleaseNotificationR\vreleaseType\x127\n" +
	"\n" +
	"release_id\x18\x03 \x01(\v2\x18.ddex.ern.v432.ReleaseIdR\treleaseId\x12M\n" +
	"\x12display_title_text\x18\x04 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x05 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\x06 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\a \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12=\n" +
	"\fversion_type\x18\b \x03(\v2\x1a.ddex.ern.v432.VersionTypeR\vversionType\x12d\n" +
	"\x13display_artist_name\x18\t \x03(\v24.ddex.ern.v432.DisplayArtistNameWithOriginalLanguageR\x11displayArtistName\x12C\n" +
	"\x0edisplay_artist\x18\n" +
	" \x03(\v2\x1c.ddex.ern.v432.DisplayArtistR\rdisplayArtist\x12e\n" +
	"\x17release_label_reference\x18\v \x03(\v2-.ddex.ern.v432.ReleaseLabelReferenceWithPartyR\x15releaseLabelReference\x12n\n" +
	"\x1dadministrating_record_company\x18\f \x03(\v2*.ddex.ern.v432.AdministratingRecordCompanyR\x1badministratingRecordCompany\x12+\n" +
	"\x06p_line\x18\r \x03(\v2\x14.ddex.ern.v432.PLineR\x05pLine\x12+\n" +
	"\x06c_line\x18\x0e \x03(\v2\x14.ddex.ern.v432.CLineR\x05cLine\x12@\n" +
	"\rcourtesy_line\x18\x0f \x03(\v2\x1b.ddex.ern.v432.CourtesyLineR\fcourtesyLine\x12\x1a\n" +
	"\bduration\x18\x10 \x01(\tR\bduration\x12F\n" +
	"\rdisplay_genre\x18\x11 \x03(\v2!.ddex.ern.v432.GenreWithTerritoryR\fdisplayGenre\x12F\n" +
	"\frelease_date\x18\x12 \x03(\v2#.ddex.ern.v432.EventDateWithDefaultR\vreleaseDate\x12W\n" +
	"\x15original_release_date\x18\x13 \x03(\v2#.ddex.ern.v432.EventDateWithDefaultR\x13originalReleaseDate\x12@\n" +
	"\x1crelease_visibility_reference\x18\x14 \x03(\tR\x1areleaseVisibilityReference\x12b\n" +
	"\x15parental_warning_type\x18\x15 \x03(\v2..ddex.ern.v432.ParentalWarningTypeWithStandardR\x13parentalWarningType\x124\n" +
	"\tav_rating\x18\x16 \x03(\v2\x17.ddex.ern.v432.AvRatingR\bavRating\x12F\n" +
	"\x0frelated_release\x18\x17 \x03(\v2\x1d.ddex.ern.v432.RelatedReleaseR\x0erelatedRelease\x12I\n" +
	"\x10related_resource\x18\x18 \x03(\v2\x1e.ddex.ern.v432.RelatedResourceR\x0frelatedResource\x12C\n" +
	"\x0eresource_group\x18\x19 \x01(\v2\x1c.ddex.ern.v432.ResourceGroupR\rresourceGroup\x12Y\n" +
	"\x16external_resource_link\x18\x1a \x03(\v2#.ddex.ern.v432.ExternalResourceLinkR\x14externalResourceLink\x12\x1f\n" +
	"\ftarget_u_r_l\x18\x1b \x01(\tR\ttargetURL\x12@\n" +
	"\bkeywords\x18\x1c \x03(\v2$.ddex.ern.v432.KeywordsWithTerritoryR\bkeywords\x12@\n" +
	"\bsynopsis\x18\x1d \x03(\v2$.ddex.ern.v432.SynopsisWithTerritoryR\bsynopsis\x12'\n" +
	"\x04raga\x18\x1e \x03(\v2\x13.ddex.ern.v432.RagaR\x04raga\x12'\n" +
	"\x04tala\x18\x1f \x03(\v2\x13.ddex.ern.v432.TalaR\x04tala\x12*\n" +
	"\x05deity\x18  \x03(\v2\x14.ddex.ern.v432.DeityR\x05deity\x127\n" +
	"\x18hi_res_music_description\x18! \x01(\tR\x15hiResMusicDescription\x126\n" +
	"\fcontains_a_i\x18\" \x01(\x0e2\x14.ddex.avs.ContainsAIR\n" +
	"containsAI\x12#\n" +
	"\ris_soundtrack\x18# \x01(\bR\fisSoundtrack\x12%\n" +
	"\x0fis_hi_res_music\x18$ \x01(\bR\fisHiResMusic\x12L\n" +
	"\x11marketing_comment\x18% \x03(\v2\x1f.ddex.ern.v432.MarketingCommentR\x10marketingComment\x127\n" +
	"\x18language_and_script_code\x18& \x01(\tR\x15languageAndScriptCode\"\x9c\x01\n" +
	"\fReleaseAdmin\x12(\n" +
	"\x10release_admin_id\x18\x01 \x01(\tR\x0ereleaseAdminId\x123\n" +
	"\x15personnel_description\x18\x02 \x01(\tR\x14personnelDescription\x12-\n" +
	"\x12system_description\x18\x03 \x03(\tR\x11systemDescription\"l\n" +
	"\vReleaseDeal\x124\n" +
	"\x16deal_release_reference\x18\x01 \x03(\tR\x14dealReleaseReference\x12'\n" +
	"\x04deal\x18\x02 \x03(\v2\x13.ddex.ern.v432.DealR\x04deal\"\xc1\x01\n" +
	"\tReleaseId\x12\x13\n" +
	"\x05g_rid\x18\x01 \x01(\tR\x04gRid\x12\x15\n" +
	"\ai_c_p_n\x18\x02 \x01(\tR\x04iCPN\x12C\n" +
	"\x0ecatalog_number\x18\x03 \x01(\v2\x1c.ddex.ern.v432.CatalogNumberR\rcatalogNumber\x12C\n" +
	"\x0eproprietary_id\x18\x04 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\"\xe1\x02\n" +
	"\x15ReleaseLabelReference\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x03 \x01(\bR\tisDefault\x122\n" +
	"\n" +
	"label_type\x18\x04 \x01(\x0e2\x13.ddex.avs.LabelTypeR\tlabelType\x12\x1c\n" +
	"\tnamespace\x18\x05 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x06 \x01(\tR\x10userDefinedValue\x12Z\n" +
	"\x19applicable_territory_code\x18\a \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\"\x9c\x03\n" +
	"\x1eReleaseLabelReferenceWithParty\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x03 \x01(\bR\tisDefault\x122\n" +
	"\n" +
	"label_type\x18\x04 \x01(\x0e2\x13.ddex.avs.LabelTypeR\tlabelType\x120\n" +
	"\x14access_control_party\x18\x05 \x01(\tR\x12accessControlParty\x12\x1c\n" +
	"\tnamespace\x18\x06 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\a \x01(\tR\x10userDefinedValue\x12Z\n" +
	"\x19applicable_territory_code\x18\b \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\"\xc0\x01\n" +
	"\vReleaseList\x120\n" +
	"\arelease\x18\x01 \x01(\v2\x16.ddex.ern.v432.ReleaseR\arelease\x12@\n" +
	"\rtrack_release\x18\x02 \x03(\v2\x1b.ddex.ern.v432.TrackReleaseR\ftrackRelease\x12=\n" +
	"\fclip_release\x18\x03 \x03(\v2\x1a.ddex.ern.v432.ClipReleaseR\vclipRelease\"\xa0\x03\n" +
	"\x11ReleaseVisibility\x121\n" +
	"\x14visibility_reference\x18\x01 \x01(\tR\x13visibilityReference\x12D\n" +
	"\x1frelease_display_start_date_time\x18\x02 \x01(\tR\x1breleaseDisplayStartDateTime\x12G\n" +
	"!cover_art_preview_start_date_time\x18\x03 \x01(\tR\x1ccoverArtPreviewStartDateTime\x12X\n" +
	"*full_track_listing_preview_start_date_time\x18\x04 \x01(\tR$fullTrackListingPreviewStartDateTime\x12>\n" +
	"\x1cclip_preview_start_date_time\x18\x05 \x01(\tR\x18clipPreviewStartDateTime\x12/\n" +
	"\x14do_not_display_dates\x18\x06 \x01(\bR\x11doNotDisplayDates\"\x97\x06\n" +
	"\rResourceGroup\x12M\n" +
	"\x12display_title_text\x18\x01 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x02 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\x03 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\x04 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12'\n" +
	"\x0fsequence_number\x18\x05 \x01(\x05R\x0esequenceNumber\x12C\n" +
	"\x0edisplay_artist\x18\x06 \x03(\v2\x1c.ddex.ern.v432.DisplayArtistR\rdisplayArtist\x12=\n" +
	"\fcarrier_type\x18\a \x03(\v2\x1a.ddex.ern.v432.CarrierTypeR\vcarrierType\x12\x1a\n" +
	"\bduration\x18\b \x01(\tR\bduration\x12F\n" +
	"\x0eresource_group\x18\t \x03(\v2\x1f.ddex.ern.v432.ResourceSubGroupR\rresourceGroup\x12f\n" +
	"\x1bresource_group_content_item\x18\n" +
	" \x03(\v2'.ddex.ern.v432.ResourceGroupContentItemR\x18resourceGroupContentItem\x12x\n" +
	"!linked_release_resource_reference\x18\v \x03(\v2-.ddex.ern.v432.LinkedReleaseResourceReferenceR\x1elinkedReleaseResourceReference\"\xb8\x03\n" +
	"\x18ResourceGroupContentItem\x12'\n" +
	"\x0fsequence_number\x18\x01 \x01(\x05R\x0esequenceNumber\x12<\n" +
	"\x1arelease_resource_reference\x18\x02 \x01(\tR\x18releaseResourceReference\x12x\n" +
	"!linked_release_resource_reference\x18\x03 \x03(\v2-.ddex.ern.v432.LinkedReleaseResourceReferenceR\x1elinkedReleaseResourceReference\x12*\n" +
	"\x11is_bonus_resource\x18\x04 \x01(\bR\x0fisBonusResource\x12I\n" +
	"!is_instant_gratification_resource\x18\x05 \x01(\bR\x1eisInstantGratificationResource\x12D\n" +
	"\x1fis_pre_order_incentive_resource\x18\x06 \x01(\bR\x1bisPreOrderIncentiveResource\"\xc8\x02\n" +
	"\fResourceList\x12F\n" +
	"\x0fsound_recording\x18\x01 \x03(\v2\x1d.ddex.ern.v432.SoundRecordingR\x0esoundRecording\x12*\n" +
	"\x05video\x18\x02 \x03(\v2\x14.ddex.ern.v432.VideoR\x05video\x12*\n" +
	"\x05image\x18\x03 \x03(\v2\x14.ddex.ern.v432.ImageR\x05image\x12'\n" +
	"\x04text\x18\x04 \x03(\v2\x13.ddex.ern.v432.TextR\x04text\x12:\n" +
	"\vsheet_music\x18\x05 \x03(\v2\x19.ddex.ern.v432.SheetMusicR\n" +
	"sheetMusic\x123\n" +
	"\bsoftware\x18\x06 \x03(\v2\x17.ddex.ern.v432.SoftwareR\bsoftware\"\xb9\x02\n" +
	"\x18ResourceRightsController\x12I\n" +
	"!rights_controller_party_reference\x18\x01 \x01(\tR\x1erightsControllerPartyReference\x12N\n" +
	"\x13rights_control_type\x18\x02 \x03(\x0e2\x1e.ddex.avs.RightsControllerRoleR\x11rightsControlType\x12Y\n" +
	"\x16delegated_usage_rights\x18\x03 \x03(\v2#.ddex.ern.v432.DelegatedUsageRightsR\x14delegatedUsageRights\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x05R\x0esequenceNumber\"\xe7\x06\n" +
	"\x10ResourceSubGroup\x12M\n" +
	"\x12display_title_text\x18\x01 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x02 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\x03 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\x04 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12'\n" +
	"\x0fsequence_number\x18\x05 \x01(\x05R\x0esequenceNumber\x12C\n" +
	"\x0edisplay_artist\x18\x06 \x03(\v2\x1c.ddex.ern.v432.DisplayArtistR\rdisplayArtist\x12=\n" +
	"\fcarrier_type\x18\a \x03(\v2\x1a.ddex.ern.v432.CarrierTypeR\vcarrierType\x12\x1a\n" +
	"\bduration\x18\b \x01(\tR\bduration\x12F\n" +
	"\x0eresource_group\x18\t \x03(\v2\x1f.ddex.ern.v432.ResourceSubGroupR\rresourceGroup\x12f\n" +
	"\x1bresource_group_content_item\x18\n" +
	" \x03(\v2'.ddex.ern.v432.ResourceGroupContentItemR\x18resourceGroupContentItem\x12x\n" +
	"!linked_release_resource_reference\x18\v \x03(\v2-.ddex.ern.v432.LinkedReleaseResourceReferenceR\x1elinkedReleaseResourceReference\x12K\n" +
	"\x13resource_group_type\x18\f \x01(\x0e2\x1b.ddex.avs.ResourceGroupTypeR\x11resourceGroupType\"\x9e\x02\n" +
	"\x11RightsClaimPolicy\x12J\n" +
	"\tcondition\x18\x01 \x03(\v2,.ddex.ern.v432.ConditionForRightsClaimPolicyR\tcondition\x12X\n" +
	"\x18rights_claim_policy_type\x18\x02 \x01(\x0e2\x1f.ddex.avs.RightsClaimPolicyTypeR\x15rightsClaimPolicyType\x12c\n" +
	"\x1arights_claim_policy_reason\x18\x03 \x01(\v2&.ddex.ern.v432.RightsClaimPolicyReasonR\x17rightsClaimPolicyReason\"(\n" +
	"\aSegment\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\tR\tstartTime\"\x90\x01\n" +
	"\x10ServiceException\x126\n" +
	"\ftrading_name\x18\x01 \x01(\v2\x13.ddex.ern.v432.NameR\vtradingName\x12\x12\n" +
	"\x05u_r_l\x18\x02 \x03(\tR\x03uRL\x120\n" +
	"\achannel\x18\x03 \x03(\v2\x16.ddex.ern.v432.ChannelR\achannel\"\x9d\x0f\n" +
	"\n" +
	"SheetMusic\x12-\n" +
	"\x12resource_reference\x18\x01 \x01(\tR\x11resourceReference\x121\n" +
	"\x04type\x18\x02 \x01(\v2\x1d.ddex.ern.v432.SheetMusicTypeR\x04type\x12<\n" +
	"\vresource_id\x18\x03 \x03(\v2\x1b.ddex.ern.v432.SheetMusicIdR\n" +
	"resourceId\x125\n" +
	"\awork_id\x18\x04 \x03(\v2\x1c.ddex.ern.v432.MusicalWorkIdR\x06workId\x12M\n" +
	"\x12display_title_text\x18\x05 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x06 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\a \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\b \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12=\n" +
	"\fversion_type\x18\t \x03(\v2\x1a.ddex.ern.v432.VersionTypeR\vversionType\x12d\n" +
	"\x13display_artist_name\x18\n" +
	" \x03(\v24.ddex.ern.v432.DisplayArtistNameWithOriginalLanguageR\x11displayArtistName\x12C\n" +
	"\x0edisplay_artist\x18\v \x03(\v2\x1c.ddex.ern.v432.DisplayArtistR\rdisplayArtist\x12<\n" +
	"\vcontributor\x18\f \x03(\v2\x1a.ddex.ern.v432.ContributorR\vcontributor\x12e\n" +
	"\x1aresource_rights_controller\x18\r \x03(\v2'.ddex.ern.v432.ResourceRightsControllerR\x18resourceRightsController\x12Y\n" +
	"\x16work_rights_controller\x18\x0e \x03(\v2#.ddex.ern.v432.WorkRightsControllerR\x14workRightsController\x12+\n" +
	"\x06c_line\x18\x0f \x03(\v2\x14.ddex.ern.v432.CLineR\x05cLine\x12@\n" +
	"\rcourtesy_line\x18\x10 \x03(\v2\x1b.ddex.ern.v432.CourtesyLineR\fcourtesyLine\x12I\n" +
	"\rcreation_date\x18\x11 \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\fcreationDate\x12T\n" +
	"\x16first_publication_date\x18\x12 \x03(\v2\x1e.ddex.ern.v432.FulfillmentDateR\x14firstPublicationDate\x12b\n" +
	"\x15parental_warning_type\x18\x13 \x03(\v2..ddex.ern.v432.ParentalWarningTypeWithStandardR\x13parentalWarningType\x12F\n" +
	"\x0frelated_release\x18\x14 \x03(\v2\x1d.ddex.ern.v432.RelatedReleaseR\x0erelatedRelease\x12I\n" +
	"\x10related_resource\x18\x15 \x03(\v2\x1e.ddex.ern.v432.RelatedResourceR\x0frelatedResource\x126\n" +
	"\x17contains_hidden_content\x18\x16 \x01(\bR\x15containsHiddenContent\x12,\n" +
	"\x12language_of_lyrics\x18\x17 \x01(\tR\x10languageOfLyrics\x12\x91\x01\n" +
	"*resource_contained_resource_reference_list\x18\x18 \x01(\v25.ddex.ern.v432.ResourceContainedResourceReferenceListR&resourceContainedResourceReferenceList\x12V\n" +
	"\x11technical_details\x18\x19 \x03(\v2).ddex.ern.v432.TechnicalSheetMusicDetailsR\x10technicalDetails\x127\n" +
	"\x18language_and_script_code\x18\x1a \x01(\tR\x15languageAndScriptCode\x12'\n" +
	"\x0fis_supplemental\x18\x1b \x01(\bR\x0eisSupplemental\"\x9f\x0f\n" +
	"\bSoftware\x12-\n" +
	"\x12resource_reference\x18\x01 \x01(\tR\x11resourceReference\x12/\n" +
	"\x04type\x18\x02 \x01(\v2\x1b.ddex.ern.v432.SoftwareTypeR\x04type\x12E\n" +
	"\vresource_id\x18\x03 \x03(\v2$.ddex.ern.v432.ResourceProprietaryIdR\n" +
	"resourceId\x125\n" +
	"\awork_id\x18\x04 \x03(\v2\x1c.ddex.ern.v432.MusicalWorkIdR\x06workId\x12M\n" +
	"\x12display_title_text\x18\x05 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x06 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\a \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\b \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12=\n" +
	"\fversion_type\x18\t \x03(\v2\x1a.ddex.ern.v432.VersionTypeR\vversionType\x12d\n" +
	"\x13display_artist_name\x18\n" +
	" \x03(\v24.ddex.ern.v432.DisplayArtistNameWithOriginalLanguageR\x11displayArtistName\x12C\n" +
	"\x0edisplay_artist\x18\v \x03(\v2\x1c.ddex.ern.v432.DisplayArtistR\rdisplayArtist\x12<\n" +
	"\vcontributor\x18\f \x03(\v2\x1a.ddex.ern.v432.ContributorR\vcontributor\x12e\n" +
	"\x1aresource_rights_controller\x18\r \x03(\v2'.ddex.ern.v432.ResourceRightsControllerR\x18resourceRightsController\x12Y\n" +
	"\x16work_rights_controller\x18\x0e \x03(\v2#.ddex.ern.v432.WorkRightsControllerR\x14workRightsController\x12+\n" +
	"\x06p_line\x18\x0f \x03(\v2\x14.ddex.ern.v432.PLineR\x05pLine\x12+\n" +
	"\x06c_line\x18\x10 \x03(\v2\x14.ddex.ern.v432.CLineR\x05cLine\x12@\n" +
	"\rcourtesy_line\x18\x11 \x03(\v2\x1b.ddex.ern.v432.CourtesyLineR\fcourtesyLine\x12I\n" +
	"\rcreation_date\x18\x12 \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\fcreationDate\x12T\n" +
	"\x16first_publication_date\x18\x13 \x03(\v2\x1e.ddex.ern.v432.FulfillmentDateR\x14firstPublicationDate\x12b\n" +
	"\x15parental_warning_type\x18\x14 \x03(\v2..ddex.ern.v432.ParentalWarningTypeWithStandardR\x13parentalWarningType\x12F\n" +
	"\x0frelated_release\x18\x15 \x03(\v2\x1d.ddex.ern.v432.RelatedReleaseR\x0erelatedRelease\x12I\n" +
	"\x10related_resource\x18\x16 \x03(\v2\x1e.ddex.ern.v432.RelatedResourceR\x0frelatedResource\x126\n" +
	"\x17contains_hidden_content\x18\x17 \x01(\bR\x15containsHiddenContent\x12\x91\x01\n" +
	"*resource_contained_resource_reference_list\x18\x18 \x01(\v25.ddex.ern.v432.ResourceContainedResourceReferenceListR&resourceContainedResourceReferenceList\x12T\n" +
	"\x11technical_details\x18\x19 \x03(\v2'.ddex.ern.v432.TechnicalSoftwareDetailsR\x10technicalDetails\x127\n" +
	"\x18language_and_script_code\x18\x1a \x01(\tR\x15languageAndScriptCode\x12'\n" +
	"\x0fis_supplemental\x18\x1b \x01(\bR\x0eisSupplemental\"\xb7\x17\n" +
	"\x0eSoundRecording\x12-\n" +
	"\x12resource_reference\x18\x01 \x01(\tR\x11resourceReference\x125\n" +
	"\x04type\x18\x02 \x01(\v2!.ddex.ern.v432.SoundRecordingTypeR\x04type\x12\\\n" +
	"\x17sound_recording_edition\x18\x03 \x03(\v2$.ddex.ern.v432.SoundRecordingEditionR\x15soundRecordingEdition\x12I\n" +
	"\x10recording_format\x18\x04 \x03(\v2\x1e.ddex.ern.v432.RecordingFormatR\x0frecordingFormat\x125\n" +
	"\awork_id\x18\x05 \x03(\v2\x1c.ddex.ern.v432.MusicalWorkIdR\x06workId\x12M\n" +
	"\x12display_title_text\x18\x06 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\a \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\b \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\t \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12=\n" +
	"\fversion_type\x18\n" +
	" \x03(\v2\x1a.ddex.ern.v432.VersionTypeR\vversionType\x12d\n" +
	"\x13display_artist_name\x18\v \x03(\v24.ddex.ern.v432.DisplayArtistNameWithOriginalLanguageR\x11displayArtistName\x12C\n" +
	"\x0edisplay_artist\x18\f \x03(\v2\x1c.ddex.ern.v432.DisplayArtistR\rdisplayArtist\x12<\n" +
	"\vcontributor\x18\r \x03(\v2\x1a.ddex.ern.v432.ContributorR\vcontributor\x126\n" +
	"\tcharacter\x18\x0e \x03(\v2\x18.ddex.ern.v432.CharacterR\tcharacter\x12e\n" +
	"\x1aresource_rights_controller\x18\x0f \x03(\v2'.ddex.ern.v432.ResourceRightsControllerR\x18resourceRightsController\x12Y\n" +
	"\x16work_rights_controller\x18\x10 \x03(\v2#.ddex.ern.v432.WorkRightsControllerR\x14workRightsController\x12@\n" +
	"\rcourtesy_line\x18\x11 \x03(\v2\x1b.ddex.ern.v432.CourtesyLineR\fcourtesyLine\x12\x1a\n" +
	"\bduration\x18\x12 \x01(\tR\bduration\x12I\n" +
	"\rcreation_date\x18\x13 \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\fcreationDate\x12I\n" +
	"\rmastered_date\x18\x14 \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\fmasteredDate\x12M\n" +
	"\x0fremastered_date\x18\x15 \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\x0eremasteredDate\x12Y\n" +
	"\x16first_publication_date\x18\x16 \x03(\v2#.ddex.ern.v432.FirstPublicationDateR\x14firstPublicationDate\x12g\n" +
	"\x1clocation_and_date_of_session\x18\x17 \x03(\v2'.ddex.ern.v432.LocationAndDateOfSessionR\x18locationAndDateOfSession\x12b\n" +
	"\x15parental_warning_type\x18\x18 \x03(\v2..ddex.ern.v432.ParentalWarningTypeWithStandardR\x13parentalWarningType\x12F\n" +
	"\x0frelated_release\x18\x19 \x03(\v2\x1d.ddex.ern.v432.RelatedReleaseR\x0erelatedRelease\x12I\n" +
	"\x10related_resource\x18\x1a \x03(\v2\x1e.ddex.ern.v432.RelatedResourceR\x0frelatedResource\x12a\n" +
	"\x1bcomposite_musical_work_type\x18\x1b \x01(\x0e2\".ddex.avs.CompositeMusicalWorkTypeR\x18compositeMusicalWorkType\x126\n" +
	"\fcontains_a_i\x18\x1c \x01(\x0e2\x14.ddex.avs.ContainsAIR\n" +
	"containsAI\x12\x19\n" +
	"\bis_cover\x18\x1d \x01(\bR\aisCover\x122\n" +
	"\x15has_vocal_performance\x18\x1e \x01(\bR\x13hasVocalPerformance\x12G\n" +
	" has_foreground_vocal_performance\x18\x1f \x01(\bR\x1dhasForegroundVocalPerformance\x12'\n" +
	"\x0fis_instrumental\x18  \x01(\bR\x0eisInstrumental\x126\n" +
	"\x17contains_hidden_content\x18! \x01(\bR\x15containsHiddenContent\x12#\n" +
	"\ris_remastered\x18\" \x01(\bR\fisRemastered\x12%\n" +
	"\x0fis_hi_res_music\x18# \x01(\bR\fisHiResMusic\x12+\n" +
	"\x11disable_crossfade\x18$ \x01(\bR\x10disableCrossfade\x12%\n" +
	"\x0edisable_search\x18% \x01(\bR\rdisableSearch\x12F\n" +
	"\x0fdisplay_credits\x18& \x03(\v2\x1d.ddex.ern.v432.DisplayCreditsR\x0edisplayCredits\x12O\n" +
	"\x17language_of_performance\x18' \x03(\v2\x17.ddex.ern.v432.LanguageR\x15languageOfPerformance\x12'\n" +
	"\x04raga\x18( \x03(\v2\x13.ddex.ern.v432.RagaR\x04raga\x12'\n" +
	"\x04tala\x18) \x03(\v2\x13.ddex.ern.v432.TalaR\x04tala\x12*\n" +
	"\x05deity\x18* \x03(\v2\x14.ddex.ern.v432.DeityR\x05deity\x126\n" +
	"\x17audio_chapter_reference\x18+ \x03(\tR\x15audioChapterReference\x127\n" +
	"\x18language_and_script_code\x18, \x01(\tR\x15languageAndScriptCode\x12'\n" +
	"\x0fis_supplemental\x18- \x01(\bR\x0eisSupplemental\x12E\n" +
	"\x1fapply_classical_profile_variant\x18. \x01(\bR\x1capplyClassicalProfileVariant\"\xdb\x02\n" +
	"\x19SoundRecordingClipDetails\x12O\n" +
	"$technical_resource_details_reference\x18\x01 \x01(\tR!technicalResourceDetailsReference\x124\n" +
	"\tclip_type\x18\x02 \x01(\v2\x17.ddex.ern.v432.ClipTypeR\bclipType\x12-\n" +
	"\x06timing\x18\x03 \x03(\v2\x15.ddex.ern.v432.TimingR\x06timing\x12A\n" +
	"\x0fexpression_type\x18\x04 \x01(\x0e2\x18.ddex.avs.ExpressionTypeR\x0eexpressionType\x12E\n" +
	"\rdelivery_file\x18\x05 \x03(\v2 .ddex.ern.v432.AudioDeliveryFileR\fdeliveryFile\"\xa1\x03\n" +
	"\x15SoundRecordingEdition\x12)\n" +
	"\x04type\x18\x01 \x01(\x0e2\x15.ddex.avs.EditionTypeR\x04type\x12@\n" +
	"\vresource_id\x18\x02 \x03(\v2\x1f.ddex.ern.v432.SoundRecordingIdR\n" +
	"resourceId\x12R\n" +
	"\x13edition_contributor\x18\x03 \x03(\v2!.ddex.ern.v432.EditionContributorR\x12editionContributor\x12+\n" +
	"\x06p_line\x18\x04 \x03(\v2\x14.ddex.ern.v432.PLineR\x05pLine\x12>\n" +
	"\x0erecording_mode\x18\x05 \x01(\x0e2\x17.ddex.avs.RecordingModeR\rrecordingMode\x12Z\n" +
	"\x11technical_details\x18\x06 \x03(\v2-.ddex.ern.v432.TechnicalSoundRecordingDetailsR\x10technicalDetails\"d\n" +
	"\x18SupplementalDocumentList\x12H\n" +
	"\x15supplemental_document\x18\x01 \x03(\v2\x13.ddex.ern.v432.FileR\x14supplementalDocument\"\x8d\x02\n" +
	"\x15SynopsisWithTerritory\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\x12*\n" +
	"\x11is_short_synopsis\x18\x05 \x01(\bR\x0fisShortSynopsis\"\x97\x01\n" +
	"\x04Tala\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12Z\n" +
	"\x19applicable_territory_code\x18\x02 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x03 \x01(\bR\tisDefault\"\xf5\x06\n" +
	"\x15TechnicalImageDetails\x12O\n" +
	"$technical_resource_details_reference\x18\x01 \x01(\tR!technicalResourceDetailsReference\x12G\n" +
	"\x10image_codec_type\x18\x02 \x01(\v2\x1d.ddex.ern.v432.ImageCodecTypeR\x0eimageCodecType\x128\n" +
	"\fimage_height\x18\x03 \x01(\v2\x15.ddex.ern.v432.ExtentR\vimageHeight\x126\n" +
	"\vimage_width\x18\x04 \x01(\v2\x15.ddex.ern.v432.ExtentR\n" +
	"imageWidth\x12=\n" +
	"\faspect_ratio\x18\x05 \x03(\v2\x1a.ddex.ern.v432.AspectRatioR\vaspectRatio\x12\x1f\n" +
	"\vcolor_depth\x18\x06 \x01(\x05R\n" +
	"colorDepth\x12)\n" +
	"\x10image_resolution\x18\a \x01(\x05R\x0fimageResolution\x12\x1b\n" +
	"\tbit_depth\x18\b \x01(\x05R\bbitDepth\x12\x17\n" +
	"\ais_clip\x18\t \x01(\bR\x06isClip\x12=\n" +
	"\fclip_details\x18\n" +
	" \x03(\v2\x1a.ddex.ern.v432.ClipDetailsR\vclipDetails\x12'\n" +
	"\x04file\x18\v \x01(\v2\x13.ddex.ern.v432.FileR\x04file\x125\n" +
	"\x17is_provided_in_delivery\x18\f \x01(\bR\x14isProvidedInDelivery\x12<\n" +
	"\vfingerprint\x18\r \x03(\v2\x1a.ddex.ern.v432.FingerprintR\vfingerprint\x127\n" +
	"\x18language_and_script_code\x18\x0e \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x0f \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x10 \x01(\bR\tisDefault\"\x8d\x05\n" +
	"\x1aTechnicalSheetMusicDetails\x12O\n" +
	"$technical_resource_details_reference\x18\x01 \x01(\tR!technicalResourceDetailsReference\x12W\n" +
	"\x16sheet_music_codec_type\x18\x02 \x01(\v2\".ddex.ern.v432.SheetMusicCodecTypeR\x13sheetMusicCodecType\x12\x1b\n" +
	"\tbit_depth\x18\x03 \x01(\x05R\bbitDepth\x12\x17\n" +
	"\ais_clip\x18\x04 \x01(\bR\x06isClip\x12=\n" +
	"\fclip_details\x18\x05 \x03(\v2\x1a.ddex.ern.v432.ClipDetailsR\vclipDetails\x12'\n" +
	"\x04file\x18\x06 \x01(\v2\x13.ddex.ern.v432.FileR\x04file\x125\n" +
	"\x17is_provided_in_delivery\x18\a \x01(\bR\x14isProvidedInDelivery\x12<\n" +
	"\vfingerprint\x18\b \x03(\v2\x1a.ddex.ern.v432.FingerprintR\vfingerprint\x127\n" +
	"\x18language_and_script_code\x18\t \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\n" +
	" \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\v \x01(\bR\tisDefault\"\x8a\x05\n" +
	"\x18TechnicalSoftwareDetails\x12O\n" +
	"$technical_resource_details_reference\x18\x01 \x01(\tR!technicalResourceDetailsReference\x12V\n" +
	"\x15operating_system_type\x18\x02 \x01(\v2\".ddex.ern.v432.OperatingSystemTypeR\x13operatingSystemType\x12\x1b\n" +
	"\tbit_depth\x18\x03 \x01(\x05R\bbitDepth\x12\x17\n" +
	"\ais_clip\x18\x04 \x01(\bR\x06isClip\x12=\n" +
	"\fclip_details\x18\x05 \x03(\v2\x1a.ddex.ern.v432.ClipDetailsR\vclipDetails\x12'\n" +
	"\x04file\x18\x06 \x01(\v2\x13.ddex.ern.v432.FileR\x04file\x125\n" +
	"\x17is_provided_in_delivery\x18\a \x01(\bR\x14isProvidedInDelivery\x12<\n" +
	"\vfingerprint\x18\b \x03(\v2\x1a.ddex.ern.v432.FingerprintR\vfingerprint\x127\n" +
	"\x18language_and_script_code\x18\t \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\n" +
	" \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\v \x01(\bR\tisDefault\"\x93\x04\n" +
	"\x1eTechnicalSoundRecordingDetails\x12O\n" +
	"$technical_resource_details_reference\x18\x01 \x01(\tR!technicalResourceDetailsReference\x12E\n" +
	"\rdelivery_file\x18\x02 \x03(\v2 .ddex.ern.v432.AudioDeliveryFileR\fdeliveryFile\x12?\n" +
	"\x1chas_immersive_audio_metadata\x18\x03 \x01(\bR\x19hasImmersiveAudioMetadata\x12\x17\n" +
	"\ais_clip\x18\x04 \x01(\bR\x06isClip\x12K\n" +
	"\fclip_details\x18\x05 \x03(\v2(.ddex.ern.v432.SoundRecordingClipDetailsR\vclipDetails\x127\n" +
	"\x18language_and_script_code\x18\x06 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\a \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\b \x01(\bR\tisDefault\"\xf4\x04\n" +
	"\x14TechnicalTextDetails\x12O\n" +
	"$technical_resource_details_reference\x18\x01 \x01(\tR!technicalResourceDetailsReference\x12D\n" +
	"\x0ftext_codec_type\x18\x02 \x01(\v2\x1c.ddex.ern.v432.TextCodecTypeR\rtextCodecType\x12\x1b\n" +
	"\tbit_depth\x18\x03 \x01(\x05R\bbitDepth\x12\x17\n" +
	"\ais_clip\x18\x04 \x01(\bR\x06isClip\x12=\n" +
	"\fclip_details\x18\x05 \x03(\v2\x1a.ddex.ern.v432.ClipDetailsR\vclipDetails\x12'\n" +
	"\x04file\x18\x06 \x01(\v2\x13.ddex.ern.v432.FileR\x04file\x125\n" +
	"\x17is_provided_in_delivery\x18\a \x01(\bR\x14isProvidedInDelivery\x12<\n" +
	"\vfingerprint\x18\b \x03(\v2\x1a.ddex.ern.v432.FingerprintR\vfingerprint\x127\n" +
	"\x18language_and_script_code\x18\t \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\n" +
	" \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\v \x01(\bR\tisDefault\"\x82\x04\n" +
	"\x15TechnicalVideoDetails\x12O\n" +
	"$technical_resource_details_reference\x18\x01 \x01(\tR!technicalResourceDetailsReference\x12@\n" +
	"\x10overall_bit_rate\x18\x02 \x01(\v2\x16.ddex.ern.v432.BitRateR\x0eoverallBitRate\x12E\n" +
	"\rdelivery_file\x18\x03 \x03(\v2 .ddex.ern.v432.VideoDeliveryFileR\fdeliveryFile\x12\x17\n" +
	"\ais_clip\x18\x04 \x01(\bR\x06isClip\x12B\n" +
	"\fclip_details\x18\x05 \x03(\v2\x1f.ddex.ern.v432.VideoClipDetailsR\vclipDetails\x127\n" +
	"\x18language_and_script_code\x18\x06 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\a \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\b \x01(\bR\tisDefault\"\xd2\x0f\n" +
	"\x04Text\x12-\n" +
	"\x12resource_reference\x18\x01 \x01(\tR\x11resourceReference\x12+\n" +
	"\x04type\x18\x02 \x01(\v2\x17.ddex.ern.v432.TextTypeR\x04type\x126\n" +
	"\vresource_id\x18\x03 \x03(\v2\x15.ddex.ern.v432.TextIdR\n" +
	"resourceId\x125\n" +
	"\awork_id\x18\x04 \x03(\v2\x1c.ddex.ern.v432.MusicalWorkIdR\x06workId\x12M\n" +
	"\x12display_title_text\x18\x05 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x06 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\a \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\b \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12=\n" +
	"\fversion_type\x18\t \x03(\v2\x1a.ddex.ern.v432.VersionTypeR\vversionType\x12d\n" +
	"\x13display_artist_name\x18\n" +
	" \x03(\v24.ddex.ern.v432.DisplayArtistNameWithOriginalLanguageR\x11displayArtistName\x12C\n" +
	"\x0edisplay_artist\x18\v \x03(\v2\x1c.ddex.ern.v432.DisplayArtistR\rdisplayArtist\x12<\n" +
	"\vcontributor\x18\f \x03(\v2\x1a.ddex.ern.v432.ContributorR\vcontributor\x12e\n" +
	"\x1aresource_rights_controller\x18\r \x03(\v2'.ddex.ern.v432.ResourceRightsControllerR\x18resourceRightsController\x12Y\n" +
	"\x16work_rights_controller\x18\x0e \x03(\v2#.ddex.ern.v432.WorkRightsControllerR\x14workRightsController\x12+\n" +
	"\x06c_line\x18\x0f \x03(\v2\x14.ddex.ern.v432.CLineR\x05cLine\x12@\n" +
	"\rcourtesy_line\x18\x10 \x03(\v2\x1b.ddex.ern.v432.CourtesyLineR\fcourtesyLine\x12I\n" +
	"\rcreation_date\x18\x11 \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\fcreationDate\x12T\n" +
	"\x16first_publication_date\x18\x12 \x03(\v2\x1e.ddex.ern.v432.FulfillmentDateR\x14firstPublicationDate\x12b\n" +
	"\x15parental_warning_type\x18\x13 \x03(\v2..ddex.ern.v432.ParentalWarningTypeWithStandardR\x13parentalWarningType\x12F\n" +
	"\x0frelated_release\x18\x14 \x03(\v2\x1d.ddex.ern.v432.RelatedReleaseR\x0erelatedRelease\x12I\n" +
	"\x10related_resource\x18\x15 \x03(\v2\x1e.ddex.ern.v432.RelatedResourceR\x0frelatedResource\x126\n" +
	"\fcontains_a_i\x18\x16 \x01(\x0e2\x14.ddex.avs.ContainsAIR\n" +
	"containsAI\x126\n" +
	"\x17contains_hidden_content\x18\x17 \x01(\bR\x15containsHiddenContent\x12\x91\x01\n" +
	"*resource_contained_resource_reference_list\x18\x18 \x01(\v25.ddex.ern.v432.ResourceContainedResourceReferenceListR&resourceContainedResourceReferenceList\x12P\n" +
	"\x11technical_details\x18\x19 \x03(\v2#.ddex.ern.v432.TechnicalTextDetailsR\x10technicalDetails\x12A\n" +
	"\x10language_of_text\x18\x1a \x03(\v2\x17.ddex.ern.v432.LanguageR\x0elanguageOfText\x127\n" +
	"\x18language_and_script_code\x18\x1b \x01(\tR\x15languageAndScriptCode\x12'\n" +
	"\x0fis_supplemental\x18\x1c \x01(\bR\x0eisSupplemental\"k\n" +
	"\x06Timing\x12\x1f\n" +
	"\vstart_point\x18\x01 \x01(\tR\n" +
	"startPoint\x12\x1b\n" +
	"\tend_point\x18\x02 \x01(\tR\bendPoint\x12#\n" +
	"\rduration_used\x18\x03 \x03(\tR\fdurationUsed\"\xba\x01\n" +
	"\x05Title\x12\x1d\n" +
	"\n" +
	"title_text\x18\x01 \x01(\tR\ttitleText\x12\x1b\n" +
	"\tsub_title\x18\x02 \x01(\tR\bsubTitle\x127\n" +
	"\x18language_and_script_code\x18\x03 \x01(\tR\x15languageAndScriptCode\x12<\n" +
	"\n" +
	"title_type\x18\x04 \x01(\x0e2\x1d.ddex.avs.AdditionalTitleTypeR\ttitleType\"\xe0\t\n" +
	"\fTrackRelease\x12+\n" +
	"\x11release_reference\x18\x01 \x01(\tR\x10releaseReference\x127\n" +
	"\n" +
	"release_id\x18\x02 \x01(\v2\x18.ddex.ern.v432.ReleaseIdR\treleaseId\x12M\n" +
	"\x12display_title_text\x18\x03 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\x04 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\x05 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\x06 \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12<\n" +
	"\x1arelease_resource_reference\x18\a \x01(\tR\x18releaseResourceReference\x12x\n" +
	"!linked_release_resource_reference\x18\b \x03(\v2-.ddex.ern.v432.LinkedReleaseResourceReferenceR\x1elinkedReleaseResourceReference\x12e\n" +
	"\x17release_label_reference\x18\t \x03(\v2-.ddex.ern.v432.ReleaseLabelReferenceWithPartyR\x15releaseLabelReference\x12F\n" +
	"\rdisplay_genre\x18\n" +
	" \x03(\v2!.ddex.ern.v432.GenreWithTerritoryR\fdisplayGenre\x12@\n" +
	"\x1crelease_visibility_reference\x18\v \x03(\tR\x1areleaseVisibilityReference\x12F\n" +
	"\x0frelated_release\x18\f \x03(\v2\x1d.ddex.ern.v432.RelatedReleaseR\x0erelatedRelease\x12I\n" +
	"\x10related_resource\x18\r \x03(\v2\x1e.ddex.ern.v432.RelatedResourceR\x0frelatedResource\x12\x1f\n" +
	"\ftarget_u_r_l\x18\x0e \x01(\tR\ttargetURL\x12@\n" +
	"\bkeywords\x18\x0f \x03(\v2$.ddex.ern.v432.KeywordsWithTerritoryR\bkeywords\x12@\n" +
	"\bsynopsis\x18\x10 \x03(\v2$.ddex.ern.v432.SynopsisWithTerritoryR\bsynopsis\x12L\n" +
	"\x11marketing_comment\x18\x11 \x03(\v2\x1f.ddex.ern.v432.MarketingCommentR\x10marketingComment\x12&\n" +
	"\x0fis_main_release\x18\x12 \x01(\bR\risMainRelease\"\x8d\x02\n" +
	"\x16TrackReleaseVisibility\x121\n" +
	"\x14visibility_reference\x18\x01 \x01(\tR\x13visibilityReference\x12O\n" +
	"%track_listing_preview_start_date_time\x18\x02 \x01(\tR trackListingPreviewStartDateTime\x12>\n" +
	"\x1cclip_preview_start_date_time\x18\x03 \x01(\tR\x18clipPreviewStartDateTime\x12/\n" +
	"\x14do_not_display_dates\x18\x04 \x01(\bR\x11doNotDisplayDates\"k\n" +
	"\aUseType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"u\n" +
	"\x11UserInterfaceType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x88\x17\n" +
	"\x05Video\x12-\n" +
	"\x12resource_reference\x18\x01 \x01(\tR\x11resourceReference\x12,\n" +
	"\x04type\x18\x02 \x01(\v2\x18.ddex.ern.v432.VideoTypeR\x04type\x12@\n" +
	"\rvideo_edition\x18\x03 \x03(\v2\x1b.ddex.ern.v432.VideoEditionR\fvideoEdition\x12I\n" +
	"\x10recording_format\x18\x04 \x03(\v2\x1e.ddex.ern.v432.RecordingFormatR\x0frecordingFormat\x125\n" +
	"\awork_id\x18\x05 \x03(\v2\x1c.ddex.ern.v432.MusicalWorkIdR\x06workId\x12M\n" +
	"\x12display_title_text\x18\x06 \x03(\v2\x1f.ddex.ern.v432.DisplayTitleTextR\x10displayTitleText\x12@\n" +
	"\rdisplay_title\x18\a \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\fdisplayTitle\x12>\n" +
	"\fformal_title\x18\b \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\vformalTitle\x12B\n" +
	"\x0egrouping_title\x18\t \x03(\v2\x1b.ddex.ern.v432.DisplayTitleR\rgroupingTitle\x12=\n" +
	"\fversion_type\x18\n" +
	" \x03(\v2\x1a.ddex.ern.v432.VersionTypeR\vversionType\x12d\n" +
	"\x13display_artist_name\x18\v \x03(\v24.ddex.ern.v432.DisplayArtistNameWithOriginalLanguageR\x11displayArtistName\x12C\n" +
	"\x0edisplay_artist\x18\f \x03(\v2\x1c.ddex.ern.v432.DisplayArtistR\rdisplayArtist\x12<\n" +
	"\vcontributor\x18\r \x03(\v2\x1a.ddex.ern.v432.ContributorR\vcontributor\x126\n" +
	"\tcharacter\x18\x0e \x03(\v2\x18.ddex.ern.v432.CharacterR\tcharacter\x12e\n" +
	"\x1aresource_rights_controller\x18\x0f \x03(\v2'.ddex.ern.v432.ResourceRightsControllerR\x18resourceRightsController\x12Y\n" +
	"\x16work_rights_controller\x18\x10 \x03(\v2#.ddex.ern.v432.WorkRightsControllerR\x14workRightsController\x12@\n" +
	"\rcourtesy_line\x18\x11 \x03(\v2\x1b.ddex.ern.v432.CourtesyLineR\fcourtesyLine\x12\x1a\n" +
	"\bduration\x18\x12 \x01(\tR\bduration\x12I\n" +
	"\rcreation_date\x18\x13 \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\fcreationDate\x12I\n" +
	"\rmastered_date\x18\x14 \x01(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\fmasteredDate\x12M\n" +
	"\x0fremastered_date\x18\x15 \x03(\v2$.ddex.ern.v432.EventDateWithoutFlagsR\x0eremasteredDate\x12T\n" +
	"\x16first_publication_date\x18\x16 \x03(\v2\x1e.ddex.ern.v432.FulfillmentDateR\x14firstPublicationDate\x12b\n" +
	"\x15parental_warning_type\x18\x17 \x03(\v2..ddex.ern.v432.ParentalWarningTypeWithStandardR\x13parentalWarningType\x124\n" +
	"\tav_rating\x18\x18 \x03(\v2\x17.ddex.ern.v432.AvRatingR\bavRating\x12F\n" +
	"\x0frelated_release\x18\x19 \x03(\v2\x1d.ddex.ern.v432.RelatedReleaseR\x0erelatedRelease\x12I\n" +
	"\x10related_resource\x18\x1a \x03(\v2\x1e.ddex.ern.v432.RelatedResourceR\x0frelatedResource\x12a\n" +
	"\x1bcomposite_musical_work_type\x18\x1b \x01(\x0e2\".ddex.avs.CompositeMusicalWorkTypeR\x18compositeMusicalWorkType\x126\n" +
	"\fcontains_a_i\x18\x1c \x01(\x0e2\x14.ddex.avs.ContainsAIR\n" +
	"containsAI\x12\x19\n" +
	"\bis_cover\x18\x1d \x01(\bR\aisCover\x122\n" +
	"\x15has_vocal_performance\x18\x1e \x01(\bR\x13hasVocalPerformance\x12G\n" +
	" has_foreground_vocal_performance\x18\x1f \x01(\bR\x1dhasForegroundVocalPerformance\x12'\n" +
	"\x0fis_instrumental\x18  \x01(\bR\x0eisInstrumental\x126\n" +
	"\x17contains_hidden_content\x18! \x01(\bR\x15containsHiddenContent\x12#\n" +
	"\ris_remastered\x18\" \x01(\bR\fisRemastered\x12F\n" +
	"\x0fdisplay_credits\x18# \x03(\v2\x1d.ddex.ern.v432.DisplayCreditsR\x0edisplayCredits\x12O\n" +
	"\x17language_of_performance\x18$ \x03(\v2\x17.ddex.ern.v432.LanguageR\x15languageOfPerformance\x12.\n" +
	"\x13language_of_dubbing\x18% \x03(\tR\x11languageOfDubbing\x12,\n" +
	"\x12sub_title_language\x18& \x03(\tR\x10subTitleLanguage\x12\x91\x01\n" +
	"*resource_contained_resource_reference_list\x18' \x01(\v25.ddex.ern.v432.ResourceContainedResourceReferenceListR&resourceContainedResourceReferenceList\x12\x12\n" +
	"\x04raga\x18( \x03(\tR\x04raga\x12\x12\n" +
	"\x04tala\x18) \x03(\tR\x04tala\x12\x14\n" +
	"\x05deity\x18* \x03(\tR\x05deity\x126\n" +
	"\x17video_chapter_reference\x18+ \x03(\tR\x15videoChapterReference\x127\n" +
	"\x18language_and_script_code\x18, \x01(\tR\x15languageAndScriptCode\x12'\n" +
	"\x0fis_supplemental\x18- \x01(\bR\x0eisSupplemental\x12E\n" +
	"\x1fapply_classical_profile_variant\x18. \x01(\bR\x1capplyClassicalProfileVariant\"\xaa\x03\n" +
	"\x10VideoClipDetails\x12O\n" +
	"$technical_resource_details_reference\x18\x01 \x01(\tR!technicalResourceDetailsReference\x124\n" +
	"\tclip_type\x18\x02 \x01(\v2\x17.ddex.ern.v432.ClipTypeR\bclipType\x12-\n" +
	"\x06timing\x18\x03 \x03(\v2\x15.ddex.ern.v432.TimingR\x06timing\x12&\n" +
	"\x0ftop_left_corner\x18\x04 \x01(\tR\rtopLeftCorner\x12.\n" +
	"\x13bottom_right_corner\x18\x05 \x01(\tR\x11bottomRightCorner\x12A\n" +
	"\x0fexpression_type\x18\x06 \x01(\x0e2\x18.ddex.avs.ExpressionTypeR\x0eexpressionType\x12E\n" +
	"\rdelivery_file\x18\a \x03(\v2 .ddex.ern.v432.VideoDeliveryFileR\fdeliveryFile\"\xe6\r\n" +
	"\x11VideoDeliveryFile\x12.\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1a.ddex.avs.DeliveryFileTypeR\x04type\x12I\n" +
	"\x10container_format\x18\x02 \x01(\v2\x1e.ddex.ern.v432.ContainerFormatR\x0fcontainerFormat\x12G\n" +
	"\x10video_codec_type\x18\x03 \x01(\v2\x1d.ddex.ern.v432.VideoCodecTypeR\x0evideoCodecType\x12<\n" +
	"\x0evideo_bit_rate\x18\x04 \x01(\v2\x16.ddex.ern.v432.BitRateR\fvideoBitRate\x127\n" +
	"\n" +
	"frame_rate\x18\x05 \x01(\v2\x18.ddex.ern.v432.FrameRateR\tframeRate\x128\n" +
	"\fimage_height\x18\x06 \x01(\v2\x15.ddex.ern.v432.ExtentR\vimageHeight\x126\n" +
	"\vimage_width\x18\a \x01(\v2\x15.ddex.ern.v432.ExtentR\n" +
	"imageWidth\x12=\n" +
	"\faspect_ratio\x18\b \x03(\v2\x1a.ddex.ern.v432.AspectRatioR\vaspectRatio\x124\n" +
	"\tcore_area\x18\t \x01(\v2\x17.ddex.ern.v432.CoreAreaR\bcoreArea\x12\x1f\n" +
	"\vcolor_depth\x18\n" +
	" \x01(\x05R\n" +
	"colorDepth\x12V\n" +
	"\x15video_definition_type\x18\v \x01(\v2\".ddex.ern.v432.VideoDefinitionTypeR\x13videoDefinitionType\x12G\n" +
	"\x10audio_codec_type\x18\f \x01(\v2\x1d.ddex.ern.v432.AudioCodecTypeR\x0eaudioCodecType\x12?\n" +
	"\x1chas_immersive_audio_metadata\x18\r \x01(\bR\x19hasImmersiveAudioMetadata\x12\x80\x01\n" +
	"&electro_optical_transfer_function_type\x18\x0e \x01(\x0e2,.ddex.avs.ElectroOpticalTransferFunctionTypeR\"electroOpticalTransferFunctionType\x12H\n" +
	"\x12primary_color_type\x18\x0f \x01(\x0e2\x1a.ddex.avs.PrimaryColorTypeR\x10primaryColorType\x12p\n" +
	"\x1fhdr_video_dynamic_metadata_type\x18\x10 \x01(\v2*.ddex.ern.v432.HdrVideoDynamicMetadataTypeR\x1bhdrVideoDynamicMetadataType\x12h\n" +
	"\x1ehdr_video_static_metadata_type\x18\x11 \x01(\x0e2$.ddex.avs.HdrVideoStaticMetadataTypeR\x1ahdrVideoStaticMetadataType\x12<\n" +
	"\x0eaudio_bit_rate\x18\x12 \x01(\v2\x16.ddex.ern.v432.BitRateR\faudioBitRate\x127\n" +
	"\x18number_of_audio_channels\x18\x13 \x01(\x05R\x15numberOfAudioChannels\x125\n" +
	"\x17number_of_audio_objects\x18\x14 \x01(\x05R\x14numberOfAudioObjects\x12K\n" +
	"\x13audio_sampling_rate\x18\x15 \x01(\v2\x1b.ddex.ern.v432.SamplingRateR\x11audioSamplingRate\x121\n" +
	"\x15audio_bits_per_sample\x18\x16 \x01(\x05R\x12audioBitsPerSample\x12\x1a\n" +
	"\bduration\x18\x17 \x01(\tR\bduration\x12\x1b\n" +
	"\tbit_depth\x18\x18 \x01(\x05R\bbitDepth\x12'\n" +
	"\x04file\x18\x19 \x01(\v2\x13.ddex.ern.v432.FileR\x04file\x12<\n" +
	"\vfingerprint\x18\x1a \x03(\v2\x1a.ddex.ern.v432.FingerprintR\vfingerprint\x125\n" +
	"\x17is_provided_in_delivery\x18\x1b \x01(\bR\x14isProvidedInDelivery\"\xb3\x03\n" +
	"\fVideoEdition\x12)\n" +
	"\x04type\x18\x01 \x01(\x0e2\x15.ddex.avs.EditionTypeR\x04type\x127\n" +
	"\vresource_id\x18\x02 \x03(\v2\x16.ddex.ern.v432.VideoIdR\n" +
	"resourceId\x12R\n" +
	"\x13edition_contributor\x18\x03 \x03(\v2!.ddex.ern.v432.EditionContributorR\x12editionContributor\x12+\n" +
	"\x06p_line\x18\x04 \x03(\v2\x14.ddex.ern.v432.PLineR\x05pLine\x12+\n" +
	"\x06c_line\x18\x05 \x03(\v2\x14.ddex.ern.v432.CLineR\x05cLine\x12>\n" +
	"\x0erecording_mode\x18\x06 \x01(\x0e2\x17.ddex.avs.RecordingModeR\rrecordingMode\x12Q\n" +
	"\x11technical_details\x18\a \x03(\v2$.ddex.ern.v432.TechnicalVideoDetailsR\x10technicalDetails\"m\n" +
	"\tVideoType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x80\x03\n" +
	"\x14WorkRightsController\x12I\n" +
	"!rights_controller_party_reference\x18\x01 \x01(\tR\x1erightsControllerPartyReference\x12N\n" +
	"\x13rights_control_type\x18\x02 \x03(\x0e2\x1e.ddex.avs.RightsControllerRoleR\x11rightsControlType\x12T\n" +
	"\x16rights_controller_type\x18\x03 \x01(\x0e2\x1e.ddex.avs.RightsControllerTypeR\x14rightsControllerType\x12=\n" +
	"\tterritory\x18\x04 \x03(\v2\x1f.ddex.ern.v432.AllTerritoryCodeR\tterritory\x12\x1d\n" +
	"\n" +
	"start_date\x18\x05 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x06 \x01(\tR\aendDate\"\x83\x01\n" +
	"\x1fAdministratingRecordCompanyRole\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x87\x02\n" +
	"\vAffiliation\x12-\n" +
	"\x04type\x18\x01 \x01(\x0e2\x19.ddex.avs.AffiliationTypeR\x04type\x12F\n" +
	"\x0fvalidity_period\x18\x02 \x01(\v2\x1d.ddex.ern.v432.ValidityPeriodR\x0evalidityPeriod\x12:\n" +
	"\vrights_type\x18\x03 \x03(\v2\x19.ddex.ern.v432.RightsTypeR\n" +
	"rightsType\x12E\n" +
	"\x1fpercentage_of_rights_assignment\x18\x04 \x01(\tR\x1cpercentageOfRightsAssignment\"\x86\x01\n" +
	"\x10AllTerritoryCode\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\\\n" +
	"\x0fidentifier_type\x18\x02 \x01(\x0e23.ddex.avs.TerritoryCodeTypeIncludingDeprecatedCodesR\x0eidentifierType\"\xa9\x01\n" +
	"\vAspectRatio\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12E\n" +
	"\x11aspect_ratio_type\x18\x02 \x01(\x0e2\x19.ddex.avs.AspectRatioTypeR\x0faspectRatioType\x12=\n" +
	"\x1bapplies_to_cropped_resource\x18\x03 \x01(\bR\x18appliesToCroppedResource\"\x8c\x01\n" +
	"\x0eAudioCodecType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x04 \x01(\tR\x10userDefinedValue\"`\n" +
	"\aBitRate\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12?\n" +
	"\x0funit_of_measure\x18\x02 \x01(\x0e2\x17.ddex.avs.UnitOfBitRateR\runitOfMeasure\"\x95\x02\n" +
	"\x05CLine\x12\x12\n" +
	"\x04year\x18\x01 \x01(\tR\x04year\x12$\n" +
	"\x0ec_line_company\x18\x02 \x01(\tR\fcLineCompany\x12\x1e\n" +
	"\vc_line_text\x18\x03 \x01(\tR\tcLineText\x127\n" +
	"\x18language_and_script_code\x18\x04 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x05 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x06 \x01(\bR\tisDefault\"o\n" +
	"\vCarrierType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"C\n" +
	"\rCatalogNumber\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"\x8b\x02\n" +
	"\tChapterId\x12\x15\n" +
	"\ai_s_r_c\x18\x01 \x01(\tR\x04iSRC\x12\x15\n" +
	"\ai_s_a_n\x18\x02 \x01(\tR\x04iSAN\x12\x18\n" +
	"\tv_i_s_a_n\x18\x03 \x01(\tR\x05vISAN\x12\x15\n" +
	"\ae_i_d_r\x18\x04 \x03(\tR\x04eIDR\x12\x15\n" +
	"\ai_s_w_c\x18\x05 \x01(\tR\x04iSWC\x12C\n" +
	"\x0ecatalog_number\x18\x06 \x01(\v2\x1c.ddex.ern.v432.CatalogNumberR\rcatalogNumber\x12C\n" +
	"\x0eproprietary_id\x18\a \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\"l\n" +
	"\bClipType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"s\n" +
	"\x0fContainerFormat\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x83\x04\n" +
	"\vContributor\x122\n" +
	"\x04role\x18\x01 \x03(\v2\x1e.ddex.ern.v432.ContributorRoleR\x04role\x12F\n" +
	"\x0finstrument_type\x18\x02 \x03(\v2\x1d.ddex.ern.v432.InstrumentTypeR\x0einstrumentType\x12=\n" +
	"\x0fai_contribution\x18\x03 \x01(\x0e2\x14.ddex.avs.ContainsAIR\x0eaiContribution\x12C\n" +
	"\x1ehas_made_featured_contribution\x18\x04 \x01(\bR\x1bhasMadeFeaturedContribution\x12G\n" +
	" has_made_contracted_contribution\x18\x05 \x01(\bR\x1dhasMadeContractedContribution\x12:\n" +
	"\vis_credited\x18\x06 \x01(\v2\x19.ddex.ern.v432.IsCreditedR\n" +
	"isCredited\x12F\n" +
	"\x0fdisplay_credits\x18\a \x03(\v2\x1d.ddex.ern.v432.DisplayCreditsR\x0edisplayCredits\x12'\n" +
	"\x0fsequence_number\x18\b \x01(\x05R\x0esequenceNumber\"\x94\x01\n" +
	"\x0fContributorRole\x129\n" +
	"\x05value\x18\x01 \x01(\v2#.ddex.ern.v432.ContributorRoleValueR\x05value\x12F\n" +
	"\x0finstrument_type\x18\x02 \x03(\v2\x1d.ddex.ern.v432.InstrumentTypeR\x0einstrumentType\"x\n" +
	"\x14ContributorRoleValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xd8\x01\n" +
	"\fCourtesyLine\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\"m\n" +
	"\tCueOrigin\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"p\n" +
	"\fCueSheetType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"p\n" +
	"\fCueThemeType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"n\n" +
	"\n" +
	"CueUseType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"{\n" +
	"\x17CueVisualPerceptionType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"p\n" +
	"\fCueVocalType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"r\n" +
	"\x14CurrentTerritoryCode\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12D\n" +
	"\x0fidentifier_type\x18\x02 \x01(\x0e2\x1b.ddex.avs.TerritoryCodeTypeR\x0eidentifierType\"Q\n" +
	"\x03DSP\x126\n" +
	"\ftrading_name\x18\x01 \x01(\v2\x13.ddex.ern.v432.NameR\vtradingName\x12\x12\n" +
	"\x05u_r_l\x18\x02 \x03(\tR\x03uRL\"\xe9\x01\n" +
	"\x0fDetailedHashSum\x12A\n" +
	"\talgorithm\x18\x01 \x01(\v2#.ddex.ern.v432.HashSumAlgorithmTypeR\talgorithm\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tparameter\x18\x03 \x01(\tR\tparameter\x125\n" +
	"\tdata_type\x18\x04 \x01(\x0e2\x18.ddex.avs.BinaryDataTypeR\bdataType\x12$\n" +
	"\x0ehash_sum_value\x18\x05 \x01(\tR\fhashSumValue\"\xea\x01\n" +
	"\x0fDetailedPartyId\x12\x15\n" +
	"\ai_s_n_i\x18\x01 \x01(\tR\x04iSNI\x12\x15\n" +
	"\ad_p_i_d\x18\x02 \x01(\tR\x04dPID\x12&\n" +
	"\x0fipi_name_number\x18\x03 \x01(\tR\ripiNameNumber\x12\x12\n" +
	"\x05i_p_n\x18\x04 \x01(\tR\x03iPN\x12(\n" +
	"\x10cisac_society_id\x18\x05 \x01(\tR\x0ecisacSocietyId\x12C\n" +
	"\x0eproprietary_id\x18\x06 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\"\xa8\x02\n" +
	"%DisplayArtistNameWithOriginalLanguage\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x125\n" +
	"\x17is_in_original_language\x18\x03 \x01(\bR\x14isInOriginalLanguage\x12Z\n" +
	"\x19applicable_territory_code\x18\x04 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x05 \x01(\bR\tisDefault\"u\n" +
	"\x11DisplayArtistRole\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xf4\x01\n" +
	"\x0eDisplayCredits\x12.\n" +
	"\x13display_credit_text\x18\x01 \x01(\tR\x11displayCreditText\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\"\xc1\x01\n" +
	"\x0fDisplaySubTitle\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12'\n" +
	"\x0fsequence_number\x18\x02 \x01(\x05R\x0esequenceNumber\x121\n" +
	"\x15is_displayed_in_title\x18\x03 \x01(\bR\x12isDisplayedInTitle\x12<\n" +
	"\x0esub_title_type\x18\x04 \x01(\x0e2\x16.ddex.avs.SubTitleTypeR\fsubTitleType\"\xd5\x02\n" +
	"\fDisplayTitle\x12\x1d\n" +
	"\n" +
	"title_text\x18\x01 \x01(\tR\ttitleText\x12;\n" +
	"\tsub_title\x18\x02 \x03(\v2\x1e.ddex.ern.v432.DisplaySubTitleR\bsubTitle\x127\n" +
	"\x18language_and_script_code\x18\x03 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x04 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x05 \x01(\bR\tisDefault\x125\n" +
	"\x17is_in_original_language\x18\x06 \x01(\bR\x14isInOriginalLanguage\"\xc4\x02\n" +
	"\tEventDate\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\x12\x1b\n" +
	"\tis_before\x18\x03 \x01(\bR\bisBefore\x12\x19\n" +
	"\bis_after\x18\x04 \x01(\bR\aisAfter\x12V\n" +
	"\x19applicable_territory_code\x18\x05 \x01(\x0e2\x1a.ddex.avs.AllTerritoryCodeR\x17applicableTerritoryCode\x121\n" +
	"\x14location_description\x18\x06 \x01(\tR\x13locationDescription\x127\n" +
	"\x18language_and_script_code\x18\a \x01(\tR\x15languageAndScriptCode\"\xb3\x02\n" +
	"\rEventDateTime\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12%\n" +
	"\x0eis_approximate\x18\x02 \x01(\bR\risApproximate\x12\x1b\n" +
	"\tis_before\x18\x03 \x01(\bR\bisBefore\x12\x19\n" +
	"\bis_after\x18\x04 \x01(\bR\aisAfter\x12A\n" +
	"\x0eterritory_code\x18\x05 \x01(\x0e2\x1a.ddex.avs.AllTerritoryCodeR\rterritoryCode\x121\n" +
	"\x14location_description\x18\x06 \x01(\tR\x13locationDescription\x127\n" +
	"\x18language_and_script_code\x18\a \x01(\tR\x15languageAndScriptCode\"^\n" +
	"\x06Extent\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12>\n" +
	"\x0funit_of_measure\x18\x02 \x01(\x0e2\x16.ddex.avs.UnitOfExtentR\runitOfMeasure\"\x80\x01\n" +
	"\x1cExternallyLinkedResourceType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"r\n" +
	"\x04File\x12\x12\n" +
	"\x05u_r_i\x18\x01 \x01(\tR\x03uRI\x129\n" +
	"\bhash_sum\x18\x02 \x01(\v2\x1e.ddex.ern.v432.DetailedHashSumR\ahashSum\x12\x1b\n" +
	"\tfile_size\x18\x03 \x01(\tR\bfileSize\"\x8c\x01\n" +
	"\vFingerprint\x12E\n" +
	"\talgorithm\x18\x01 \x01(\v2'.ddex.ern.v432.FingerprintAlgorithmTypeR\talgorithm\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tparameter\x18\x03 \x01(\tR\tparameter\"|\n" +
	"\x18FingerprintAlgorithmType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xa7\x01\n" +
	"\x14FirstPublicationDate\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12Z\n" +
	"\x19applicable_territory_code\x18\x02 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x03 \x01(\bR\tisDefault\"d\n" +
	"\tFrameRate\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12A\n" +
	"\x0funit_of_measure\x18\x02 \x01(\x0e2\x19.ddex.avs.UnitOfFrameRateR\runitOfMeasure\"\xf5\x01\n" +
	"\x0fFulfillmentDate\x12)\n" +
	"\x10fulfillment_date\x18\x01 \x01(\tR\x0ffulfillmentDate\x12<\n" +
	"\x1aresource_release_reference\x18\x02 \x03(\tR\x18resourceReleaseReference\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\"\xeb\x01\n" +
	"\rGenreCategory\x127\n" +
	"\x05value\x18\x01 \x01(\v2!.ddex.ern.v432.GenreCategoryValueR\x05value\x12E\n" +
	"\vdescription\x18\x02 \x03(\v2#.ddex.ern.v432.TextWithoutTerritoryR\vdescription\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\"\xaf\x01\n" +
	"\x12GenreCategoryValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x04 \x01(\tR\x10userDefinedValue\"\x98\x03\n" +
	"\x12GenreWithTerritory\x12\x1d\n" +
	"\n" +
	"genre_text\x18\x01 \x01(\tR\tgenreText\x12\x1b\n" +
	"\tsub_genre\x18\x02 \x01(\tR\bsubGenre\x12C\n" +
	"\x0egenre_category\x18\x03 \x03(\v2\x1c.ddex.ern.v432.GenreCategoryR\rgenreCategory\x12M\n" +
	"\x12sub_genre_category\x18\x04 \x03(\v2\x1f.ddex.ern.v432.SubGenreCategoryR\x10subGenreCategory\x127\n" +
	"\x18language_and_script_code\x18\x05 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x06 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\a \x01(\bR\tisDefault\"x\n" +
	"\x14HashSumAlgorithmType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x8c\x01\n" +
	"\x0eImageCodecType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x04 \x01(\tR\x10userDefinedValue\"m\n" +
	"\tImageType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"r\n" +
	"\x0eInstrumentType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"F\n" +
	"\n" +
	"IsCredited\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\"\n" +
	"\rmay_be_shared\x18\x02 \x01(\bR\vmayBeShared\"\xe1\x01\n" +
	"\x15KeywordsWithTerritory\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\"J\n" +
	"\bLanguage\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12(\n" +
	"\x10is_main_language\x18\x02 \x01(\bR\x0eisMainLanguage\"\xdc\x01\n" +
	"\x10MarketingComment\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\"u\n" +
	"\x11MessageAuditTrail\x12`\n" +
	"\x19message_audit_trail_event\x18\x01 \x03(\v2%.ddex.ern.v432.MessageAuditTrailEventR\x16messageAuditTrailEvent\"\x9d\x01\n" +
	"\x16MessageAuditTrailEvent\x12f\n" +
	"\x1amessaging_party_descriptor\x18\x01 \x01(\v2(.ddex.ern.v432.MessagingPartyWithoutCodeR\x18messagingPartyDescriptor\x12\x1b\n" +
	"\tdate_time\x18\x02 \x01(\tR\bdateTime\"\xbb\x05\n" +
	"\rMessageHeader\x12*\n" +
	"\x11message_thread_id\x18\x01 \x01(\tR\x0fmessageThreadId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12*\n" +
	"\x11message_file_name\x18\x03 \x01(\tR\x0fmessageFileName\x12O\n" +
	"\x0emessage_sender\x18\x04 \x01(\v2(.ddex.ern.v432.MessagingPartyWithoutCodeR\rmessageSender\x12S\n" +
	"\x11sent_on_behalf_of\x18\x05 \x01(\v2(.ddex.ern.v432.MessagingPartyWithoutCodeR\x0esentOnBehalfOf\x12U\n" +
	"\x11message_recipient\x18\x06 \x03(\v2(.ddex.ern.v432.MessagingPartyWithoutCodeR\x10messageRecipient\x12Y\n" +
	"\x14sent_as_requested_by\x18\a \x01(\v2(.ddex.ern.v432.MessagingPartyWithoutCodeR\x11sentAsRequestedBy\x129\n" +
	"\x19message_created_date_time\x18\b \x01(\tR\x16messageCreatedDateTime\x12P\n" +
	"\x13message_audit_trail\x18\t \x01(\v2 .ddex.ern.v432.MessageAuditTrailR\x11messageAuditTrail\x12N\n" +
	"\x14message_control_type\x18\n" +
	" \x01(\x0e2\x1c.ddex.avs.MessageControlTypeR\x12messageControlType\"\x9d\x01\n" +
	"\x19MessagingPartyWithoutCode\x12\x19\n" +
	"\bparty_id\x18\x01 \x01(\tR\apartyId\x12B\n" +
	"\n" +
	"party_name\x18\x02 \x01(\v2#.ddex.ern.v432.PartyNameWithoutCodeR\tpartyName\x12!\n" +
	"\ftrading_name\x18\x03 \x01(\tR\vtradingName\"\xe5\x01\n" +
	"\rMusicalWorkId\x12\x15\n" +
	"\ai_s_w_c\x18\x01 \x01(\tR\x04iSWC\x12\x1f\n" +
	"\vopus_number\x18\x02 \x01(\tR\n" +
	"opusNumber\x126\n" +
	"\x17composer_catalog_number\x18\x03 \x03(\tR\x15composerCatalogNumber\x12C\n" +
	"\x0eproprietary_id\x18\x04 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\x12\x1f\n" +
	"\vis_replaced\x18\x05 \x01(\bR\n" +
	"isReplaced\"U\n" +
	"\x04Name\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"\x91\x01\n" +
	"\x13OperatingSystemType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x04 \x01(\tR\x10userDefinedValue\"\x95\x02\n" +
	"\x05PLine\x12\x12\n" +
	"\x04year\x18\x01 \x01(\tR\x04year\x12$\n" +
	"\x0ep_line_company\x18\x02 \x01(\tR\fpLineCompany\x12\x1e\n" +
	"\vp_line_text\x18\x03 \x01(\tR\tpLineText\x127\n" +
	"\x18language_and_script_code\x18\x04 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x05 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x06 \x01(\bR\tisDefault\"\xdd\x03\n" +
	"\x1fParentalWarningTypeWithStandard\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12Z\n" +
	"\x19applicable_territory_code\x18\x02 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x03 \x01(\bR\tisDefault\x12%\n" +
	"\x0etype_namespace\x18\x04 \x01(\tR\rtypeNamespace\x125\n" +
	"\x17type_user_defined_value\x18\x05 \x01(\tR\x14typeUserDefinedValue\x12]\n" +
	"\x19parental_warning_standard\x18\x06 \x01(\x0e2!.ddex.avs.ParentalWarningStandardR\x17parentalWarningStandard\x12-\n" +
	"\x12standard_namespace\x18\a \x01(\tR\x11standardNamespace\x12=\n" +
	"\x1bstandard_user_defined_value\x18\b \x01(\tR\x18standardUserDefinedValue\"\xf4\x03\n" +
	"\tPartyName\x120\n" +
	"\tfull_name\x18\x01 \x01(\v2\x13.ddex.ern.v432.NameR\bfullName\x12=\n" +
	"\x1bfull_name_ascii_transcribed\x18\x02 \x01(\tR\x18fullNameAsciiTranscribed\x12?\n" +
	"\x11full_name_indexed\x18\x03 \x01(\v2\x13.ddex.ern.v432.NameR\x0ffullNameIndexed\x12F\n" +
	"\x15names_before_key_name\x18\x04 \x01(\v2\x13.ddex.ern.v432.NameR\x12namesBeforeKeyName\x12.\n" +
	"\bkey_name\x18\x05 \x01(\v2\x13.ddex.ern.v432.NameR\akeyName\x12D\n" +
	"\x14names_after_key_name\x18\x06 \x01(\v2\x13.ddex.ern.v432.NameR\x11namesAfterKeyName\x12>\n" +
	"\x10abbreviated_name\x18\a \x01(\v2\x13.ddex.ern.v432.NameR\x0fabbreviatedName\x127\n" +
	"\x18language_and_script_code\x18\b \x01(\tR\x15languageAndScriptCode\"\xc8\x02\n" +
	"\x14PartyNameWithoutCode\x12\x1b\n" +
	"\tfull_name\x18\x01 \x01(\tR\bfullName\x12=\n" +
	"\x1bfull_name_ascii_transcribed\x18\x02 \x01(\tR\x18fullNameAsciiTranscribed\x12*\n" +
	"\x11full_name_indexed\x18\x03 \x01(\tR\x0ffullNameIndexed\x121\n" +
	"\x15names_before_key_name\x18\x04 \x01(\tR\x12namesBeforeKeyName\x12\x19\n" +
	"\bkey_name\x18\x05 \x01(\tR\akeyName\x12/\n" +
	"\x14names_after_key_name\x18\x06 \x01(\tR\x11namesAfterKeyName\x12)\n" +
	"\x10abbreviated_name\x18\a \x01(\tR\x0fabbreviatedName\"\x9d\x01\n" +
	"\x15PartyRelationshipType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\x12\"\n" +
	"\rmay_be_shared\x18\x04 \x01(\bR\vmayBeShared\"R\n" +
	"\n" +
	"Percentage\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12.\n" +
	"\x14has_max_value_of_one\x18\x02 \x01(\bR\x10hasMaxValueOfOne\"\b\n" +
	"\x06Period\"W\n" +
	"\x06Prefix\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"Z\n" +
	"\x05Price\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12;\n" +
	"\rcurrency_code\x18\x02 \x01(\x0e2\x16.ddex.avs.CurrencyCodeR\fcurrencyCode\"?\n" +
	"\tPriceType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"E\n" +
	"\x0fPromotionalCode\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"C\n" +
	"\rProprietaryId\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"k\n" +
	"\aPurpose\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"p\n" +
	"\fRatingAgency\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"p\n" +
	"\fRatingReason\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"W\n" +
	"\x06Reason\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\"\xaf\x01\n" +
	"\fRelatedParty\x12A\n" +
	"\x1dparty_related_party_reference\x18\x01 \x01(\tR\x1apartyRelatedPartyReference\x12\\\n" +
	"\x17party_relationship_type\x18\x02 \x01(\v2$.ddex.ern.v432.PartyRelationshipTypeR\x15partyRelationshipType\"{\n" +
	"\x17ReleaseRelationshipType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x85\x01\n" +
	"!ReleaseTypeForReleaseNotification\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xef\x01\n" +
	"\"ResourceContainedResourceReference\x12Q\n" +
	"%resource_contained_resource_reference\x18\x01 \x01(\tR\"resourceContainedResourceReference\x12#\n" +
	"\rduration_used\x18\x02 \x01(\tR\fdurationUsed\x12\x1f\n" +
	"\vstart_point\x18\x03 \x01(\tR\n" +
	"startPoint\x120\n" +
	"\apurpose\x18\x04 \x01(\v2\x16.ddex.ern.v432.PurposeR\apurpose\"\xaf\x01\n" +
	"&ResourceContainedResourceReferenceList\x12\x84\x01\n" +
	"%resource_contained_resource_reference\x18\x01 \x03(\v21.ddex.ern.v432.ResourceContainedResourceReferenceR\"resourceContainedResourceReference\"{\n" +
	"\x17ResourceContributorRole\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xdb\x02\n" +
	"\n" +
	"ResourceId\x12\x15\n" +
	"\ai_s_r_c\x18\x01 \x01(\tR\x04iSRC\x12\x15\n" +
	"\ai_s_m_n\x18\x02 \x01(\tR\x04iSMN\x12\x15\n" +
	"\ai_s_a_n\x18\x03 \x01(\tR\x04iSAN\x12\x18\n" +
	"\tv_i_s_a_n\x18\x04 \x01(\tR\x05vISAN\x12\x15\n" +
	"\ai_s_b_n\x18\x05 \x01(\tR\x04iSBN\x12\x15\n" +
	"\ai_s_s_n\x18\x06 \x01(\tR\x04iSSN\x12\x15\n" +
	"\as_i_c_i\x18\a \x01(\tR\x04sICI\x12C\n" +
	"\x0ecatalog_number\x18\b \x01(\v2\x1c.ddex.ern.v432.CatalogNumberR\rcatalogNumber\x12C\n" +
	"\x0eproprietary_id\x18\t \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\x12\x1f\n" +
	"\vis_replaced\x18\n" +
	" \x01(\bR\n" +
	"isReplaced\"}\n" +
	"\x15ResourceProprietaryId\x12C\n" +
	"\x0eproprietary_id\x18\x01 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\x12\x1f\n" +
	"\vis_replaced\x18\x02 \x01(\bR\n" +
	"isReplaced\"{\n" +
	"\x17RightsClaimPolicyReason\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"n\n" +
	"\n" +
	"RightsType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"g\n" +
	"\fSamplingRate\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12A\n" +
	"\x0funit_of_measure\x18\x02 \x01(\x0e2\x19.ddex.avs.UnitOfFrequencyR\runitOfMeasure\"o\n" +
	"\vSessionType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x91\x01\n" +
	"\x13SheetMusicCodecType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x04 \x01(\tR\x10userDefinedValue\"\x8b\x01\n" +
	"\fSheetMusicId\x12\x15\n" +
	"\ai_s_m_n\x18\x01 \x01(\tR\x04iSMN\x12C\n" +
	"\x0eproprietary_id\x18\x02 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\x12\x1f\n" +
	"\vis_replaced\x18\x03 \x01(\bR\n" +
	"isReplaced\"r\n" +
	"\x0eSheetMusicType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"p\n" +
	"\fSoftwareType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xd4\x01\n" +
	"\x10SoundRecordingId\x12\x15\n" +
	"\ai_s_r_c\x18\x01 \x01(\tR\x04iSRC\x12C\n" +
	"\x0ecatalog_number\x18\x02 \x01(\v2\x1c.ddex.ern.v432.CatalogNumberR\rcatalogNumber\x12C\n" +
	"\x0eproprietary_id\x18\x03 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\x12\x1f\n" +
	"\vis_replaced\x18\x04 \x01(\bR\n" +
	"isReplaced\"v\n" +
	"\x12SoundRecordingType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"z\n" +
	"\x16SpecialContributorType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x95\x01\n" +
	"\x10SubGenreCategory\x12:\n" +
	"\x05value\x18\x01 \x03(\v2$.ddex.ern.v432.SubGenreCategoryValueR\x05value\x12E\n" +
	"\vdescription\x18\x02 \x03(\v2#.ddex.ern.v432.TextWithoutTerritoryR\vdescription\"y\n" +
	"\x15SubGenreCategoryValue\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x8b\x01\n" +
	"\rTextCodecType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x04 \x01(\tR\x10userDefinedValue\"\xb3\x01\n" +
	"\x06TextId\x12\x15\n" +
	"\ai_s_b_n\x18\x01 \x01(\tR\x04iSBN\x12\x15\n" +
	"\ai_s_s_n\x18\x02 \x01(\tR\x04iSSN\x12\x15\n" +
	"\as_i_c_i\x18\x03 \x01(\tR\x04sICI\x12C\n" +
	"\x0eproprietary_id\x18\x04 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\x12\x1f\n" +
	"\vis_replaced\x18\x05 \x01(\bR\n" +
	"isReplaced\"l\n" +
	"\bTextType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\xd7\x02\n" +
	"\x0eTextWithFormat\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\x12/\n" +
	"\x06format\x18\x05 \x01(\x0e2\x17.ddex.avs.TextCodecTypeR\x06format\x12\x1c\n" +
	"\tnamespace\x18\x06 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\a \x01(\tR\x10userDefinedValue\"\xdd\x02\n" +
	"\x14TextWithoutTerritory\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x127\n" +
	"\x18language_and_script_code\x18\x02 \x01(\tR\x15languageAndScriptCode\x12Z\n" +
	"\x19applicable_territory_code\x18\x03 \x01(\x0e2\x1e.ddex.avs.CurrentTerritoryCodeR\x17applicableTerritoryCode\x12\x1d\n" +
	"\n" +
	"is_default\x18\x04 \x01(\bR\tisDefault\x12/\n" +
	"\x06format\x18\x05 \x01(\x0e2\x17.ddex.avs.TextCodecTypeR\x06format\x12\x1c\n" +
	"\tnamespace\x18\x06 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\a \x01(\tR\x10userDefinedValue\"\xdd\x01\n" +
	"\x17TitleDisplayInformation\x121\n" +
	"\x15is_displayed_in_title\x18\x01 \x01(\bR\x12isDisplayedInTitle\x12-\n" +
	"\x06prefix\x18\x02 \x03(\v2\x15.ddex.ern.v432.PrefixR\x06prefix\x127\n" +
	"\x18language_and_script_code\x18\x03 \x01(\tR\x15languageAndScriptCode\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x05R\x0esequenceNumber\"~\n" +
	"\x0eValidityPeriod\x127\n" +
	"\n" +
	"start_date\x18\x01 \x01(\v2\x18.ddex.ern.v432.EventDateR\tstartDate\x123\n" +
	"\bend_date\x18\x02 \x01(\v2\x18.ddex.ern.v432.EventDateR\aendDate\"\xd7\x01\n" +
	"\x05Venue\x12\x1d\n" +
	"\n" +
	"venue_name\x18\x01 \x01(\tR\tvenueName\x12#\n" +
	"\rvenue_address\x18\x02 \x01(\tR\fvenueAddress\x12F\n" +
	"\x0eterritory_code\x18\x03 \x01(\v2\x1f.ddex.ern.v432.AllTerritoryCodeR\rterritoryCode\x12#\n" +
	"\rlocation_code\x18\x04 \x01(\tR\flocationCode\x12\x1d\n" +
	"\n" +
	"venue_room\x18\x05 \x01(\tR\tvenueRoom\"o\n" +
	"\vVersionType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x8c\x01\n" +
	"\x0eVideoCodecType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x04 \x01(\tR\x10userDefinedValue\"w\n" +
	"\x13VideoDefinitionType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12,\n" +
	"\x12user_defined_value\x18\x03 \x01(\tR\x10userDefinedValue\"\x93\x02\n" +
	"\aVideoId\x12\x15\n" +
	"\ai_s_r_c\x18\x01 \x01(\tR\x04iSRC\x12\x15\n" +
	"\ai_s_a_n\x18\x02 \x01(\tR\x04iSAN\x12\x18\n" +
	"\tv_i_s_a_n\x18\x03 \x01(\tR\x05vISAN\x12C\n" +
	"\x0ecatalog_number\x18\x04 \x01(\v2\x1c.ddex.ern.v432.CatalogNumberR\rcatalogNumber\x12C\n" +
	"\x0eproprietary_id\x18\x05 \x03(\v2\x1c.ddex.ern.v432.ProprietaryIdR\rproprietaryId\x12\x15\n" +
	"\ae_i_d_r\x18\x06 \x03(\tR\x04eIDR\x12\x1f\n" +
	"\vis_replaced\x18\a \x01(\bR\n" +
	"isReplacedB\xa4\x01\n" +
	"\x11com.ddex.ern.v432B\tV432ProtoP\x01Z.github.com/alecsavvy/ddex-go/gen/ddex/ern/v432\xa2\x02\x03DEX\xaa\x02\rDdex.Ern.V432\xca\x02\rDdex\\Ern\\V432\xe2\x02\x19Ddex\\Ern\\V432\\GPBMetadata\xea\x02\x0fDdex::Ern::V432b\x06proto3"

var (
	file_ddex_ern_v432_v432_proto_rawDescOnce sync.Once
	file_ddex_ern_v432_v432_proto_rawDescData []byte
)

func file_ddex_ern_v432_v432_proto_rawDescGZIP() []byte {
	file_ddex_ern_v432_v432_proto_rawDescOnce.Do(func() {
		file_ddex_ern_v432_v432_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ddex_ern_v432_v432_proto_rawDesc), len(file_ddex_ern_v432_v432_proto_rawDesc)))
	})
	return file_ddex_ern_v432_v432_proto_rawDescData
}

var file_ddex_ern_v432_v432_proto_msgTypes = make([]protoimpl.MessageInfo, 206)
var file_ddex_ern_v432_v432_proto_goTypes = []any{
	(*NewReleaseMessage)(nil),             // 0: ddex.ern.v432.NewReleaseMessage
	(*PurgeReleaseMessage)(nil),           // 1: ddex.ern.v432.PurgeReleaseMessage
	(*AdministratingRecordCompany)(nil),   // 2: ddex.ern.v432.AdministratingRecordCompany
	(*AudioDeliveryFile)(nil),             // 3: ddex.ern.v432.AudioDeliveryFile
	(*AvRating)(nil),                      // 4: ddex.ern.v432.AvRating
	(*Brand)(nil),                         // 5: ddex.ern.v432.Brand
	(*Channel)(nil),                       // 6: ddex.ern.v432.Channel
	(*Chapter)(nil),                       // 7: ddex.ern.v432.Chapter
	(*ChapterList)(nil),                   // 8: ddex.ern.v432.ChapterList
	(*Character)(nil),                     // 9: ddex.ern.v432.Character
	(*ClipDetails)(nil),                   // 10: ddex.ern.v432.ClipDetails
	(*ClipRelease)(nil),                   // 11: ddex.ern.v432.ClipRelease
	(*CommercialModelType)(nil),           // 12: ddex.ern.v432.CommercialModelType
	(*ConditionForRightsClaimPolicy)(nil), // 13: ddex.ern.v432.ConditionForRightsClaimPolicy
	(*CoreArea)(nil),                      // 14: ddex.ern.v432.CoreArea
	(*Cue)(nil),                           // 15: ddex.ern.v432.Cue
	(*CueSheet)(nil),                      // 16: ddex.ern.v432.CueSheet
	(*CueSheetList)(nil),                  // 17: ddex.ern.v432.CueSheetList
	(*Deal)(nil),                          // 18: ddex.ern.v432.Deal
	(*DealList)(nil),                      // 19: ddex.ern.v432.DealList
	(*DealResourceReferenceList)(nil),     // 20: ddex.ern.v432.DealResourceReferenceList
	(*DealTechnicalResourceDetailsReferenceList)(nil), // 21: ddex.ern.v432.DealTechnicalResourceDetailsReferenceList
	(*DealTerms)(nil),                                  // 22: ddex.ern.v432.DealTerms
	(*DealTermsTechnicalInstantiation)(nil),            // 23: ddex.ern.v432.DealTermsTechnicalInstantiation
	(*Deity)(nil),                                      // 24: ddex.ern.v432.Deity
	(*DelegatedUsageRights)(nil),                       // 25: ddex.ern.v432.DelegatedUsageRights
	(*DescriptionWithTerritory)(nil),                   // 26: ddex.ern.v432.DescriptionWithTerritory
	(*DetailedResourceContributor)(nil),                // 27: ddex.ern.v432.DetailedResourceContributor
	(*DiscoverableUseType)(nil),                        // 28: ddex.ern.v432.DiscoverableUseType
	(*DisplayArtist)(nil),                              // 29: ddex.ern.v432.DisplayArtist
	(*DisplayTitleText)(nil),                           // 30: ddex.ern.v432.DisplayTitleText
	(*DistributionChannelPage)(nil),                    // 31: ddex.ern.v432.DistributionChannelPage
	(*EditionContributor)(nil),                         // 32: ddex.ern.v432.EditionContributor
	(*EventDateTimeWithoutFlags)(nil),                  // 33: ddex.ern.v432.EventDateTimeWithoutFlags
	(*EventDateWithCurrentTerritory)(nil),              // 34: ddex.ern.v432.EventDateWithCurrentTerritory
	(*EventDateWithDefault)(nil),                       // 35: ddex.ern.v432.EventDateWithDefault
	(*EventDateWithoutFlags)(nil),                      // 36: ddex.ern.v432.EventDateWithoutFlags
	(*ExternalResourceLink)(nil),                       // 37: ddex.ern.v432.ExternalResourceLink
	(*HdrVideoDynamicMetadataType)(nil),                // 38: ddex.ern.v432.HdrVideoDynamicMetadataType
	(*Image)(nil),                                      // 39: ddex.ern.v432.Image
	(*LinkedReleaseResourceReference)(nil),             // 40: ddex.ern.v432.LinkedReleaseResourceReference
	(*LocationAndDateOfSession)(nil),                   // 41: ddex.ern.v432.LocationAndDateOfSession
	(*Party)(nil),                                      // 42: ddex.ern.v432.Party
	(*PartyList)(nil),                                  // 43: ddex.ern.v432.PartyList
	(*PartyNameWithTerritory)(nil),                     // 44: ddex.ern.v432.PartyNameWithTerritory
	(*PartyWithRole)(nil),                              // 45: ddex.ern.v432.PartyWithRole
	(*PeriodWithStartDate)(nil),                        // 46: ddex.ern.v432.PeriodWithStartDate
	(*PeriodWithoutFlags)(nil),                         // 47: ddex.ern.v432.PeriodWithoutFlags
	(*PhysicalReturns)(nil),                            // 48: ddex.ern.v432.PhysicalReturns
	(*PriceInformation)(nil),                           // 49: ddex.ern.v432.PriceInformation
	(*PurgedRelease)(nil),                              // 50: ddex.ern.v432.PurgedRelease
	(*Raga)(nil),                                       // 51: ddex.ern.v432.Raga
	(*RecordingFormat)(nil),                            // 52: ddex.ern.v432.RecordingFormat
	(*RelatedRelease)(nil),                             // 53: ddex.ern.v432.RelatedRelease
	(*RelatedResource)(nil),                            // 54: ddex.ern.v432.RelatedResource
	(*Release)(nil),                                    // 55: ddex.ern.v432.Release
	(*ReleaseAdmin)(nil),                               // 56: ddex.ern.v432.ReleaseAdmin
	(*ReleaseDeal)(nil),                                // 57: ddex.ern.v432.ReleaseDeal
	(*ReleaseId)(nil),                                  // 58: ddex.ern.v432.ReleaseId
	(*ReleaseLabelReference)(nil),                      // 59: ddex.ern.v432.ReleaseLabelReference
	(*ReleaseLabelReferenceWithParty)(nil),             // 60: ddex.ern.v432.ReleaseLabelReferenceWithParty
	(*ReleaseList)(nil),                                // 61: ddex.ern.v432.ReleaseList
	(*ReleaseVisibility)(nil),                          // 62: ddex.ern.v432.ReleaseVisibility
	(*ResourceGroup)(nil),                              // 63: ddex.ern.v432.ResourceGroup
	(*ResourceGroupContentItem)(nil),                   // 64: ddex.ern.v432.ResourceGroupContentItem
	(*ResourceList)(nil),                               // 65: ddex.ern.v432.ResourceList
	(*ResourceRightsController)(nil),                   // 66: ddex.ern.v432.ResourceRightsController
	(*ResourceSubGroup)(nil),                           // 67: ddex.ern.v432.ResourceSubGroup
	(*RightsClaimPolicy)(nil),                          // 68: ddex.ern.v432.RightsClaimPolicy
	(*Segment)(nil),                                    // 69: ddex.ern.v432.Segment
	(*ServiceException)(nil),                           // 70: ddex.ern.v432.ServiceException
	(*SheetMusic)(nil),                                 // 71: ddex.ern.v432.SheetMusic
	(*Software)(nil),                                   // 72: ddex.ern.v432.Software
	(*SoundRecording)(nil),                             // 73: ddex.ern.v432.SoundRecording
	(*SoundRecordingClipDetails)(nil),                  // 74: ddex.ern.v432.SoundRecordingClipDetails
	(*SoundRecordingEdition)(nil),                      // 75: ddex.ern.v432.SoundRecordingEdition
	(*SupplementalDocumentList)(nil),                   // 76: ddex.ern.v432.SupplementalDocumentList
	(*SynopsisWithTerritory)(nil),                      // 77: ddex.ern.v432.SynopsisWithTerritory
	(*Tala)(nil),                                       // 78: ddex.ern.v432.Tala
	(*TechnicalImageDetails)(nil),                      // 79: ddex.ern.v432.TechnicalImageDetails
	(*TechnicalSheetMusicDetails)(nil),                 // 80: ddex.ern.v432.TechnicalSheetMusicDetails
	(*TechnicalSoftwareDetails)(nil),                   // 81: ddex.ern.v432.TechnicalSoftwareDetails
	(*TechnicalSoundRecordingDetails)(nil),             // 82: ddex.ern.v432.TechnicalSoundRecordingDetails
	(*TechnicalTextDetails)(nil),                       // 83: ddex.ern.v432.TechnicalTextDetails
	(*TechnicalVideoDetails)(nil),                      // 84: ddex.ern.v432.TechnicalVideoDetails
	(*Text)(nil),                                       // 85: ddex.ern.v432.Text
	(*Timing)(nil),                                     // 86: ddex.ern.v432.Timing
	(*Title)(nil),                                      // 87: ddex.ern.v432.Title
	(*TrackRelease)(nil),                               // 88: ddex.ern.v432.TrackRelease
	(*TrackReleaseVisibility)(nil),                     // 89: ddex.ern.v432.TrackReleaseVisibility
	(*UseType)(nil),                                    // 90: ddex.ern.v432.UseType
	(*UserInterfaceType)(nil),                          // 91: ddex.ern.v432.UserInterfaceType
	(*Video)(nil),                                      // 92: ddex.ern.v432.Video
	(*VideoClipDetails)(nil),                           // 93: ddex.ern.v432.VideoClipDetails
	(*VideoDeliveryFile)(nil),                          // 94: ddex.ern.v432.VideoDeliveryFile
	(*VideoEdition)(nil),                               // 95: ddex.ern.v432.VideoEdition
	(*VideoType)(nil),                                  // 96: ddex.ern.v432.VideoType
	(*WorkRightsController)(nil),                       // 97: ddex.ern.v432.WorkRightsController
	(*AdministratingRecordCompanyRole)(nil),            // 98: ddex.ern.v432.AdministratingRecordCompanyRole
	(*Affiliation)(nil),                                // 99: ddex.ern.v432.Affiliation
	(*AllTerritoryCode)(nil),                           // 100: ddex.ern.v432.AllTerritoryCode
	(*AspectRatio)(nil),                                // 101: ddex.ern.v432.AspectRatio
	(*AudioCodecType)(nil),                             // 102: ddex.ern.v432.AudioCodecType
	(*BitRate)(nil),                                    // 103: ddex.ern.v432.BitRate
	(*CLine)(nil),                                      // 104: ddex.ern.v432.CLine
	(*CarrierType)(nil),                                // 105: ddex.ern.v432.CarrierType
	(*CatalogNumber)(nil),                              // 106: ddex.ern.v432.CatalogNumber
	(*ChapterId)(nil),                                  // 107: ddex.ern.v432.ChapterId
	(*ClipType)(nil),                                   // 108: ddex.ern.v432.ClipType
	(*ContainerFormat)(nil),                            // 109: ddex.ern.v432.ContainerFormat
	(*Contributor)(nil),                                // 110: ddex.ern.v432.Contributor
	(*ContributorRole)(nil),                            // 111: ddex.ern.v432.ContributorRole
	(*ContributorRoleValue)(nil),                       // 112: ddex.ern.v432.ContributorRoleValue
	(*CourtesyLine)(nil),                               // 113: ddex.ern.v432.CourtesyLine
	(*CueOrigin)(nil),                                  // 114: ddex.ern.v432.CueOrigin
	(*CueSheetType)(nil),                               // 115: ddex.ern.v432.CueSheetType
	(*CueThemeType)(nil),                               // 116: ddex.ern.v432.CueThemeType
	(*CueUseType)(nil),                                 // 117: ddex.ern.v432.CueUseType
	(*CueVisualPerceptionType)(nil),                    // 118: ddex.ern.v432.CueVisualPerceptionType
	(*CueVocalType)(nil),                               // 119: ddex.ern.v432.CueVocalType
	(*CurrentTerritoryCode)(nil),                       // 120: ddex.ern.v432.CurrentTerritoryCode
	(*DSP)(nil),                                        // 121: ddex.ern.v432.DSP
	(*DetailedHashSum)(nil),                            // 122: ddex.ern.v432.DetailedHashSum
	(*DetailedPartyId)(nil),                            // 123: ddex.ern.v432.DetailedPartyId
	(*DisplayArtistNameWithOriginalLanguage)(nil),      // 124: ddex.ern.v432.DisplayArtistNameWithOriginalLanguage
	(*DisplayArtistRole)(nil),                          // 125: ddex.ern.v432.DisplayArtistRole
	(*DisplayCredits)(nil),                             // 126: ddex.ern.v432.DisplayCredits
	(*DisplaySubTitle)(nil),                            // 127: ddex.ern.v432.DisplaySubTitle
	(*DisplayTitle)(nil),                               // 128: ddex.ern.v432.DisplayTitle
	(*EventDate)(nil),                                  // 129: ddex.ern.v432.EventDate
	(*EventDateTime)(nil),                              // 130: ddex.ern.v432.EventDateTime
	(*Extent)(nil),                                     // 131: ddex.ern.v432.Extent
	(*ExternallyLinkedResourceType)(nil),               // 132: ddex.ern.v432.ExternallyLinkedResourceType
	(*File)(nil),                                       // 133: ddex.ern.v432.File
	(*Fingerprint)(nil),                                // 134: ddex.ern.v432.Fingerprint
	(*FingerprintAlgorithmType)(nil),                   // 135: ddex.ern.v432.FingerprintAlgorithmType
	(*FirstPublicationDate)(nil),                       // 136: ddex.ern.v432.FirstPublicationDate
	(*FrameRate)(nil),                                  // 137: ddex.ern.v432.FrameRate
	(*FulfillmentDate)(nil),                            // 138: ddex.ern.v432.FulfillmentDate
	(*GenreCategory)(nil),                              // 139: ddex.ern.v432.GenreCategory
	(*GenreCategoryValue)(nil),                         // 140: ddex.ern.v432.GenreCategoryValue
	(*GenreWithTerritory)(nil),                         // 141: ddex.ern.v432.GenreWithTerritory
	(*HashSumAlgorithmType)(nil),                       // 142: ddex.ern.v432.HashSumAlgorithmType
	(*ImageCodecType)(nil),                             // 143: ddex.ern.v432.ImageCodecType
	(*ImageType)(nil),                                  // 144: ddex.ern.v432.ImageType
	(*InstrumentType)(nil),                             // 145: ddex.ern.v432.InstrumentType
	(*IsCredited)(nil),                                 // 146: ddex.ern.v432.IsCredited
	(*KeywordsWithTerritory)(nil),                      // 147: ddex.ern.v432.KeywordsWithTerritory
	(*Language)(nil),                                   // 148: ddex.ern.v432.Language
	(*MarketingComment)(nil),                           // 149: ddex.ern.v432.MarketingComment
	(*MessageAuditTrail)(nil),                          // 150: ddex.ern.v432.MessageAuditTrail
	(*MessageAuditTrailEvent)(nil),                     // 151: ddex.ern.v432.MessageAuditTrailEvent
	(*MessageHeader)(nil),                              // 152: ddex.ern.v432.MessageHeader
	(*MessagingPartyWithoutCode)(nil),                  // 153: ddex.ern.v432.MessagingPartyWithoutCode
	(*MusicalWorkId)(nil),                              // 154: ddex.ern.v432.MusicalWorkId
	(*Name)(nil),                                       // 155: ddex.ern.v432.Name
	(*OperatingSystemType)(nil),                        // 156: ddex.ern.v432.OperatingSystemType
	(*PLine)(nil),                                      // 157: ddex.ern.v432.PLine
	(*ParentalWarningTypeWithStandard)(nil),            // 158: ddex.ern.v432.ParentalWarningTypeWithStandard
	(*PartyName)(nil),                                  // 159: ddex.ern.v432.PartyName
	(*PartyNameWithoutCode)(nil),                       // 160: ddex.ern.v432.PartyNameWithoutCode
	(*PartyRelationshipType)(nil),                      // 161: ddex.ern.v432.PartyRelationshipType
	(*Percentage)(nil),                                 // 162: ddex.ern.v432.Percentage
	(*Period)(nil),                                     // 163: ddex.ern.v432.Period
	(*Prefix)(nil),                                     // 164: ddex.ern.v432.Prefix
	(*Price)(nil),                                      // 165: ddex.ern.v432.Price
	(*PriceType)(nil),                                  // 166: ddex.ern.v432.PriceType
	(*PromotionalCode)(nil),                            // 167: ddex.ern.v432.PromotionalCode
	(*ProprietaryId)(nil),                              // 168: ddex.ern.v432.ProprietaryId
	(*Purpose)(nil),                                    // 169: ddex.ern.v432.Purpose
	(*RatingAgency)(nil),                               // 170: ddex.ern.v432.RatingAgency
	(*RatingReason)(nil),                               // 171: ddex.ern.v432.RatingReason
	(*Reason)(nil),                                     // 172: ddex.ern.v432.Reason
	(*RelatedParty)(nil),                               // 173: ddex.ern.v432.RelatedParty
	(*ReleaseRelationshipType)(nil),                    // 174: ddex.ern.v432.ReleaseRelationshipType
	(*ReleaseTypeForReleaseNotification)(nil),          // 175: ddex.ern.v432.ReleaseTypeForReleaseNotification
	(*ResourceContainedResourceReference)(nil),         // 176: ddex.ern.v432.ResourceContainedResourceReference
	(*ResourceContainedResourceReferenceList)(nil),     // 177: ddex.ern.v432.ResourceContainedResourceReferenceList
	(*ResourceContributorRole)(nil),                    // 178: ddex.ern.v432.ResourceContributorRole
	(*ResourceId)(nil),                                 // 179: ddex.ern.v432.ResourceId
	(*ResourceProprietaryId)(nil),                      // 180: ddex.ern.v432.ResourceProprietaryId
	(*RightsClaimPolicyReason)(nil),                    // 181: ddex.ern.v432.RightsClaimPolicyReason
	(*RightsType)(nil),                                 // 182: ddex.ern.v432.RightsType
	(*SamplingRate)(nil),                               // 183: ddex.ern.v432.SamplingRate
	(*SessionType)(nil),                                // 184: ddex.ern.v432.SessionType
	(*SheetMusicCodecType)(nil),                        // 185: ddex.ern.v432.SheetMusicCodecType
	(*SheetMusicId)(nil),                               // 186: ddex.ern.v432.SheetMusicId
	(*SheetMusicType)(nil),                             // 187: ddex.ern.v432.SheetMusicType
	(*SoftwareType)(nil),                               // 188: ddex.ern.v432.SoftwareType
	(*SoundRecordingId)(nil),                           // 189: ddex.ern.v432.SoundRecordingId
	(*SoundRecordingType)(nil),                         // 190: ddex.ern.v432.SoundRecordingType
	(*SpecialContributorType)(nil),                     // 191: ddex.ern.v432.SpecialContributorType
	(*SubGenreCategory)(nil),                           // 192: ddex.ern.v432.SubGenreCategory
	(*SubGenreCategoryValue)(nil),                      // 193: ddex.ern.v432.SubGenreCategoryValue
	(*TextCodecType)(nil),                              // 194: ddex.ern.v432.TextCodecType
	(*TextId)(nil),                                     // 195: ddex.ern.v432.TextId
	(*TextType)(nil),                                   // 196: ddex.ern.v432.TextType
	(*TextWithFormat)(nil),                             // 197: ddex.ern.v432.TextWithFormat
	(*TextWithoutTerritory)(nil),                       // 198: ddex.ern.v432.TextWithoutTerritory
	(*TitleDisplayInformation)(nil),                    // 199: ddex.ern.v432.TitleDisplayInformation
	(*ValidityPeriod)(nil),                             // 200: ddex.ern.v432.ValidityPeriod
	(*Venue)(nil),                                      // 201: ddex.ern.v432.Venue
	(*VersionType)(nil),                                // 202: ddex.ern.v432.VersionType
	(*VideoCodecType)(nil),                             // 203: ddex.ern.v432.VideoCodecType
	(*VideoDefinitionType)(nil),                        // 204: ddex.ern.v432.VideoDefinitionType
	(*VideoId)(nil),                                    // 205: ddex.ern.v432.VideoId
	(avs.ReleaseProfileVersionId)(0),                   // 206: ddex.avs.ReleaseProfileVersionId
	(avs.ReleaseProfileVariantVersionId)(0),            // 207: ddex.avs.ReleaseProfileVariantVersionId
	(avs.CurrentTerritoryCode)(0),                      // 208: ddex.avs.CurrentTerritoryCode
	(avs.ExpressionType)(0),                            // 209: ddex.avs.ExpressionType
	(avs.UnitOfConditionValue)(0),                      // 210: ddex.avs.UnitOfConditionValue
	(avs.ReferenceCreation)(0),                         // 211: ddex.avs.ReferenceCreation
	(avs.RelationalRelator)(0),                         // 212: ddex.avs.RelationalRelator
	(avs.MeasurementType)(0),                           // 213: ddex.avs.MeasurementType
	(avs.CodingType)(0),                                // 214: ddex.avs.CodingType
	(avs.ContainsAI)(0),                                // 215: ddex.avs.ContainsAI
	(avs.AllTerritoryCode)(0),                          // 216: ddex.avs.AllTerritoryCode
	(avs.LinkDescription)(0),                           // 217: ddex.avs.LinkDescription
	(avs.PriceInformationType)(0),                      // 218: ddex.avs.PriceInformationType
	(avs.ResourceRelationshipType)(0),                  // 219: ddex.avs.ResourceRelationshipType
	(avs.LabelType)(0),                                 // 220: ddex.avs.LabelType
	(avs.RightsControllerRole)(0),                      // 221: ddex.avs.RightsControllerRole
	(avs.ResourceGroupType)(0),                         // 222: ddex.avs.ResourceGroupType
	(avs.RightsClaimPolicyType)(0),                     // 223: ddex.avs.RightsClaimPolicyType
	(avs.CompositeMusicalWorkType)(0),                  // 224: ddex.avs.CompositeMusicalWorkType
	(avs.EditionType)(0),                               // 225: ddex.avs.EditionType
	(avs.RecordingMode)(0),                             // 226: ddex.avs.RecordingMode
	(avs.AdditionalTitleType)(0),                       // 227: ddex.avs.AdditionalTitleType
	(avs.DeliveryFileType)(0),                          // 228: ddex.avs.DeliveryFileType
	(avs.ElectroOpticalTransferFunctionType)(0),        // 229: ddex.avs.ElectroOpticalTransferFunctionType
	(avs.PrimaryColorType)(0),                          // 230: ddex.avs.PrimaryColorType
	(avs.HdrVideoStaticMetadataType)(0),                // 231: ddex.avs.HdrVideoStaticMetadataType
	(avs.RightsControllerType)(0),                      // 232: ddex.avs.RightsControllerType
	(avs.AffiliationType)(0),                           // 233: ddex.avs.AffiliationType
	(avs.TerritoryCodeTypeIncludingDeprecatedCodes)(0), // 234: ddex.avs.TerritoryCodeTypeIncludingDeprecatedCodes
	(avs.AspectRatioType)(0),                           // 235: ddex.avs.AspectRatioType
	(avs.UnitOfBitRate)(0),                             // 236: ddex.avs.UnitOfBitRate
	(avs.TerritoryCodeType)(0),                         // 237: ddex.avs.TerritoryCodeType
	(avs.BinaryDataType)(0),                            // 238: ddex.avs.BinaryDataType
	(avs.SubTitleType)(0),                              // 239: ddex.avs.SubTitleType
	(avs.UnitOfExtent)(0),                              // 240: ddex.avs.UnitOfExtent
	(avs.UnitOfFrameRate)(0),                           // 241: ddex.avs.UnitOfFrameRate
	(avs.MessageControlType)(0),                        // 242: ddex.avs.MessageControlType
	(avs.ParentalWarningStandard)(0),                   // 243: ddex.avs.ParentalWarningStandard
	(avs.CurrencyCode)(0),                              // 244: ddex.avs.CurrencyCode
	(avs.UnitOfFrequency)(0),                           // 245: ddex.avs.UnitOfFrequency
	(avs.TextCodecType)(0),                             // 246: ddex.avs.TextCodecType
}
var file_ddex_ern_v432_v432_proto_depIdxs = []int32{
	152, // 0: ddex.ern.v432.NewReleaseMessage.message_header:type_name -> ddex.ern.v432.MessageHeader
	56,  // 1: ddex.ern.v432.NewReleaseMessage.release_admin:type_name -> ddex.ern.v432.ReleaseAdmin
	43,  // 2: ddex.ern.v432.NewReleaseMessage.party_list:type_name -> ddex.ern.v432.PartyList
	17,  // 3: ddex.ern.v432.NewReleaseMessage.cue_sheet_list:type_name -> ddex.ern.v432.CueSheetList
	65,  // 4: ddex.ern.v432.NewReleaseMessage.resource_list:type_name -> ddex.ern.v432.ResourceList
	8,   // 5: ddex.ern.v432.NewReleaseMessage.chapter_list:type_name -> ddex.ern.v432.ChapterList
	61,  // 6: ddex.ern.v432.NewReleaseMessage.release_list:type_name -> ddex.ern.v432.ReleaseList
	19,  // 7: ddex.ern.v432.NewReleaseMessage.deal_list:type_name -> ddex.ern.v432.DealList
	76,  // 8: ddex.ern.v432.NewReleaseMessage.supplemental_document_list:type_name -> ddex.ern.v432.SupplementalDocumentList
	206, // 9: ddex.ern.v432.NewReleaseMessage.release_profile_version_id:type_name -> ddex.avs.ReleaseProfileVersionId
	207, // 10: ddex.ern.v432.NewReleaseMessage.release_profile_variant_version_id:type_name -> ddex.avs.ReleaseProfileVariantVersionId
	152, // 11: ddex.ern.v432.PurgeReleaseMessage.message_header:type_name -> ddex.ern.v432.MessageHeader
	50,  // 12: ddex.ern.v432.PurgeReleaseMessage.purged_release:type_name -> ddex.ern.v432.PurgedRelease
	98,  // 13: ddex.ern.v432.AdministratingRecordCompany.role:type_name -> ddex.ern.v432.AdministratingRecordCompanyRole
	109, // 14: ddex.ern.v432.AudioDeliveryFile.container_format:type_name -> ddex.ern.v432.ContainerFormat
	102, // 15: ddex.ern.v432.AudioDeliveryFile.audio_codec_type:type_name -> ddex.ern.v432.AudioCodecType
	103, // 16: ddex.ern.v432.AudioDeliveryFile.bit_rate:type_name -> ddex.ern.v432.BitRate
	103, // 17: ddex.ern.v432.AudioDeliveryFile.original_bit_rate:type_name -> ddex.ern.v432.BitRate
	183, // 18: ddex.ern.v432.AudioDeliveryFile.sampling_rate:type_name -> ddex.ern.v432.SamplingRate
	183, // 19: ddex.ern.v432.AudioDeliveryFile.original_sampling_rate:type_name -> ddex.ern.v432.SamplingRate
	133, // 20: ddex.ern.v432.AudioDeliveryFile.file:type_name -> ddex.ern.v432.File
	134, // 21: ddex.ern.v432.AudioDeliveryFile.fingerprint:type_name -> ddex.ern.v432.Fingerprint
	170, // 22: ddex.ern.v432.AvRating.agency:type_name -> ddex.ern.v432.RatingAgency
	171, // 23: ddex.ern.v432.AvRating.reason:type_name -> ddex.ern.v432.RatingReason
	208, // 24: ddex.ern.v432.AvRating.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	168, // 25: ddex.ern.v432.Channel.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	107, // 26: ddex.ern.v432.Chapter.chapter_id:type_name -> ddex.ern.v432.ChapterId
	30,  // 27: ddex.ern.v432.Chapter.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 28: ddex.ern.v432.Chapter.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 29: ddex.ern.v432.Chapter.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 30: ddex.ern.v432.Chapter.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	110, // 31: ddex.ern.v432.Chapter.contributor:type_name -> ddex.ern.v432.Contributor
	9,   // 32: ddex.ern.v432.Chapter.character:type_name -> ddex.ern.v432.Character
	7,   // 33: ddex.ern.v432.ChapterList.chapter:type_name -> ddex.ern.v432.Chapter
	110, // 34: ddex.ern.v432.Character.performer:type_name -> ddex.ern.v432.Contributor
	108, // 35: ddex.ern.v432.ClipDetails.clip_type:type_name -> ddex.ern.v432.ClipType
	209, // 36: ddex.ern.v432.ClipDetails.expression_type:type_name -> ddex.avs.ExpressionType
	58,  // 37: ddex.ern.v432.ClipRelease.release_id:type_name -> ddex.ern.v432.ReleaseId
	30,  // 38: ddex.ern.v432.ClipRelease.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 39: ddex.ern.v432.ClipRelease.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 40: ddex.ern.v432.ClipRelease.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 41: ddex.ern.v432.ClipRelease.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	60,  // 42: ddex.ern.v432.ClipRelease.release_label_reference:type_name -> ddex.ern.v432.ReleaseLabelReferenceWithParty
	141, // 43: ddex.ern.v432.ClipRelease.display_genre:type_name -> ddex.ern.v432.GenreWithTerritory
	53,  // 44: ddex.ern.v432.ClipRelease.related_release:type_name -> ddex.ern.v432.RelatedRelease
	210, // 45: ddex.ern.v432.ConditionForRightsClaimPolicy.unit:type_name -> ddex.avs.UnitOfConditionValue
	211, // 46: ddex.ern.v432.ConditionForRightsClaimPolicy.reference_creation:type_name -> ddex.avs.ReferenceCreation
	212, // 47: ddex.ern.v432.ConditionForRightsClaimPolicy.relational_relator:type_name -> ddex.avs.RelationalRelator
	213, // 48: ddex.ern.v432.ConditionForRightsClaimPolicy.measurement_type:type_name -> ddex.avs.MeasurementType
	69,  // 49: ddex.ern.v432.ConditionForRightsClaimPolicy.segment:type_name -> ddex.ern.v432.Segment
	70,  // 50: ddex.ern.v432.ConditionForRightsClaimPolicy.service_exception:type_name -> ddex.ern.v432.ServiceException
	117, // 51: ddex.ern.v432.Cue.cue_use_type:type_name -> ddex.ern.v432.CueUseType
	116, // 52: ddex.ern.v432.Cue.cue_theme_type:type_name -> ddex.ern.v432.CueThemeType
	119, // 53: ddex.ern.v432.Cue.cue_vocal_type:type_name -> ddex.ern.v432.CueVocalType
	118, // 54: ddex.ern.v432.Cue.cue_visual_perception_type:type_name -> ddex.ern.v432.CueVisualPerceptionType
	114, // 55: ddex.ern.v432.Cue.cue_origin:type_name -> ddex.ern.v432.CueOrigin
	30,  // 56: ddex.ern.v432.Cue.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 57: ddex.ern.v432.Cue.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 58: ddex.ern.v432.Cue.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 59: ddex.ern.v432.Cue.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	110, // 60: ddex.ern.v432.Cue.contributor:type_name -> ddex.ern.v432.Contributor
	157, // 61: ddex.ern.v432.Cue.p_line:type_name -> ddex.ern.v432.PLine
	104, // 62: ddex.ern.v432.Cue.c_line:type_name -> ddex.ern.v432.CLine
	168, // 63: ddex.ern.v432.CueSheet.cue_sheet_id:type_name -> ddex.ern.v432.ProprietaryId
	115, // 64: ddex.ern.v432.CueSheet.cue_sheet_type:type_name -> ddex.ern.v432.CueSheetType
	15,  // 65: ddex.ern.v432.CueSheet.cue:type_name -> ddex.ern.v432.Cue
	16,  // 66: ddex.ern.v432.CueSheetList.cue_sheet:type_name -> ddex.ern.v432.CueSheet
	22,  // 67: ddex.ern.v432.Deal.deal_terms:type_name -> ddex.ern.v432.DealTerms
	21,  // 68: ddex.ern.v432.Deal.deal_technical_resource_details_reference_list:type_name -> ddex.ern.v432.DealTechnicalResourceDetailsReferenceList
	31,  // 69: ddex.ern.v432.Deal.distribution_channel_page:type_name -> ddex.ern.v432.DistributionChannelPage
	57,  // 70: ddex.ern.v432.DealList.release_deal:type_name -> ddex.ern.v432.ReleaseDeal
	62,  // 71: ddex.ern.v432.DealList.release_visibility:type_name -> ddex.ern.v432.ReleaseVisibility
	89,  // 72: ddex.ern.v432.DealList.track_release_visibility:type_name -> ddex.ern.v432.TrackReleaseVisibility
	46,  // 73: ddex.ern.v432.DealTerms.validity_period:type_name -> ddex.ern.v432.PeriodWithStartDate
	12,  // 74: ddex.ern.v432.DealTerms.commercial_model_type:type_name -> ddex.ern.v432.CommercialModelType
	28,  // 75: ddex.ern.v432.DealTerms.use_type:type_name -> ddex.ern.v432.DiscoverableUseType
	91,  // 76: ddex.ern.v432.DealTerms.user_interface_type:type_name -> ddex.ern.v432.UserInterfaceType
	105, // 77: ddex.ern.v432.DealTerms.carrier_type:type_name -> ddex.ern.v432.CarrierType
	23,  // 78: ddex.ern.v432.DealTerms.technical_instantiation:type_name -> ddex.ern.v432.DealTermsTechnicalInstantiation
	68,  // 79: ddex.ern.v432.DealTerms.rights_claim_policy:type_name -> ddex.ern.v432.RightsClaimPolicy
	49,  // 80: ddex.ern.v432.DealTerms.price_information:type_name -> ddex.ern.v432.PriceInformation
	20,  // 81: ddex.ern.v432.DealTerms.instant_gratification_resource_list:type_name -> ddex.ern.v432.DealResourceReferenceList
	48,  // 82: ddex.ern.v432.DealTerms.physical_returns:type_name -> ddex.ern.v432.PhysicalReturns
	204, // 83: ddex.ern.v432.DealTermsTechnicalInstantiation.video_definition_type:type_name -> ddex.ern.v432.VideoDefinitionType
	214, // 84: ddex.ern.v432.DealTermsTechnicalInstantiation.coding_type:type_name -> ddex.avs.CodingType
	103, // 85: ddex.ern.v432.DealTermsTechnicalInstantiation.bit_rate:type_name -> ddex.ern.v432.BitRate
	208, // 86: ddex.ern.v432.Deity.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	90,  // 87: ddex.ern.v432.DelegatedUsageRights.use_type:type_name -> ddex.ern.v432.UseType
	163, // 88: ddex.ern.v432.DelegatedUsageRights.period_of_rights_delegation:type_name -> ddex.ern.v432.Period
	100, // 89: ddex.ern.v432.DelegatedUsageRights.territory_of_rights_delegation:type_name -> ddex.ern.v432.AllTerritoryCode
	208, // 90: ddex.ern.v432.DescriptionWithTerritory.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	111, // 91: ddex.ern.v432.DetailedResourceContributor.role:type_name -> ddex.ern.v432.ContributorRole
	145, // 92: ddex.ern.v432.DetailedResourceContributor.instrument_type:type_name -> ddex.ern.v432.InstrumentType
	126, // 93: ddex.ern.v432.DetailedResourceContributor.display_credits:type_name -> ddex.ern.v432.DisplayCredits
	111, // 94: ddex.ern.v432.DisplayArtist.artistic_role:type_name -> ddex.ern.v432.ContributorRole
	199, // 95: ddex.ern.v432.DisplayArtist.title_display_information:type_name -> ddex.ern.v432.TitleDisplayInformation
	126, // 96: ddex.ern.v432.DisplayArtist.display_credits:type_name -> ddex.ern.v432.DisplayCredits
	208, // 97: ddex.ern.v432.DisplayTitleText.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	123, // 98: ddex.ern.v432.DistributionChannelPage.party_id:type_name -> ddex.ern.v432.DetailedPartyId
	155, // 99: ddex.ern.v432.DistributionChannelPage.page_name:type_name -> ddex.ern.v432.Name
	111, // 100: ddex.ern.v432.EditionContributor.role:type_name -> ddex.ern.v432.ContributorRole
	215, // 101: ddex.ern.v432.EditionContributor.ai_contribution:type_name -> ddex.avs.ContainsAI
	146, // 102: ddex.ern.v432.EditionContributor.is_credited:type_name -> ddex.ern.v432.IsCredited
	126, // 103: ddex.ern.v432.EditionContributor.display_credits:type_name -> ddex.ern.v432.DisplayCredits
	208, // 104: ddex.ern.v432.EventDateTimeWithoutFlags.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	208, // 105: ddex.ern.v432.EventDateWithCurrentTerritory.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	216, // 106: ddex.ern.v432.EventDateWithDefault.applicable_territory_code:type_name -> ddex.avs.AllTerritoryCode
	216, // 107: ddex.ern.v432.EventDateWithoutFlags.applicable_territory_code:type_name -> ddex.avs.AllTerritoryCode
	47,  // 108: ddex.ern.v432.ExternalResourceLink.validity_period:type_name -> ddex.ern.v432.PeriodWithoutFlags
	132, // 109: ddex.ern.v432.ExternalResourceLink.externally_linked_resource_type:type_name -> ddex.ern.v432.ExternallyLinkedResourceType
	144, // 110: ddex.ern.v432.Image.type:type_name -> ddex.ern.v432.ImageType
	180, // 111: ddex.ern.v432.Image.resource_id:type_name -> ddex.ern.v432.ResourceProprietaryId
	30,  // 112: ddex.ern.v432.Image.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 113: ddex.ern.v432.Image.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 114: ddex.ern.v432.Image.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 115: ddex.ern.v432.Image.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	202, // 116: ddex.ern.v432.Image.version_type:type_name -> ddex.ern.v432.VersionType
	124, // 117: ddex.ern.v432.Image.display_artist_name:type_name -> ddex.ern.v432.DisplayArtistNameWithOriginalLanguage
	29,  // 118: ddex.ern.v432.Image.display_artist:type_name -> ddex.ern.v432.DisplayArtist
	110, // 119: ddex.ern.v432.Image.contributor:type_name -> ddex.ern.v432.Contributor
	66,  // 120: ddex.ern.v432.Image.resource_rights_controller:type_name -> ddex.ern.v432.ResourceRightsController
	97,  // 121: ddex.ern.v432.Image.work_rights_controller:type_name -> ddex.ern.v432.WorkRightsController
	104, // 122: ddex.ern.v432.Image.c_line:type_name -> ddex.ern.v432.CLine
	113, // 123: ddex.ern.v432.Image.courtesy_line:type_name -> ddex.ern.v432.CourtesyLine
	36,  // 124: ddex.ern.v432.Image.creation_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	138, // 125: ddex.ern.v432.Image.first_publication_date:type_name -> ddex.ern.v432.FulfillmentDate
	158, // 126: ddex.ern.v432.Image.parental_warning_type:type_name -> ddex.ern.v432.ParentalWarningTypeWithStandard
	53,  // 127: ddex.ern.v432.Image.related_release:type_name -> ddex.ern.v432.RelatedRelease
	54,  // 128: ddex.ern.v432.Image.related_resource:type_name -> ddex.ern.v432.RelatedResource
	215, // 129: ddex.ern.v432.Image.contains_a_i:type_name -> ddex.avs.ContainsAI
	26,  // 130: ddex.ern.v432.Image.description:type_name -> ddex.ern.v432.DescriptionWithTerritory
	79,  // 131: ddex.ern.v432.Image.technical_details:type_name -> ddex.ern.v432.TechnicalImageDetails
	217, // 132: ddex.ern.v432.LinkedReleaseResourceReference.link_description:type_name -> ddex.avs.LinkDescription
	184, // 133: ddex.ern.v432.LocationAndDateOfSession.session_type:type_name -> ddex.ern.v432.SessionType
	163, // 134: ddex.ern.v432.LocationAndDateOfSession.period:type_name -> ddex.ern.v432.Period
	201, // 135: ddex.ern.v432.LocationAndDateOfSession.venue:type_name -> ddex.ern.v432.Venue
	197, // 136: ddex.ern.v432.LocationAndDateOfSession.comment:type_name -> ddex.ern.v432.TextWithFormat
	45,  // 137: ddex.ern.v432.LocationAndDateOfSession.contributor:type_name -> ddex.ern.v432.PartyWithRole
	99,  // 138: ddex.ern.v432.Party.affiliation:type_name -> ddex.ern.v432.Affiliation
	173, // 139: ddex.ern.v432.Party.related_party:type_name -> ddex.ern.v432.RelatedParty
	42,  // 140: ddex.ern.v432.PartyList.party:type_name -> ddex.ern.v432.Party
	5,   // 141: ddex.ern.v432.PartyList.brand:type_name -> ddex.ern.v432.Brand
	155, // 142: ddex.ern.v432.PartyNameWithTerritory.full_name:type_name -> ddex.ern.v432.Name
	155, // 143: ddex.ern.v432.PartyNameWithTerritory.full_name_indexed:type_name -> ddex.ern.v432.Name
	155, // 144: ddex.ern.v432.PartyNameWithTerritory.names_before_key_name:type_name -> ddex.ern.v432.Name
	155, // 145: ddex.ern.v432.PartyNameWithTerritory.key_name:type_name -> ddex.ern.v432.Name
	155, // 146: ddex.ern.v432.PartyNameWithTerritory.names_after_key_name:type_name -> ddex.ern.v432.Name
	155, // 147: ddex.ern.v432.PartyNameWithTerritory.abbreviated_name:type_name -> ddex.ern.v432.Name
	208, // 148: ddex.ern.v432.PartyNameWithTerritory.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	168, // 149: ddex.ern.v432.PartyWithRole.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	44,  // 150: ddex.ern.v432.PartyWithRole.party_name:type_name -> ddex.ern.v432.PartyNameWithTerritory
	178, // 151: ddex.ern.v432.PartyWithRole.role:type_name -> ddex.ern.v432.ResourceContributorRole
	166, // 152: ddex.ern.v432.PriceInformation.price_code:type_name -> ddex.ern.v432.PriceType
	165, // 153: ddex.ern.v432.PriceInformation.wholesale_price_per_unit:type_name -> ddex.ern.v432.Price
	165, // 154: ddex.ern.v432.PriceInformation.bulk_order_wholesale_price_per_unit:type_name -> ddex.ern.v432.Price
	165, // 155: ddex.ern.v432.PriceInformation.suggested_retail_price:type_name -> ddex.ern.v432.Price
	218, // 156: ddex.ern.v432.PriceInformation.price_type:type_name -> ddex.avs.PriceInformationType
	58,  // 157: ddex.ern.v432.PurgedRelease.release_id:type_name -> ddex.ern.v432.ReleaseId
	87,  // 158: ddex.ern.v432.PurgedRelease.title:type_name -> ddex.ern.v432.Title
	27,  // 159: ddex.ern.v432.PurgedRelease.contributor:type_name -> ddex.ern.v432.DetailedResourceContributor
	208, // 160: ddex.ern.v432.Raga.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	174, // 161: ddex.ern.v432.RelatedRelease.release_relationship_type:type_name -> ddex.ern.v432.ReleaseRelationshipType
	58,  // 162: ddex.ern.v432.RelatedRelease.release_id:type_name -> ddex.ern.v432.ReleaseId
	30,  // 163: ddex.ern.v432.RelatedRelease.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 164: ddex.ern.v432.RelatedRelease.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 165: ddex.ern.v432.RelatedRelease.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 166: ddex.ern.v432.RelatedRelease.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	124, // 167: ddex.ern.v432.RelatedRelease.display_artist_name:type_name -> ddex.ern.v432.DisplayArtistNameWithOriginalLanguage
	59,  // 168: ddex.ern.v432.RelatedRelease.release_label_reference:type_name -> ddex.ern.v432.ReleaseLabelReference
	36,  // 169: ddex.ern.v432.RelatedRelease.release_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	36,  // 170: ddex.ern.v432.RelatedRelease.original_release_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	219, // 171: ddex.ern.v432.RelatedResource.resource_relationship_type:type_name -> ddex.avs.ResourceRelationshipType
	86,  // 172: ddex.ern.v432.RelatedResource.timing:type_name -> ddex.ern.v432.Timing
	175, // 173: ddex.ern.v432.Release.release_type:type_name -> ddex.ern.v432.ReleaseTypeForReleaseNotification
	58,  // 174: ddex.ern.v432.Release.release_id:type_name -> ddex.ern.v432.ReleaseId
	30,  // 175: ddex.ern.v432.Release.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 176: ddex.ern.v432.Release.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 177: ddex.ern.v432.Release.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 178: ddex.ern.v432.Release.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	202, // 179: ddex.ern.v432.Release.version_type:type_name -> ddex.ern.v432.VersionType
	124, // 180: ddex.ern.v432.Release.display_artist_name:type_name -> ddex.ern.v432.DisplayArtistNameWithOriginalLanguage
	29,  // 181: ddex.ern.v432.Release.display_artist:type_name -> ddex.ern.v432.DisplayArtist
	60,  // 182: ddex.ern.v432.Release.release_label_reference:type_name -> ddex.ern.v432.ReleaseLabelReferenceWithParty
	2,   // 183: ddex.ern.v432.Release.administrating_record_company:type_name -> ddex.ern.v432.AdministratingRecordCompany
	157, // 184: ddex.ern.v432.Release.p_line:type_name -> ddex.ern.v432.PLine
	104, // 185: ddex.ern.v432.Release.c_line:type_name -> ddex.ern.v432.CLine
	113, // 186: ddex.ern.v432.Release.courtesy_line:type_name -> ddex.ern.v432.CourtesyLine
	141, // 187: ddex.ern.v432.Release.display_genre:type_name -> ddex.ern.v432.GenreWithTerritory
	35,  // 188: ddex.ern.v432.Release.release_date:type_name -> ddex.ern.v432.EventDateWithDefault
	35,  // 189: ddex.ern.v432.Release.original_release_date:type_name -> ddex.ern.v432.EventDateWithDefault
	158, // 190: ddex.ern.v432.Release.parental_warning_type:type_name -> ddex.ern.v432.ParentalWarningTypeWithStandard
	4,   // 191: ddex.ern.v432.Release.av_rating:type_name -> ddex.ern.v432.AvRating
	53,  // 192: ddex.ern.v432.Release.related_release:type_name -> ddex.ern.v432.RelatedRelease
	54,  // 193: ddex.ern.v432.Release.related_resource:type_name -> ddex.ern.v432.RelatedResource
	63,  // 194: ddex.ern.v432.Release.resource_group:type_name -> ddex.ern.v432.ResourceGroup
	37,  // 195: ddex.ern.v432.Release.external_resource_link:type_name -> ddex.ern.v432.ExternalResourceLink
	147, // 196: ddex.ern.v432.Release.keywords:type_name -> ddex.ern.v432.KeywordsWithTerritory
	77,  // 197: ddex.ern.v432.Release.synopsis:type_name -> ddex.ern.v432.SynopsisWithTerritory
	51,  // 198: ddex.ern.v432.Release.raga:type_name -> ddex.ern.v432.Raga
	78,  // 199: ddex.ern.v432.Release.tala:type_name -> ddex.ern.v432.Tala
	24,  // 200: ddex.ern.v432.Release.deity:type_name -> ddex.ern.v432.Deity
	215, // 201: ddex.ern.v432.Release.contains_a_i:type_name -> ddex.avs.ContainsAI
	149, // 202: ddex.ern.v432.Release.marketing_comment:type_name -> ddex.ern.v432.MarketingComment
	18,  // 203: ddex.ern.v432.ReleaseDeal.deal:type_name -> ddex.ern.v432.Deal
	106, // 204: ddex.ern.v432.ReleaseId.catalog_number:type_name -> ddex.ern.v432.CatalogNumber
	168, // 205: ddex.ern.v432.ReleaseId.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	220, // 206: ddex.ern.v432.ReleaseLabelReference.label_type:type_name -> ddex.avs.LabelType
	208, // 207: ddex.ern.v432.ReleaseLabelReference.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	220, // 208: ddex.ern.v432.ReleaseLabelReferenceWithParty.label_type:type_name -> ddex.avs.LabelType
	208, // 209: ddex.ern.v432.ReleaseLabelReferenceWithParty.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	55,  // 210: ddex.ern.v432.ReleaseList.release:type_name -> ddex.ern.v432.Release
	88,  // 211: ddex.ern.v432.ReleaseList.track_release:type_name -> ddex.ern.v432.TrackRelease
	11,  // 212: ddex.ern.v432.ReleaseList.clip_release:type_name -> ddex.ern.v432.ClipRelease
	30,  // 213: ddex.ern.v432.ResourceGroup.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 214: ddex.ern.v432.ResourceGroup.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 215: ddex.ern.v432.ResourceGroup.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 216: ddex.ern.v432.ResourceGroup.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	29,  // 217: ddex.ern.v432.ResourceGroup.display_artist:type_name -> ddex.ern.v432.DisplayArtist
	105, // 218: ddex.ern.v432.ResourceGroup.carrier_type:type_name -> ddex.ern.v432.CarrierType
	67,  // 219: ddex.ern.v432.ResourceGroup.resource_group:type_name -> ddex.ern.v432.ResourceSubGroup
	64,  // 220: ddex.ern.v432.ResourceGroup.resource_group_content_item:type_name -> ddex.ern.v432.ResourceGroupContentItem
	40,  // 221: ddex.ern.v432.ResourceGroup.linked_release_resource_reference:type_name -> ddex.ern.v432.LinkedReleaseResourceReference
	40,  // 222: ddex.ern.v432.ResourceGroupContentItem.linked_release_resource_reference:type_name -> ddex.ern.v432.LinkedReleaseResourceReference
	73,  // 223: ddex.ern.v432.ResourceList.sound_recording:type_name -> ddex.ern.v432.SoundRecording
	92,  // 224: ddex.ern.v432.ResourceList.video:type_name -> ddex.ern.v432.Video
	39,  // 225: ddex.ern.v432.ResourceList.image:type_name -> ddex.ern.v432.Image
	85,  // 226: ddex.ern.v432.ResourceList.text:type_name -> ddex.ern.v432.Text
	71,  // 227: ddex.ern.v432.ResourceList.sheet_music:type_name -> ddex.ern.v432.SheetMusic
	72,  // 228: ddex.ern.v432.ResourceList.software:type_name -> ddex.ern.v432.Software
	221, // 229: ddex.ern.v432.ResourceRightsController.rights_control_type:type_name -> ddex.avs.RightsControllerRole
	25,  // 230: ddex.ern.v432.ResourceRightsController.delegated_usage_rights:type_name -> ddex.ern.v432.DelegatedUsageRights
	30,  // 231: ddex.ern.v432.ResourceSubGroup.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 232: ddex.ern.v432.ResourceSubGroup.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 233: ddex.ern.v432.ResourceSubGroup.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 234: ddex.ern.v432.ResourceSubGroup.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	29,  // 235: ddex.ern.v432.ResourceSubGroup.display_artist:type_name -> ddex.ern.v432.DisplayArtist
	105, // 236: ddex.ern.v432.ResourceSubGroup.carrier_type:type_name -> ddex.ern.v432.CarrierType
	67,  // 237: ddex.ern.v432.ResourceSubGroup.resource_group:type_name -> ddex.ern.v432.ResourceSubGroup
	64,  // 238: ddex.ern.v432.ResourceSubGroup.resource_group_content_item:type_name -> ddex.ern.v432.ResourceGroupContentItem
	40,  // 239: ddex.ern.v432.ResourceSubGroup.linked_release_resource_reference:type_name -> ddex.ern.v432.LinkedReleaseResourceReference
	222, // 240: ddex.ern.v432.ResourceSubGroup.resource_group_type:type_name -> ddex.avs.ResourceGroupType
	13,  // 241: ddex.ern.v432.RightsClaimPolicy.condition:type_name -> ddex.ern.v432.ConditionForRightsClaimPolicy
	223, // 242: ddex.ern.v432.RightsClaimPolicy.rights_claim_policy_type:type_name -> ddex.avs.RightsClaimPolicyType
	181, // 243: ddex.ern.v432.RightsClaimPolicy.rights_claim_policy_reason:type_name -> ddex.ern.v432.RightsClaimPolicyReason
	155, // 244: ddex.ern.v432.ServiceException.trading_name:type_name -> ddex.ern.v432.Name
	6,   // 245: ddex.ern.v432.ServiceException.channel:type_name -> ddex.ern.v432.Channel
	187, // 246: ddex.ern.v432.SheetMusic.type:type_name -> ddex.ern.v432.SheetMusicType
	186, // 247: ddex.ern.v432.SheetMusic.resource_id:type_name -> ddex.ern.v432.SheetMusicId
	154, // 248: ddex.ern.v432.SheetMusic.work_id:type_name -> ddex.ern.v432.MusicalWorkId
	30,  // 249: ddex.ern.v432.SheetMusic.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 250: ddex.ern.v432.SheetMusic.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 251: ddex.ern.v432.SheetMusic.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 252: ddex.ern.v432.SheetMusic.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	202, // 253: ddex.ern.v432.SheetMusic.version_type:type_name -> ddex.ern.v432.VersionType
	124, // 254: ddex.ern.v432.SheetMusic.display_artist_name:type_name -> ddex.ern.v432.DisplayArtistNameWithOriginalLanguage
	29,  // 255: ddex.ern.v432.SheetMusic.display_artist:type_name -> ddex.ern.v432.DisplayArtist
	110, // 256: ddex.ern.v432.SheetMusic.contributor:type_name -> ddex.ern.v432.Contributor
	66,  // 257: ddex.ern.v432.SheetMusic.resource_rights_controller:type_name -> ddex.ern.v432.ResourceRightsController
	97,  // 258: ddex.ern.v432.SheetMusic.work_rights_controller:type_name -> ddex.ern.v432.WorkRightsController
	104, // 259: ddex.ern.v432.SheetMusic.c_line:type_name -> ddex.ern.v432.CLine
	113, // 260: ddex.ern.v432.SheetMusic.courtesy_line:type_name -> ddex.ern.v432.CourtesyLine
	36,  // 261: ddex.ern.v432.SheetMusic.creation_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	138, // 262: ddex.ern.v432.SheetMusic.first_publication_date:type_name -> ddex.ern.v432.FulfillmentDate
	158, // 263: ddex.ern.v432.SheetMusic.parental_warning_type:type_name -> ddex.ern.v432.ParentalWarningTypeWithStandard
	53,  // 264: ddex.ern.v432.SheetMusic.related_release:type_name -> ddex.ern.v432.RelatedRelease
	54,  // 265: ddex.ern.v432.SheetMusic.related_resource:type_name -> ddex.ern.v432.RelatedResource
	177, // 266: ddex.ern.v432.SheetMusic.resource_contained_resource_reference_list:type_name -> ddex.ern.v432.ResourceContainedResourceReferenceList
	80,  // 267: ddex.ern.v432.SheetMusic.technical_details:type_name -> ddex.ern.v432.TechnicalSheetMusicDetails
	188, // 268: ddex.ern.v432.Software.type:type_name -> ddex.ern.v432.SoftwareType
	180, // 269: ddex.ern.v432.Software.resource_id:type_name -> ddex.ern.v432.ResourceProprietaryId
	154, // 270: ddex.ern.v432.Software.work_id:type_name -> ddex.ern.v432.MusicalWorkId
	30,  // 271: ddex.ern.v432.Software.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 272: ddex.ern.v432.Software.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 273: ddex.ern.v432.Software.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 274: ddex.ern.v432.Software.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	202, // 275: ddex.ern.v432.Software.version_type:type_name -> ddex.ern.v432.VersionType
	124, // 276: ddex.ern.v432.Software.display_artist_name:type_name -> ddex.ern.v432.DisplayArtistNameWithOriginalLanguage
	29,  // 277: ddex.ern.v432.Software.display_artist:type_name -> ddex.ern.v432.DisplayArtist
	110, // 278: ddex.ern.v432.Software.contributor:type_name -> ddex.ern.v432.Contributor
	66,  // 279: ddex.ern.v432.Software.resource_rights_controller:type_name -> ddex.ern.v432.ResourceRightsController
	97,  // 280: ddex.ern.v432.Software.work_rights_controller:type_name -> ddex.ern.v432.WorkRightsController
	157, // 281: ddex.ern.v432.Software.p_line:type_name -> ddex.ern.v432.PLine
	104, // 282: ddex.ern.v432.Software.c_line:type_name -> ddex.ern.v432.CLine
	113, // 283: ddex.ern.v432.Software.courtesy_line:type_name -> ddex.ern.v432.CourtesyLine
	36,  // 284: ddex.ern.v432.Software.creation_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	138, // 285: ddex.ern.v432.Software.first_publication_date:type_name -> ddex.ern.v432.FulfillmentDate
	158, // 286: ddex.ern.v432.Software.parental_warning_type:type_name -> ddex.ern.v432.ParentalWarningTypeWithStandard
	53,  // 287: ddex.ern.v432.Software.related_release:type_name -> ddex.ern.v432.RelatedRelease
	54,  // 288: ddex.ern.v432.Software.related_resource:type_name -> ddex.ern.v432.RelatedResource
	177, // 289: ddex.ern.v432.Software.resource_contained_resource_reference_list:type_name -> ddex.ern.v432.ResourceContainedResourceReferenceList
	81,  // 290: ddex.ern.v432.Software.technical_details:type_name -> ddex.ern.v432.TechnicalSoftwareDetails
	190, // 291: ddex.ern.v432.SoundRecording.type:type_name -> ddex.ern.v432.SoundRecordingType
	75,  // 292: ddex.ern.v432.SoundRecording.sound_recording_edition:type_name -> ddex.ern.v432.SoundRecordingEdition
	52,  // 293: ddex.ern.v432.SoundRecording.recording_format:type_name -> ddex.ern.v432.RecordingFormat
	154, // 294: ddex.ern.v432.SoundRecording.work_id:type_name -> ddex.ern.v432.MusicalWorkId
	30,  // 295: ddex.ern.v432.SoundRecording.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 296: ddex.ern.v432.SoundRecording.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 297: ddex.ern.v432.SoundRecording.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 298: ddex.ern.v432.SoundRecording.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	202, // 299: ddex.ern.v432.SoundRecording.version_type:type_name -> ddex.ern.v432.VersionType
	124, // 300: ddex.ern.v432.SoundRecording.display_artist_name:type_name -> ddex.ern.v432.DisplayArtistNameWithOriginalLanguage
	29,  // 301: ddex.ern.v432.SoundRecording.display_artist:type_name -> ddex.ern.v432.DisplayArtist
	110, // 302: ddex.ern.v432.SoundRecording.contributor:type_name -> ddex.ern.v432.Contributor
	9,   // 303: ddex.ern.v432.SoundRecording.character:type_name -> ddex.ern.v432.Character
	66,  // 304: ddex.ern.v432.SoundRecording.resource_rights_controller:type_name -> ddex.ern.v432.ResourceRightsController
	97,  // 305: ddex.ern.v432.SoundRecording.work_rights_controller:type_name -> ddex.ern.v432.WorkRightsController
	113, // 306: ddex.ern.v432.SoundRecording.courtesy_line:type_name -> ddex.ern.v432.CourtesyLine
	36,  // 307: ddex.ern.v432.SoundRecording.creation_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	36,  // 308: ddex.ern.v432.SoundRecording.mastered_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	36,  // 309: ddex.ern.v432.SoundRecording.remastered_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	136, // 310: ddex.ern.v432.SoundRecording.first_publication_date:type_name -> ddex.ern.v432.FirstPublicationDate
	41,  // 311: ddex.ern.v432.SoundRecording.location_and_date_of_session:type_name -> ddex.ern.v432.LocationAndDateOfSession
	158, // 312: ddex.ern.v432.SoundRecording.parental_warning_type:type_name -> ddex.ern.v432.ParentalWarningTypeWithStandard
	53,  // 313: ddex.ern.v432.SoundRecording.related_release:type_name -> ddex.ern.v432.RelatedRelease
	54,  // 314: ddex.ern.v432.SoundRecording.related_resource:type_name -> ddex.ern.v432.RelatedResource
	224, // 315: ddex.ern.v432.SoundRecording.composite_musical_work_type:type_name -> ddex.avs.CompositeMusicalWorkType
	215, // 316: ddex.ern.v432.SoundRecording.contains_a_i:type_name -> ddex.avs.ContainsAI
	126, // 317: ddex.ern.v432.SoundRecording.display_credits:type_name -> ddex.ern.v432.DisplayCredits
	148, // 318: ddex.ern.v432.SoundRecording.language_of_performance:type_name -> ddex.ern.v432.Language
	51,  // 319: ddex.ern.v432.SoundRecording.raga:type_name -> ddex.ern.v432.Raga
	78,  // 320: ddex.ern.v432.SoundRecording.tala:type_name -> ddex.ern.v432.Tala
	24,  // 321: ddex.ern.v432.SoundRecording.deity:type_name -> ddex.ern.v432.Deity
	108, // 322: ddex.ern.v432.SoundRecordingClipDetails.clip_type:type_name -> ddex.ern.v432.ClipType
	86,  // 323: ddex.ern.v432.SoundRecordingClipDetails.timing:type_name -> ddex.ern.v432.Timing
	209, // 324: ddex.ern.v432.SoundRecordingClipDetails.expression_type:type_name -> ddex.avs.ExpressionType
	3,   // 325: ddex.ern.v432.SoundRecordingClipDetails.delivery_file:type_name -> ddex.ern.v432.AudioDeliveryFile
	225, // 326: ddex.ern.v432.SoundRecordingEdition.type:type_name -> ddex.avs.EditionType
	189, // 327: ddex.ern.v432.SoundRecordingEdition.resource_id:type_name -> ddex.ern.v432.SoundRecordingId
	32,  // 328: ddex.ern.v432.SoundRecordingEdition.edition_contributor:type_name -> ddex.ern.v432.EditionContributor
	157, // 329: ddex.ern.v432.SoundRecordingEdition.p_line:type_name -> ddex.ern.v432.PLine
	226, // 330: ddex.ern.v432.SoundRecordingEdition.recording_mode:type_name -> ddex.avs.RecordingMode
	82,  // 331: ddex.ern.v432.SoundRecordingEdition.technical_details:type_name -> ddex.ern.v432.TechnicalSoundRecordingDetails
	133, // 332: ddex.ern.v432.SupplementalDocumentList.supplemental_document:type_name -> ddex.ern.v432.File
	208, // 333: ddex.ern.v432.SynopsisWithTerritory.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	208, // 334: ddex.ern.v432.Tala.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	143, // 335: ddex.ern.v432.TechnicalImageDetails.image_codec_type:type_name -> ddex.ern.v432.ImageCodecType
	131, // 336: ddex.ern.v432.TechnicalImageDetails.image_height:type_name -> ddex.ern.v432.Extent
	131, // 337: ddex.ern.v432.TechnicalImageDetails.image_width:type_name -> ddex.ern.v432.Extent
	101, // 338: ddex.ern.v432.TechnicalImageDetails.aspect_ratio:type_name -> ddex.ern.v432.AspectRatio
	10,  // 339: ddex.ern.v432.TechnicalImageDetails.clip_details:type_name -> ddex.ern.v432.ClipDetails
	133, // 340: ddex.ern.v432.TechnicalImageDetails.file:type_name -> ddex.ern.v432.File
	134, // 341: ddex.ern.v432.TechnicalImageDetails.fingerprint:type_name -> ddex.ern.v432.Fingerprint
	208, // 342: ddex.ern.v432.TechnicalImageDetails.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	185, // 343: ddex.ern.v432.TechnicalSheetMusicDetails.sheet_music_codec_type:type_name -> ddex.ern.v432.SheetMusicCodecType
	10,  // 344: ddex.ern.v432.TechnicalSheetMusicDetails.clip_details:type_name -> ddex.ern.v432.ClipDetails
	133, // 345: ddex.ern.v432.TechnicalSheetMusicDetails.file:type_name -> ddex.ern.v432.File
	134, // 346: ddex.ern.v432.TechnicalSheetMusicDetails.fingerprint:type_name -> ddex.ern.v432.Fingerprint
	208, // 347: ddex.ern.v432.TechnicalSheetMusicDetails.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	156, // 348: ddex.ern.v432.TechnicalSoftwareDetails.operating_system_type:type_name -> ddex.ern.v432.OperatingSystemType
	10,  // 349: ddex.ern.v432.TechnicalSoftwareDetails.clip_details:type_name -> ddex.ern.v432.ClipDetails
	133, // 350: ddex.ern.v432.TechnicalSoftwareDetails.file:type_name -> ddex.ern.v432.File
	134, // 351: ddex.ern.v432.TechnicalSoftwareDetails.fingerprint:type_name -> ddex.ern.v432.Fingerprint
	208, // 352: ddex.ern.v432.TechnicalSoftwareDetails.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	3,   // 353: ddex.ern.v432.TechnicalSoundRecordingDetails.delivery_file:type_name -> ddex.ern.v432.AudioDeliveryFile
	74,  // 354: ddex.ern.v432.TechnicalSoundRecordingDetails.clip_details:type_name -> ddex.ern.v432.SoundRecordingClipDetails
	208, // 355: ddex.ern.v432.TechnicalSoundRecordingDetails.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	194, // 356: ddex.ern.v432.TechnicalTextDetails.text_codec_type:type_name -> ddex.ern.v432.TextCodecType
	10,  // 357: ddex.ern.v432.TechnicalTextDetails.clip_details:type_name -> ddex.ern.v432.ClipDetails
	133, // 358: ddex.ern.v432.TechnicalTextDetails.file:type_name -> ddex.ern.v432.File
	134, // 359: ddex.ern.v432.TechnicalTextDetails.fingerprint:type_name -> ddex.ern.v432.Fingerprint
	208, // 360: ddex.ern.v432.TechnicalTextDetails.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	103, // 361: ddex.ern.v432.TechnicalVideoDetails.overall_bit_rate:type_name -> ddex.ern.v432.BitRate
	94,  // 362: ddex.ern.v432.TechnicalVideoDetails.delivery_file:type_name -> ddex.ern.v432.VideoDeliveryFile
	93,  // 363: ddex.ern.v432.TechnicalVideoDetails.clip_details:type_name -> ddex.ern.v432.VideoClipDetails
	208, // 364: ddex.ern.v432.TechnicalVideoDetails.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	196, // 365: ddex.ern.v432.Text.type:type_name -> ddex.ern.v432.TextType
	195, // 366: ddex.ern.v432.Text.resource_id:type_name -> ddex.ern.v432.TextId
	154, // 367: ddex.ern.v432.Text.work_id:type_name -> ddex.ern.v432.MusicalWorkId
	30,  // 368: ddex.ern.v432.Text.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 369: ddex.ern.v432.Text.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 370: ddex.ern.v432.Text.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 371: ddex.ern.v432.Text.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	202, // 372: ddex.ern.v432.Text.version_type:type_name -> ddex.ern.v432.VersionType
	124, // 373: ddex.ern.v432.Text.display_artist_name:type_name -> ddex.ern.v432.DisplayArtistNameWithOriginalLanguage
	29,  // 374: ddex.ern.v432.Text.display_artist:type_name -> ddex.ern.v432.DisplayArtist
	110, // 375: ddex.ern.v432.Text.contributor:type_name -> ddex.ern.v432.Contributor
	66,  // 376: ddex.ern.v432.Text.resource_rights_controller:type_name -> ddex.ern.v432.ResourceRightsController
	97,  // 377: ddex.ern.v432.Text.work_rights_controller:type_name -> ddex.ern.v432.WorkRightsController
	104, // 378: ddex.ern.v432.Text.c_line:type_name -> ddex.ern.v432.CLine
	113, // 379: ddex.ern.v432.Text.courtesy_line:type_name -> ddex.ern.v432.CourtesyLine
	36,  // 380: ddex.ern.v432.Text.creation_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	138, // 381: ddex.ern.v432.Text.first_publication_date:type_name -> ddex.ern.v432.FulfillmentDate
	158, // 382: ddex.ern.v432.Text.parental_warning_type:type_name -> ddex.ern.v432.ParentalWarningTypeWithStandard
	53,  // 383: ddex.ern.v432.Text.related_release:type_name -> ddex.ern.v432.RelatedRelease
	54,  // 384: ddex.ern.v432.Text.related_resource:type_name -> ddex.ern.v432.RelatedResource
	215, // 385: ddex.ern.v432.Text.contains_a_i:type_name -> ddex.avs.ContainsAI
	177, // 386: ddex.ern.v432.Text.resource_contained_resource_reference_list:type_name -> ddex.ern.v432.ResourceContainedResourceReferenceList
	83,  // 387: ddex.ern.v432.Text.technical_details:type_name -> ddex.ern.v432.TechnicalTextDetails
	148, // 388: ddex.ern.v432.Text.language_of_text:type_name -> ddex.ern.v432.Language
	227, // 389: ddex.ern.v432.Title.title_type:type_name -> ddex.avs.AdditionalTitleType
	58,  // 390: ddex.ern.v432.TrackRelease.release_id:type_name -> ddex.ern.v432.ReleaseId
	30,  // 391: ddex.ern.v432.TrackRelease.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 392: ddex.ern.v432.TrackRelease.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 393: ddex.ern.v432.TrackRelease.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 394: ddex.ern.v432.TrackRelease.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	40,  // 395: ddex.ern.v432.TrackRelease.linked_release_resource_reference:type_name -> ddex.ern.v432.LinkedReleaseResourceReference
	60,  // 396: ddex.ern.v432.TrackRelease.release_label_reference:type_name -> ddex.ern.v432.ReleaseLabelReferenceWithParty
	141, // 397: ddex.ern.v432.TrackRelease.display_genre:type_name -> ddex.ern.v432.GenreWithTerritory
	53,  // 398: ddex.ern.v432.TrackRelease.related_release:type_name -> ddex.ern.v432.RelatedRelease
	54,  // 399: ddex.ern.v432.TrackRelease.related_resource:type_name -> ddex.ern.v432.RelatedResource
	147, // 400: ddex.ern.v432.TrackRelease.keywords:type_name -> ddex.ern.v432.KeywordsWithTerritory
	77,  // 401: ddex.ern.v432.TrackRelease.synopsis:type_name -> ddex.ern.v432.SynopsisWithTerritory
	149, // 402: ddex.ern.v432.TrackRelease.marketing_comment:type_name -> ddex.ern.v432.MarketingComment
	96,  // 403: ddex.ern.v432.Video.type:type_name -> ddex.ern.v432.VideoType
	95,  // 404: ddex.ern.v432.Video.video_edition:type_name -> ddex.ern.v432.VideoEdition
	52,  // 405: ddex.ern.v432.Video.recording_format:type_name -> ddex.ern.v432.RecordingFormat
	154, // 406: ddex.ern.v432.Video.work_id:type_name -> ddex.ern.v432.MusicalWorkId
	30,  // 407: ddex.ern.v432.Video.display_title_text:type_name -> ddex.ern.v432.DisplayTitleText
	128, // 408: ddex.ern.v432.Video.display_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 409: ddex.ern.v432.Video.formal_title:type_name -> ddex.ern.v432.DisplayTitle
	128, // 410: ddex.ern.v432.Video.grouping_title:type_name -> ddex.ern.v432.DisplayTitle
	202, // 411: ddex.ern.v432.Video.version_type:type_name -> ddex.ern.v432.VersionType
	124, // 412: ddex.ern.v432.Video.display_artist_name:type_name -> ddex.ern.v432.DisplayArtistNameWithOriginalLanguage
	29,  // 413: ddex.ern.v432.Video.display_artist:type_name -> ddex.ern.v432.DisplayArtist
	110, // 414: ddex.ern.v432.Video.contributor:type_name -> ddex.ern.v432.Contributor
	9,   // 415: ddex.ern.v432.Video.character:type_name -> ddex.ern.v432.Character
	66,  // 416: ddex.ern.v432.Video.resource_rights_controller:type_name -> ddex.ern.v432.ResourceRightsController
	97,  // 417: ddex.ern.v432.Video.work_rights_controller:type_name -> ddex.ern.v432.WorkRightsController
	113, // 418: ddex.ern.v432.Video.courtesy_line:type_name -> ddex.ern.v432.CourtesyLine
	36,  // 419: ddex.ern.v432.Video.creation_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	36,  // 420: ddex.ern.v432.Video.mastered_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	36,  // 421: ddex.ern.v432.Video.remastered_date:type_name -> ddex.ern.v432.EventDateWithoutFlags
	138, // 422: ddex.ern.v432.Video.first_publication_date:type_name -> ddex.ern.v432.FulfillmentDate
	158, // 423: ddex.ern.v432.Video.parental_warning_type:type_name -> ddex.ern.v432.ParentalWarningTypeWithStandard
	4,   // 424: ddex.ern.v432.Video.av_rating:type_name -> ddex.ern.v432.AvRating
	53,  // 425: ddex.ern.v432.Video.related_release:type_name -> ddex.ern.v432.RelatedRelease
	54,  // 426: ddex.ern.v432.Video.related_resource:type_name -> ddex.ern.v432.RelatedResource
	224, // 427: ddex.ern.v432.Video.composite_musical_work_type:type_name -> ddex.avs.CompositeMusicalWorkType
	215, // 428: ddex.ern.v432.Video.contains_a_i:type_name -> ddex.avs.ContainsAI
	126, // 429: ddex.ern.v432.Video.display_credits:type_name -> ddex.ern.v432.DisplayCredits
	148, // 430: ddex.ern.v432.Video.language_of_performance:type_name -> ddex.ern.v432.Language
	177, // 431: ddex.ern.v432.Video.resource_contained_resource_reference_list:type_name -> ddex.ern.v432.ResourceContainedResourceReferenceList
	108, // 432: ddex.ern.v432.VideoClipDetails.clip_type:type_name -> ddex.ern.v432.ClipType
	86,  // 433: ddex.ern.v432.VideoClipDetails.timing:type_name -> ddex.ern.v432.Timing
	209, // 434: ddex.ern.v432.VideoClipDetails.expression_type:type_name -> ddex.avs.ExpressionType
	94,  // 435: ddex.ern.v432.VideoClipDetails.delivery_file:type_name -> ddex.ern.v432.VideoDeliveryFile
	228, // 436: ddex.ern.v432.VideoDeliveryFile.type:type_name -> ddex.avs.DeliveryFileType
	109, // 437: ddex.ern.v432.VideoDeliveryFile.container_format:type_name -> ddex.ern.v432.ContainerFormat
	203, // 438: ddex.ern.v432.VideoDeliveryFile.video_codec_type:type_name -> ddex.ern.v432.VideoCodecType
	103, // 439: ddex.ern.v432.VideoDeliveryFile.video_bit_rate:type_name -> ddex.ern.v432.BitRate
	137, // 440: ddex.ern.v432.VideoDeliveryFile.frame_rate:type_name -> ddex.ern.v432.FrameRate
	131, // 441: ddex.ern.v432.VideoDeliveryFile.image_height:type_name -> ddex.ern.v432.Extent
	131, // 442: ddex.ern.v432.VideoDeliveryFile.image_width:type_name -> ddex.ern.v432.Extent
	101, // 443: ddex.ern.v432.VideoDeliveryFile.aspect_ratio:type_name -> ddex.ern.v432.AspectRatio
	14,  // 444: ddex.ern.v432.VideoDeliveryFile.core_area:type_name -> ddex.ern.v432.CoreArea
	204, // 445: ddex.ern.v432.VideoDeliveryFile.video_definition_type:type_name -> ddex.ern.v432.VideoDefinitionType
	102, // 446: ddex.ern.v432.VideoDeliveryFile.audio_codec_type:type_name -> ddex.ern.v432.AudioCodecType
	229, // 447: ddex.ern.v432.VideoDeliveryFile.electro_optical_transfer_function_type:type_name -> ddex.avs.ElectroOpticalTransferFunctionType
	230, // 448: ddex.ern.v432.VideoDeliveryFile.primary_color_type:type_name -> ddex.avs.PrimaryColorType
	38,  // 449: ddex.ern.v432.VideoDeliveryFile.hdr_video_dynamic_metadata_type:type_name -> ddex.ern.v432.HdrVideoDynamicMetadataType
	231, // 450: ddex.ern.v432.VideoDeliveryFile.hdr_video_static_metadata_type:type_name -> ddex.avs.HdrVideoStaticMetadataType
	103, // 451: ddex.ern.v432.VideoDeliveryFile.audio_bit_rate:type_name -> ddex.ern.v432.BitRate
	183, // 452: ddex.ern.v432.VideoDeliveryFile.audio_sampling_rate:type_name -> ddex.ern.v432.SamplingRate
	133, // 453: ddex.ern.v432.VideoDeliveryFile.file:type_name -> ddex.ern.v432.File
	134, // 454: ddex.ern.v432.VideoDeliveryFile.fingerprint:type_name -> ddex.ern.v432.Fingerprint
	225, // 455: ddex.ern.v432.VideoEdition.type:type_name -> ddex.avs.EditionType
	205, // 456: ddex.ern.v432.VideoEdition.resource_id:type_name -> ddex.ern.v432.VideoId
	32,  // 457: ddex.ern.v432.VideoEdition.edition_contributor:type_name -> ddex.ern.v432.EditionContributor
	157, // 458: ddex.ern.v432.VideoEdition.p_line:type_name -> ddex.ern.v432.PLine
	104, // 459: ddex.ern.v432.VideoEdition.c_line:type_name -> ddex.ern.v432.CLine
	226, // 460: ddex.ern.v432.VideoEdition.recording_mode:type_name -> ddex.avs.RecordingMode
	84,  // 461: ddex.ern.v432.VideoEdition.technical_details:type_name -> ddex.ern.v432.TechnicalVideoDetails
	221, // 462: ddex.ern.v432.WorkRightsController.rights_control_type:type_name -> ddex.avs.RightsControllerRole
	232, // 463: ddex.ern.v432.WorkRightsController.rights_controller_type:type_name -> ddex.avs.RightsControllerType
	100, // 464: ddex.ern.v432.WorkRightsController.territory:type_name -> ddex.ern.v432.AllTerritoryCode
	233, // 465: ddex.ern.v432.Affiliation.type:type_name -> ddex.avs.AffiliationType
	200, // 466: ddex.ern.v432.Affiliation.validity_period:type_name -> ddex.ern.v432.ValidityPeriod
	182, // 467: ddex.ern.v432.Affiliation.rights_type:type_name -> ddex.ern.v432.RightsType
	234, // 468: ddex.ern.v432.AllTerritoryCode.identifier_type:type_name -> ddex.avs.TerritoryCodeTypeIncludingDeprecatedCodes
	235, // 469: ddex.ern.v432.AspectRatio.aspect_ratio_type:type_name -> ddex.avs.AspectRatioType
	236, // 470: ddex.ern.v432.BitRate.unit_of_measure:type_name -> ddex.avs.UnitOfBitRate
	208, // 471: ddex.ern.v432.CLine.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	106, // 472: ddex.ern.v432.ChapterId.catalog_number:type_name -> ddex.ern.v432.CatalogNumber
	168, // 473: ddex.ern.v432.ChapterId.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	111, // 474: ddex.ern.v432.Contributor.role:type_name -> ddex.ern.v432.ContributorRole
	145, // 475: ddex.ern.v432.Contributor.instrument_type:type_name -> ddex.ern.v432.InstrumentType
	215, // 476: ddex.ern.v432.Contributor.ai_contribution:type_name -> ddex.avs.ContainsAI
	146, // 477: ddex.ern.v432.Contributor.is_credited:type_name -> ddex.ern.v432.IsCredited
	126, // 478: ddex.ern.v432.Contributor.display_credits:type_name -> ddex.ern.v432.DisplayCredits
	112, // 479: ddex.ern.v432.ContributorRole.value:type_name -> ddex.ern.v432.ContributorRoleValue
	145, // 480: ddex.ern.v432.ContributorRole.instrument_type:type_name -> ddex.ern.v432.InstrumentType
	208, // 481: ddex.ern.v432.CourtesyLine.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	237, // 482: ddex.ern.v432.CurrentTerritoryCode.identifier_type:type_name -> ddex.avs.TerritoryCodeType
	155, // 483: ddex.ern.v432.DSP.trading_name:type_name -> ddex.ern.v432.Name
	142, // 484: ddex.ern.v432.DetailedHashSum.algorithm:type_name -> ddex.ern.v432.HashSumAlgorithmType
	238, // 485: ddex.ern.v432.DetailedHashSum.data_type:type_name -> ddex.avs.BinaryDataType
	168, // 486: ddex.ern.v432.DetailedPartyId.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	208, // 487: ddex.ern.v432.DisplayArtistNameWithOriginalLanguage.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	208, // 488: ddex.ern.v432.DisplayCredits.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	239, // 489: ddex.ern.v432.DisplaySubTitle.sub_title_type:type_name -> ddex.avs.SubTitleType
	127, // 490: ddex.ern.v432.DisplayTitle.sub_title:type_name -> ddex.ern.v432.DisplaySubTitle
	208, // 491: ddex.ern.v432.DisplayTitle.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	216, // 492: ddex.ern.v432.EventDate.applicable_territory_code:type_name -> ddex.avs.AllTerritoryCode
	216, // 493: ddex.ern.v432.EventDateTime.territory_code:type_name -> ddex.avs.AllTerritoryCode
	240, // 494: ddex.ern.v432.Extent.unit_of_measure:type_name -> ddex.avs.UnitOfExtent
	122, // 495: ddex.ern.v432.File.hash_sum:type_name -> ddex.ern.v432.DetailedHashSum
	135, // 496: ddex.ern.v432.Fingerprint.algorithm:type_name -> ddex.ern.v432.FingerprintAlgorithmType
	208, // 497: ddex.ern.v432.FirstPublicationDate.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	241, // 498: ddex.ern.v432.FrameRate.unit_of_measure:type_name -> ddex.avs.UnitOfFrameRate
	208, // 499: ddex.ern.v432.FulfillmentDate.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	140, // 500: ddex.ern.v432.GenreCategory.value:type_name -> ddex.ern.v432.GenreCategoryValue
	198, // 501: ddex.ern.v432.GenreCategory.description:type_name -> ddex.ern.v432.TextWithoutTerritory
	208, // 502: ddex.ern.v432.GenreCategory.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	139, // 503: ddex.ern.v432.GenreWithTerritory.genre_category:type_name -> ddex.ern.v432.GenreCategory
	192, // 504: ddex.ern.v432.GenreWithTerritory.sub_genre_category:type_name -> ddex.ern.v432.SubGenreCategory
	208, // 505: ddex.ern.v432.GenreWithTerritory.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	208, // 506: ddex.ern.v432.KeywordsWithTerritory.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	208, // 507: ddex.ern.v432.MarketingComment.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	151, // 508: ddex.ern.v432.MessageAuditTrail.message_audit_trail_event:type_name -> ddex.ern.v432.MessageAuditTrailEvent
	153, // 509: ddex.ern.v432.MessageAuditTrailEvent.messaging_party_descriptor:type_name -> ddex.ern.v432.MessagingPartyWithoutCode
	153, // 510: ddex.ern.v432.MessageHeader.message_sender:type_name -> ddex.ern.v432.MessagingPartyWithoutCode
	153, // 511: ddex.ern.v432.MessageHeader.sent_on_behalf_of:type_name -> ddex.ern.v432.MessagingPartyWithoutCode
	153, // 512: ddex.ern.v432.MessageHeader.message_recipient:type_name -> ddex.ern.v432.MessagingPartyWithoutCode
	153, // 513: ddex.ern.v432.MessageHeader.sent_as_requested_by:type_name -> ddex.ern.v432.MessagingPartyWithoutCode
	150, // 514: ddex.ern.v432.MessageHeader.message_audit_trail:type_name -> ddex.ern.v432.MessageAuditTrail
	242, // 515: ddex.ern.v432.MessageHeader.message_control_type:type_name -> ddex.avs.MessageControlType
	160, // 516: ddex.ern.v432.MessagingPartyWithoutCode.party_name:type_name -> ddex.ern.v432.PartyNameWithoutCode
	168, // 517: ddex.ern.v432.MusicalWorkId.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	208, // 518: ddex.ern.v432.PLine.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	208, // 519: ddex.ern.v432.ParentalWarningTypeWithStandard.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	243, // 520: ddex.ern.v432.ParentalWarningTypeWithStandard.parental_warning_standard:type_name -> ddex.avs.ParentalWarningStandard
	155, // 521: ddex.ern.v432.PartyName.full_name:type_name -> ddex.ern.v432.Name
	155, // 522: ddex.ern.v432.PartyName.full_name_indexed:type_name -> ddex.ern.v432.Name
	155, // 523: ddex.ern.v432.PartyName.names_before_key_name:type_name -> ddex.ern.v432.Name
	155, // 524: ddex.ern.v432.PartyName.key_name:type_name -> ddex.ern.v432.Name
	155, // 525: ddex.ern.v432.PartyName.names_after_key_name:type_name -> ddex.ern.v432.Name
	155, // 526: ddex.ern.v432.PartyName.abbreviated_name:type_name -> ddex.ern.v432.Name
	244, // 527: ddex.ern.v432.Price.currency_code:type_name -> ddex.avs.CurrencyCode
	161, // 528: ddex.ern.v432.RelatedParty.party_relationship_type:type_name -> ddex.ern.v432.PartyRelationshipType
	169, // 529: ddex.ern.v432.ResourceContainedResourceReference.purpose:type_name -> ddex.ern.v432.Purpose
	176, // 530: ddex.ern.v432.ResourceContainedResourceReferenceList.resource_contained_resource_reference:type_name -> ddex.ern.v432.ResourceContainedResourceReference
	106, // 531: ddex.ern.v432.ResourceId.catalog_number:type_name -> ddex.ern.v432.CatalogNumber
	168, // 532: ddex.ern.v432.ResourceId.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	168, // 533: ddex.ern.v432.ResourceProprietaryId.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	245, // 534: ddex.ern.v432.SamplingRate.unit_of_measure:type_name -> ddex.avs.UnitOfFrequency
	168, // 535: ddex.ern.v432.SheetMusicId.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	106, // 536: ddex.ern.v432.SoundRecordingId.catalog_number:type_name -> ddex.ern.v432.CatalogNumber
	168, // 537: ddex.ern.v432.SoundRecordingId.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	193, // 538: ddex.ern.v432.SubGenreCategory.value:type_name -> ddex.ern.v432.SubGenreCategoryValue
	198, // 539: ddex.ern.v432.SubGenreCategory.description:type_name -> ddex.ern.v432.TextWithoutTerritory
	168, // 540: ddex.ern.v432.TextId.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	208, // 541: ddex.ern.v432.TextWithFormat.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	246, // 542: ddex.ern.v432.TextWithFormat.format:type_name -> ddex.avs.TextCodecType
	208, // 543: ddex.ern.v432.TextWithoutTerritory.applicable_territory_code:type_name -> ddex.avs.CurrentTerritoryCode
	246, // 544: ddex.ern.v432.TextWithoutTerritory.format:type_name -> ddex.avs.TextCodecType
	164, // 545: ddex.ern.v432.TitleDisplayInformation.prefix:type_name -> ddex.ern.v432.Prefix
	129, // 546: ddex.ern.v432.ValidityPeriod.start_date:type_name -> ddex.ern.v432.EventDate
	129, // 547: ddex.ern.v432.ValidityPeriod.end_date:type_name -> ddex.ern.v432.EventDate
	100, // 548: ddex.ern.v432.Venue.territory_code:type_name -> ddex.ern.v432.AllTerritoryCode
	106, // 549: ddex.ern.v432.VideoId.catalog_number:type_name -> ddex.ern.v432.CatalogNumber
	168, // 550: ddex.ern.v432.VideoId.proprietary_id:type_name -> ddex.ern.v432.ProprietaryId
	551, // [551:551] is the sub-list for method output_type
	551, // [551:551] is the sub-list for method input_type
	551, // [551:551] is the sub-list for extension type_name
	551, // [551:551] is the sub-list for extension extendee
	0,   // [0:551] is the sub-list for field type_name
}

func init() { file_ddex_ern_v432_v432_proto_init() }
func file_ddex_ern_v432_v432_proto_init() {
	if File_ddex_ern_v432_v432_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ddex_ern_v432_v432_proto_rawDesc), len(file_ddex_ern_v432_v432_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   206,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ddex_ern_v432_v432_proto_goTypes,
		DependencyIndexes: file_ddex_ern_v432_v432_proto_depIdxs,
		MessageInfos:      file_ddex_ern_v432_v432_proto_msgTypes,
	}.Build()
	File_ddex_ern_v432_v432_proto = out.File
	file_ddex_ern_v432_v432_proto_goTypes = nil
	file_ddex_ern_v432_v432_proto_depIdxs = nil
}
